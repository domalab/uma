name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Run go vet
      run: go vet ./...
      
    - name: Run staticcheck
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck ./... || echo "Staticcheck completed with warnings"
        
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=10m --max-issues-per-linter=50 --max-same-issues=10
      continue-on-error: true
        
    - name: Run tests
      run: go test -v ./...
      
    - name: Build binary
      run: |
        GOOS=linux GOARCH=amd64 go build -o uma-linux-amd64
        ls -la uma-linux-amd64
        
    - name: Check binary size
      run: |
        SIZE=$(stat -c%s uma-linux-amd64)
        SIZE_MB=$((SIZE / 1024 / 1024))
        echo "Binary size: ${SIZE_MB}MB"
        if [ $SIZE_MB -gt 25 ]; then
          echo "Warning: Binary size (${SIZE_MB}MB) exceeds 25MB"
          exit 1
        fi
        
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Run Gosec Security Scanner
      run: |
        go install github.com/securego/gosec/v2/cmd/gosec@latest
        gosec -fmt sarif -out gosec.sarif ./... || echo "Security scan completed with warnings"
      continue-on-error: true

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: gosec.sarif
      if: always()
      continue-on-error: true
        
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Run Nancy vulnerability scanner
      run: |
        go install github.com/sonatypecommunity/nancy@latest || echo "Failed to install Nancy"
        go list -json -deps ./... | nancy sleuth || echo "Nancy scan completed with warnings"
      continue-on-error: true

    - name: Check for known vulnerabilities
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./... || echo "Vulnerability check completed with warnings"
      continue-on-error: true
