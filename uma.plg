<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name        "uma">
<!ENTITY author      "Ruaan Deysel">
<!ENTITY version     "2025.06.22">
<!ENTITY launch      "Settings/&name;">
<!ENTITY pluginURL   "https://github.com/domalab/uma/releases/latest/download/&name;.plg">
<!ENTITY bundle      "&name;-&version;.tgz">
<!ENTITY md5         "0299411adfea96d6f6c4a158d524acab">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         launch="&launch;"
         pluginURL="&pluginURL;"
         min="6.9.0"
         icon="uma.png"
         support="https://github.com/domalab/uma"
         category="Utilities"
>

<CHANGES>

###2025.06.22
- Added Model Context Protocol (MCP) Server Support
- 50+ auto-discovered MCP tools from REST API endpoints
- JSON-RPC 2.0 over WebSocket on configurable port (default: 34800)
- AI assistant integration with Claude Desktop, Python, and JavaScript examples
- Comprehensive MCP documentation and troubleshooting guide
- Zero conflicts with existing REST API and WebSocket functionality
- Production-tested on real Unraid hardware with full validation
- Optimized logging system for Unraid disk space conservation
- Disabled log file backups (no uma.log.1, uma.log.2, etc.) to prevent disk space issues
- Set 10MB maximum log file size with automatic truncation when limit reached
- Added automatic cleanup of existing backup log files on startup
- Implemented real-time log file size monitoring and disk usage reporting
- Enhanced configuration validation to prevent backup file creation
- Maintains all UMA functionality while minimizing /var/log disk usage

###2025.06.16
- Phase 3 Enhanced Features: JWT Authentication, Chi Router, Viper Configuration
- Added configurable HTTP port setting (default: 34600)
- Added "Open Web UI" button for direct access to Swagger API documentation
- Enhanced plugin interface with port validation and reserved port warnings
- Optimized binary size to 14.4MB with all Phase 1-3 features
- Improved service management with proper port configuration
- Added backward compatibility for existing installations

###2025.06.15
- Initial UMA (Unraid Management Agent) release
- Comprehensive monitoring and control system for Unraid servers
- REST API with OpenAPI 3.1.1 documentation
- WebSocket support for real-time monitoring
- Prometheus metrics collection
- Structured logging with Zerolog

</CHANGES>

<!--
UMA (Unraid Management Agent) is a comprehensive monitoring and control system for Unraid servers.

Phase 3 Enhanced Features:
- JWT Authentication with role-based access control
- Enhanced routing with Chi router and middleware
- Configuration management with Viper and hot reload
- Optimized 14.4MB binary (28% under 20MB target)
- Configurable HTTP port with validation
- Direct Web UI access to Swagger API documentation
- 100% backward compatibility maintained
-->

<!--
Get the UMA bundle.
-->
<FILE Name="/boot/config/plugins/&name;/&bundle;">
<URL>"https://github.com/domalab/&name;/releases/download/&version;/&bundle;"</URL>
<MD5>&md5;</MD5>
</FILE>

<!-- Install default plugin cfg  -->
<FILE Name="/boot/config/plugins/&name;/&name;.cfg">
<INLINE>
<![CDATA[
SERVICE="enable"
PORT="34600"
]]>
</INLINE>
</FILE>

<!-- Install default plugin env  -->
<FILE Name="/boot/config/plugins/&name;/&name;.env">
<INLINE>
<![CDATA[

]]>
</INLINE>
</FILE>

<!--
Prepare for installation.
-->
<FILE Run="/bin/bash">
<INLINE>
running=$(pidof &name; | wc -w)

killall uma 2>/dev/null

# Remove emhttp files so we can re-install.
rm -rf /usr/local/emhttp/plugins/&name;/* 2>/dev/null

# Remove old 'bundle' files.
rm -f $(ls /boot/config/plugins/&name;/&name;*.tgz 2>/dev/null | grep -v '&version;.tgz')

# Install the 'bundle'.
tar -xf /boot/config/plugins/&name;/&bundle; -C /usr/local/emhttp/plugins

# start the plugin if it was running previously
if [ $running -eq 1 ]; then
	/usr/local/emhttp/plugins/&name;/scripts/start
fi

echo ""
echo "-----------------------------------------------------------"
echo " &name; has been installed."
echo " Copyright (c) &author;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
/usr/local/emhttp/plugins/&name;/scripts/stop
# Remove all plugin files.
rm -rf /usr/local/emhttp/plugins/&name;
rm -rf /boot/config/plugins/&name;

echo ""
echo "-----------------------------------------------------------"
echo " &name; has been removed."
echo " Copyright (c) &author;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

<FILE Name="/tmp/&name;-chkconf" Run="/bin/bash">
<INLINE>
<![CDATA[
#!/bin/sh
# This will check each entry in the config so nothing is missing, and if missing, sets to default
CFGFILE=/boot/config/plugins/uma/uma.cfg
[ ! `cat "$CFGFILE" | grep SERVICE` ] && echo "SERVICE=\"enable\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep ^PORT` ] && echo "PORT=\"34600\"" >> "$CFGFILE"
rm /tmp/uma-chkconf
]]>
</INLINE>
</FILE>

</PLUGIN>
