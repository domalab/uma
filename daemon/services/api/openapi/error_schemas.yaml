openapi: 3.1.1
info:
  title: UMA Error Schemas
  version: 1.0.0
  description: Comprehensive error response schemas for the UMA API

components:
  schemas:
    ErrorCode:
      type: string
      enum:
        # General errors
        - INVALID_REQUEST
        - UNAUTHORIZED
        - FORBIDDEN
        - NOT_FOUND
        - CONFLICT
        - INTERNAL_ERROR
        - SERVICE_UNAVAILABLE
        - RATE_LIMIT_EXCEEDED
        
        # Validation errors
        - VALIDATION_FAILED
        - MISSING_PARAMETER
        - INVALID_PARAMETER
        - PARAMETER_OUT_OF_RANGE
        
        # Storage/Array errors
        - ARRAY_NOT_STOPPED
        - ARRAY_NOT_STARTED
        - ARRAY_INVALID_STATE
        - DISK_NOT_FOUND
        - DISK_OFFLINE
        - DISK_READ_ONLY
        - PARITY_CHECK_ACTIVE
        - PARITY_CHECK_FAILED
        - INSUFFICIENT_SPACE
        
        # Docker errors
        - CONTAINER_NOT_FOUND
        - CONTAINER_NOT_RUNNING
        - CONTAINER_NOT_STOPPED
        - DOCKER_DAEMON_ERROR
        - IMAGE_NOT_FOUND
        - NETWORK_NOT_FOUND
        
        # VM errors
        - VM_NOT_FOUND
        - VM_NOT_RUNNING
        - VM_NOT_STOPPED
        - VM_CONFIG_ERROR
        - VIRT_MANAGER_ERROR
        
        # System errors
        - SYSTEM_NOT_READY
        - COMMAND_FAILED
        - PERMISSION_DENIED
        - RESOURCE_BUSY
        - HARDWARE_ERROR
        
        # Async operation errors
        - OPERATION_NOT_FOUND
        - OPERATION_NOT_CANCELLABLE
        - OPERATION_CONFLICT
        - OPERATION_TIMEOUT
        - MAX_OPERATIONS_REACHED
        
        # Authentication errors
        - INVALID_CREDENTIALS
        - TOKEN_EXPIRED
        - TOKEN_INVALID
        - SESSION_EXPIRED
        
        # Configuration errors
        - CONFIG_NOT_FOUND
        - CONFIG_INVALID
        - CONFIG_READ_ONLY
      description: Standardized error codes for the UMA API

    APIError:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              $ref: '#/components/schemas/ErrorCode'
            message:
              type: string
              description: Human-readable error message
              example: "Operation not found"
            details:
              type: object
              nullable: true
              description: Additional error context and debugging information
              additionalProperties: true
              properties:
                # Common detail fields
                resource_id:
                  type: string
                  description: ID of the resource that caused the error
                resource_type:
                  type: string
                  description: Type of resource (disk, container, vm, operation, etc.)
                operation_type:
                  type: string
                  description: Type of operation that failed
                client_ip:
                  type: string
                  description: Client IP address for rate limiting errors
                
                # Validation error details
                validation_errors:
                  type: array
                  items:
                    $ref: '#/components/schemas/ValidationError'
                  description: Detailed validation errors for each field
                
                # Operation conflict details
                conflicting_operation:
                  type: string
                  description: ID or type of conflicting operation
                
                # Rate limiting details
                limit:
                  type: object
                  properties:
                    requests:
                      type: integer
                    window:
                      type: string
                  description: Rate limit that was exceeded
        meta:
          $ref: '#/components/schemas/StandardResponseMeta'
      required:
        - error
        - meta

    ValidationError:
      type: object
      properties:
        field:
          type: string
          description: Name of the field that failed validation
          example: "container_id"
        value:
          description: The invalid value that was provided
          example: "invalid-container-id"
        message:
          type: string
          description: Human-readable validation error message
          example: "Invalid container ID format (expected: 12-64 hex characters)"
        code:
          type: string
          description: Validation error code for programmatic handling
          example: "INVALID_FORMAT"
      required:
        - field
        - message

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/APIError'
        - type: object
          properties:
            error:
              type: object
              properties:
                code:
                  type: string
                  enum: [VALIDATION_FAILED]
                details:
                  type: object
                  properties:
                    validation_errors:
                      type: array
                      items:
                        $ref: '#/components/schemas/ValidationError'
                      minItems: 1

    # Specific error response types for common scenarios
    ResourceNotFoundError:
      allOf:
        - $ref: '#/components/schemas/APIError'
        - type: object
          properties:
            error:
              type: object
              properties:
                code:
                  type: string
                  enum: 
                    - DISK_NOT_FOUND
                    - CONTAINER_NOT_FOUND
                    - VM_NOT_FOUND
                    - OPERATION_NOT_FOUND
                details:
                  type: object
                  properties:
                    resource_id:
                      type: string
                      description: ID of the resource that was not found
                    resource_type:
                      type: string
                      description: Type of resource (disk, container, vm, operation)

    ConflictError:
      allOf:
        - $ref: '#/components/schemas/APIError'
        - type: object
          properties:
            error:
              type: object
              properties:
                code:
                  type: string
                  enum:
                    - ARRAY_NOT_STOPPED
                    - ARRAY_NOT_STARTED
                    - OPERATION_CONFLICT
                    - PARITY_CHECK_ACTIVE
                details:
                  type: object
                  properties:
                    conflicting_operation:
                      type: string
                      description: ID or description of the conflicting operation
                    required_state:
                      type: string
                      description: Required state for the operation to proceed

    RateLimitError:
      allOf:
        - $ref: '#/components/schemas/APIError'
        - type: object
          properties:
            error:
              type: object
              properties:
                code:
                  type: string
                  enum: [RATE_LIMIT_EXCEEDED]
                details:
                  type: object
                  properties:
                    operation_type:
                      type: string
                      description: The operation type that was rate limited
                    client_ip:
                      type: string
                      description: The client IP that was rate limited
                    limit:
                      type: object
                      properties:
                        requests:
                          type: integer
                          description: Number of requests allowed
                        window:
                          type: string
                          description: Time window for the rate limit
                    retry_after:
                      type: integer
                      description: Seconds to wait before retrying

    AuthenticationError:
      allOf:
        - $ref: '#/components/schemas/APIError'
        - type: object
          properties:
            error:
              type: object
              properties:
                code:
                  type: string
                  enum:
                    - UNAUTHORIZED
                    - FORBIDDEN
                    - INVALID_CREDENTIALS
                    - TOKEN_EXPIRED
                    - TOKEN_INVALID
                    - SESSION_EXPIRED
                details:
                  type: object
                  properties:
                    required_permissions:
                      type: array
                      items:
                        type: string
                      description: Permissions required for this operation
                    token_type:
                      type: string
                      description: Type of authentication token

    SystemError:
      allOf:
        - $ref: '#/components/schemas/APIError'
        - type: object
          properties:
            error:
              type: object
              properties:
                code:
                  type: string
                  enum:
                    - SYSTEM_NOT_READY
                    - COMMAND_FAILED
                    - PERMISSION_DENIED
                    - RESOURCE_BUSY
                    - HARDWARE_ERROR
                    - DOCKER_DAEMON_ERROR
                    - VIRT_MANAGER_ERROR
                details:
                  type: object
                  properties:
                    command:
                      type: string
                      description: System command that failed
                    exit_code:
                      type: integer
                      description: Exit code of failed command
                    stderr:
                      type: string
                      description: Error output from failed command

    StandardResponseMeta:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
          description: Unix timestamp of the response
        request_id:
          type: string
          description: Unique request identifier for tracing
        api_version:
          type: string
          example: "v1"
          description: API version
      required:
        - timestamp
        - api_version

  # Response examples for documentation
  examples:
    ValidationErrorExample:
      summary: Validation error with multiple field errors
      value:
        error:
          code: "VALIDATION_FAILED"
          message: "validation failed for 2 fields"
          details:
            validation_errors:
              - field: "container_id"
                value: "invalid-id"
                message: "Invalid container ID format (expected: 12-64 hex characters)"
                code: "INVALID_FORMAT"
              - field: "operation"
                value: "invalid-op"
                message: "Invalid operation 'invalid-op', must be one of: start, stop, restart"
                code: "INVALID_VALUE"
        meta:
          timestamp: 1640995200
          request_id: "req-123456"
          api_version: "v1"

    OperationConflictExample:
      summary: Operation conflict error
      value:
        error:
          code: "OPERATION_CONFLICT"
          message: "Cannot start parity_check operation: conflicting operation existing_parity_check is already running"
          details:
            operation_type: "parity_check"
            conflicting_operation: "existing_parity_check"
        meta:
          timestamp: 1640995200
          request_id: "req-123456"
          api_version: "v1"

    RateLimitExceededExample:
      summary: Rate limit exceeded error
      value:
        error:
          code: "RATE_LIMIT_EXCEEDED"
          message: "Operation-specific rate limit exceeded"
          details:
            operation_type: "smart_data"
            client_ip: "192.168.1.100"
            limit:
              requests: 1
              window: "1m0s"
            retry_after: 45
        meta:
          timestamp: 1640995200
          request_id: "req-123456"
          api_version: "v1"

    ResourceNotFoundExample:
      summary: Resource not found error
      value:
        error:
          code: "OPERATION_NOT_FOUND"
          message: "Operation not found"
          details:
            resource_id: "4a799a05-bb59-42a1-ab3b-d4ccbfdc623f"
            resource_type: "operation"
        meta:
          timestamp: 1640995200
          request_id: "req-123456"
          api_version: "v1"
