{
  "openapi": "3.0.3",
  "info": {
    "description": "Auto-generated OpenAPI specification from live API responses",
    "title": "UMA API - Generated",
    "version": "1.0.0-generated"
  },
  "servers": [
    {
      "description": "Live API server",
      "url": "http://192.168.20.21:34600"
    }
  ],
  "paths": {
    "/api/v1/auth/login": {
      "get": {
        "description": "Auto-generated schema for /api/v1/auth/login",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/auth/stats": {
      "get": {
        "description": "Auto-generated schema for /api/v1/auth/stats",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/auth/users": {
      "get": {
        "description": "Auto-generated schema for /api/v1/auth/users",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/diagnostics/health": {
      "get": {
        "description": "Auto-generated schema for /api/v1/diagnostics/health",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "checks": [
                    {
                      "category": "array",
                      "critical": false,
                      "message": "Array is not active",
                      "name": "Array State",
                      "remediation": "Start the array from Unraid web interface",
                      "status": "warning",
                      "timestamp": "2025-06-22T18:33:52.961205196+10:00"
                    },
                    {
                      "category": "array",
                      "critical": false,
                      "message": "No array errors detected",
                      "name": "Array Errors",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:52.961962941+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": false,
                      "message": "Disk health is good",
                      "name": "Disk Health (sda)",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:52.982429698+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": true,
                      "message": "Disk health check failed",
                      "name": "Disk Health (sdb)",
                      "remediation": "Check disk SMART attributes and consider replacement",
                      "status": "critical",
                      "timestamp": "2025-06-22T18:33:53.04002759+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": false,
                      "message": "Disk health is good",
                      "name": "Disk Health (sdc)",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.052731795+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": false,
                      "message": "Disk health is good",
                      "name": "Disk Health (sdd)",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.072751761+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": false,
                      "message": "Disk health is good",
                      "name": "Disk Health (sde)",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.122729055+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": false,
                      "message": "Disk health is good",
                      "name": "Disk Health (sdf)",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.167379274+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": false,
                      "message": "Disk health is good",
                      "name": "Disk Health (sdg)",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.191521757+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": true,
                      "message": "Disk health check failed",
                      "name": "Disk Health (md1p1)",
                      "remediation": "Check disk SMART attributes and consider replacement",
                      "status": "critical",
                      "timestamp": "2025-06-22T18:33:53.227741548+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": true,
                      "message": "Disk health check failed",
                      "name": "Disk Health (md2p1)",
                      "remediation": "Check disk SMART attributes and consider replacement",
                      "status": "critical",
                      "timestamp": "2025-06-22T18:33:53.237648772+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": true,
                      "message": "Disk health check failed",
                      "name": "Disk Health (md3p1)",
                      "remediation": "Check disk SMART attributes and consider replacement",
                      "status": "critical",
                      "timestamp": "2025-06-22T18:33:53.247472661+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": true,
                      "message": "Disk health check failed",
                      "name": "Disk Health (md4p1)",
                      "remediation": "Check disk SMART attributes and consider replacement",
                      "status": "critical",
                      "timestamp": "2025-06-22T18:33:53.25735519+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": false,
                      "message": "Disk health is good",
                      "name": "Disk Health (nvme0n1)",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.267193245+10:00"
                    },
                    {
                      "category": "system",
                      "critical": false,
                      "message": "Memory usage is normal (21.4%)",
                      "name": "Memory Usage",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.292795956+10:00"
                    },
                    {
                      "category": "system",
                      "critical": false,
                      "message": "CPU temperature is normal (43Â°C)",
                      "name": "CPU Temperature",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.292838578+10:00"
                    },
                    {
                      "category": "network",
                      "critical": false,
                      "message": "Network connectivity is working",
                      "name": "Network Connectivity",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.302440909+10:00"
                    },
                    {
                      "category": "network",
                      "critical": false,
                      "message": "15 network interfaces are active",
                      "name": "Network Interfaces",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.31775091+10:00"
                    },
                    {
                      "category": "docker",
                      "critical": false,
                      "message": "Docker service is not running",
                      "name": "Docker Service",
                      "remediation": "Start Docker service: systemctl start docker",
                      "status": "warning",
                      "timestamp": "2025-06-22T18:33:53.319857283+10:00"
                    },
                    {
                      "category": "services",
                      "critical": false,
                      "message": "sshd service is not running",
                      "name": "Service: sshd",
                      "remediation": "Start service: systemctl start sshd",
                      "status": "warning",
                      "timestamp": "2025-06-22T18:33:53.319911302+10:00"
                    },
                    {
                      "category": "services",
                      "critical": false,
                      "message": "nginx service is not running",
                      "name": "Service: nginx",
                      "remediation": "Start service: systemctl start nginx",
                      "status": "warning",
                      "timestamp": "2025-06-22T18:33:53.319951594+10:00"
                    },
                    {
                      "category": "services",
                      "critical": false,
                      "message": "smbd service is not running",
                      "name": "Service: smbd",
                      "remediation": "Start service: systemctl start smbd",
                      "status": "warning",
                      "timestamp": "2025-06-22T18:33:53.319982614+10:00"
                    },
                    {
                      "category": "services",
                      "critical": false,
                      "message": "nfsd service is not running",
                      "name": "Service: nfsd",
                      "remediation": "Start service: systemctl start nfsd",
                      "status": "warning",
                      "timestamp": "2025-06-22T18:33:53.320017562+10:00"
                    },
                    {
                      "category": "storage",
                      "critical": false,
                      "message": "Root filesystem usage is normal (5%)",
                      "name": "Root Filesystem Space",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.320049824+10:00"
                    },
                    {
                      "category": "system",
                      "critical": false,
                      "message": "No recent critical errors in logs",
                      "name": "System Logs",
                      "status": "passed",
                      "timestamp": "2025-06-22T18:33:53.320759732+10:00"
                    },
                    {
                      "category": "security",
                      "critical": false,
                      "message": "SSH root login may be enabled",
                      "name": "SSH Security",
                      "remediation": "Consider disabling SSH root login for security",
                      "status": "warning",
                      "timestamp": "2025-06-22T18:33:53.32118947+10:00"
                    }
                  ],
                  "overall_status": "critical",
                  "summary": {
                    "critical": 5,
                    "failed": 0,
                    "passed": 14,
                    "total": 26,
                    "warning": 7
                  },
                  "timestamp": "2025-06-22T18:33:52.961204009+10:00"
                },
                "schema": {
                  "properties": {
                    "checks": {
                      "items": {
                        "properties": {
                          "category": {
                            "type": "string"
                          },
                          "critical": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "remediation": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "timestamp": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "category",
                          "critical",
                          "message",
                          "name",
                          "remediation",
                          "status",
                          "timestamp"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "overall_status": {
                      "type": "string"
                    },
                    "summary": {
                      "properties": {
                        "critical": {
                          "type": "integer"
                        },
                        "failed": {
                          "type": "integer"
                        },
                        "passed": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "warning": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "critical",
                        "failed",
                        "passed",
                        "total",
                        "warning"
                      ],
                      "type": "object"
                    },
                    "timestamp": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "checks",
                    "overall_status",
                    "summary",
                    "timestamp"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/diagnostics/info": {
      "get": {
        "description": "Auto-generated schema for /api/v1/diagnostics/info",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "category": "system",
                    "description": "System uptime in seconds",
                    "name": "uptime",
                    "status": "normal",
                    "unit": "seconds",
                    "value": 532290.22
                  },
                  {
                    "category": "system",
                    "description": "1-minute load average",
                    "name": "load_average_1min",
                    "status": "normal",
                    "threshold": {
                      "critical": 4,
                      "warning": 2
                    },
                    "value": 1.02
                  },
                  {
                    "category": "storage",
                    "description": "Disk usage for /",
                    "name": "disk_usage__",
                    "status": "normal",
                    "threshold": {
                      "critical": 90,
                      "warning": 80
                    },
                    "unit": "%",
                    "value": 5
                  },
                  {
                    "category": "storage",
                    "description": "Disk usage for /boot",
                    "name": "disk_usage__boot",
                    "status": "normal",
                    "threshold": {
                      "critical": 90,
                      "warning": 80
                    },
                    "unit": "%",
                    "value": 7
                  },
                  {
                    "category": "storage",
                    "description": "Disk usage for /var/log",
                    "name": "disk_usage__var_log",
                    "status": "normal",
                    "threshold": {
                      "critical": 90,
                      "warning": 80
                    },
                    "unit": "%",
                    "value": 10
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on tunl0",
                    "name": "interface_tunl0_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on tunl0",
                    "name": "interface_tunl0_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on wlan0",
                    "name": "interface_wlan0_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on wlan0",
                    "name": "interface_wlan0_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on eth0",
                    "name": "interface_eth0_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 36759410705
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on eth0",
                    "name": "interface_eth0_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 2730641015
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on eth1",
                    "name": "interface_eth1_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on eth1",
                    "name": "interface_eth1_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on br0",
                    "name": "interface_br0_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 33811879843
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on br0",
                    "name": "interface_br0_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 2153768469
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on vhost1",
                    "name": "interface_vhost1_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on vhost1",
                    "name": "interface_vhost1_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on docker0",
                    "name": "interface_docker0_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on docker0",
                    "name": "interface_docker0_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on br-3cc0fa14431c",
                    "name": "interface_br-3cc0fa14431c_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 716019495
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on br-3cc0fa14431c",
                    "name": "interface_br-3cc0fa14431c_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 28062883645
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on br-f063b8e6a1ab",
                    "name": "interface_br-f063b8e6a1ab_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on br-f063b8e6a1ab",
                    "name": "interface_br-f063b8e6a1ab_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on shim-br0",
                    "name": "interface_shim-br0_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 33720663784
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on shim-br0",
                    "name": "interface_shim-br0_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 1766234135
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on virbr0",
                    "name": "interface_virbr0_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on virbr0",
                    "name": "interface_virbr0_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 2000
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on vnet0",
                    "name": "interface_vnet0_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 536915037
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on vnet0",
                    "name": "interface_vnet0_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 2041022900
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on vnet1",
                    "name": "interface_vnet1_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on vnet1",
                    "name": "interface_vnet1_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 196
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on veth7940057",
                    "name": "interface_veth7940057_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 5601131
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on veth7940057",
                    "name": "interface_veth7940057_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 5134227
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on veth4e783c4",
                    "name": "interface_veth4e783c4_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 2928827
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on veth4e783c4",
                    "name": "interface_veth4e783c4_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 10266762
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on veth49632a1",
                    "name": "interface_veth49632a1_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 25603
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on veth49632a1",
                    "name": "interface_veth49632a1_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 3361838
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on veth88208dc",
                    "name": "interface_veth88208dc_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on veth88208dc",
                    "name": "interface_veth88208dc_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 3308866
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on veth2cd6a79",
                    "name": "interface_veth2cd6a79_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 0
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on veth2cd6a79",
                    "name": "interface_veth2cd6a79_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 3303116
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on veth2c99be2",
                    "name": "interface_veth2c99be2_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 92192
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on veth2c99be2",
                    "name": "interface_veth2c99be2_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 3477587
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on veth35fcd22",
                    "name": "interface_veth35fcd22_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 3751549
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on veth35fcd22",
                    "name": "interface_veth35fcd22_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 61886571
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on vethcccf285",
                    "name": "interface_vethcccf285_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 3518490
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on vethcccf285",
                    "name": "interface_vethcccf285_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 3787210
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on veth9144fc0",
                    "name": "interface_veth9144fc0_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 4266000
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on veth9144fc0",
                    "name": "interface_veth9144fc0_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 37996642
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on veth9acab88",
                    "name": "interface_veth9acab88_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 707032
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on veth9acab88",
                    "name": "interface_veth9acab88_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 3810181
                  },
                  {
                    "category": "network",
                    "description": "Bytes received on vethf5db0b6",
                    "name": "interface_vethf5db0b6_rx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 6631238
                  },
                  {
                    "category": "network",
                    "description": "Bytes transmitted on vethf5db0b6",
                    "name": "interface_vethf5db0b6_tx_bytes",
                    "status": "normal",
                    "unit": "bytes",
                    "value": 726797
                  },
                  {
                    "category": "performance",
                    "description": "CPU temperature",
                    "name": "cpu_temperature",
                    "status": "normal",
                    "threshold": {
                      "critical": 85,
                      "warning": 75
                    },
                    "unit": "Â°C",
                    "value": 41
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "category": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "unit": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "category",
                      "description",
                      "name",
                      "status",
                      "unit",
                      "value"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/diagnostics/repair": {
      "get": {
        "description": "Auto-generated schema for /api/v1/diagnostics/repair",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "category": "maintenance",
                    "commands": [
                      "journalctl --vacuum-time=7d",
                      "find /var/log -name '*.log' -mtime +7 -delete"
                    ],
                    "dangerous": false,
                    "description": "Clear old system logs to free up space",
                    "name": "clear_system_logs"
                  },
                  {
                    "category": "docker",
                    "commands": [
                      "systemctl restart docker"
                    ],
                    "dangerous": false,
                    "description": "Restart Docker service to resolve container issues",
                    "name": "restart_docker"
                  },
                  {
                    "category": "docker",
                    "commands": [
                      "docker system prune -f"
                    ],
                    "dangerous": false,
                    "description": "Clean up Docker images and containers",
                    "name": "clear_docker_cache"
                  },
                  {
                    "category": "array",
                    "commands": [
                      "newperms /mnt/user"
                    ],
                    "dangerous": false,
                    "description": "Fix Unraid array permissions",
                    "name": "fix_array_permissions"
                  },
                  {
                    "category": "network",
                    "commands": [
                      "systemctl restart networking"
                    ],
                    "dangerous": true,
                    "description": "Restart network services",
                    "name": "restart_network"
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "category": {
                        "type": "string"
                      },
                      "commands": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "dangerous": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "category",
                      "commands",
                      "dangerous",
                      "description",
                      "name"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/docker/containers": {
      "get": {
        "description": "Auto-generated schema for /api/v1/docker/containers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "created": "2025-06-22T07:00:46.810652056Z",
                    "environment": [
                      "AUTO_UPDATE=true",
                      "RUN_OPTS=",
                      "PUID=99",
                      "UMASK=022",
                      "TZ=Australia/Brisbane",
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=jackett",
                      "PGID=100",
                      "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                      "HOME=/root",
                      "TERM=xterm",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_VERBOSITY=1",
                      "S6_STAGE2_HOOK=/docker-mods",
                      "VIRTUAL_ENV=/lsiopy",
                      "LSIO_FIRST_PARTY=true",
                      "XDG_DATA_HOME=/config",
                      "XDG_CONFIG_HOME=/config",
                      "TMPDIR=/run/jackett-temp"
                    ],
                    "id": "efc18f02f3a3e67dd4466d8baf7b3bc463df124cfda7b5995ba0b0d8adddcc68",
                    "image": "lscr.io/linuxserver/jackett",
                    "labels": {
                      "build_version": "Linuxserver.io version:- v0.22.2037-ls67 Build-date:- 2025-06-22T06:52:41+00:00",
                      "maintainer": "thelamer",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jackett-logo.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:9117]",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-22T06:52:41+00:00",
                      "org.opencontainers.image.description": "[Jackett](https://github.com/Jackett/Jackett) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping \u0026 translation logic - removing the burden from other apps.",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-jackett",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "e3c734600bf7f081ce357dbda29668fb3f975922",
                      "org.opencontainers.image.revision": "e3c734600bf7f081ce357dbda29668fb3f975922",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-jackett",
                      "org.opencontainers.image.title": "Jackett",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-jackett/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "v0.22.2037-ls67"
                    },
                    "mounts": null,
                    "name": "jackett",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.12",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "9117",
                        "host_ip": "",
                        "host_port": "9117",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-22T07:00:47.012965961Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-06-21T07:01:12.706408503Z",
                    "environment": [
                      "HOST_CONTAINERNAME=sonarr",
                      "PUID=99",
                      "PGID=100",
                      "TZ=Australia/Brisbane",
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                      "HOME=/root",
                      "TERM=xterm",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_VERBOSITY=1",
                      "S6_STAGE2_HOOK=/docker-mods",
                      "VIRTUAL_ENV=/lsiopy",
                      "LSIO_FIRST_PARTY=true",
                      "XDG_CONFIG_HOME=/config/xdg",
                      "SONARR_CHANNEL=v4-stable",
                      "SONARR_BRANCH=main",
                      "COMPlus_EnableDiagnostics=0",
                      "TMPDIR=/run/sonarr-temp"
                    ],
                    "id": "74914585b15777b511dde000d42d25cd549f70d673c18cbb6bac38aa1ee4ca16",
                    "image": "linuxserver/sonarr:latest",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 4.0.15.2941-ls285 Build-date:- 2025-06-20T17:50:01+00:00",
                      "maintainer": "thespad",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-icon.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:8989]/",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-20T17:50:01+00:00",
                      "org.opencontainers.image.description": "[Sonarr](https://sonarr.tv/) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.  ",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-sonarr",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "9fd50e19407a4f6a62ccddc284cda66f06dd8535",
                      "org.opencontainers.image.revision": "9fd50e19407a4f6a62ccddc284cda66f06dd8535",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-sonarr",
                      "org.opencontainers.image.title": "Sonarr",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-sonarr/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "4.0.15.2941-ls285"
                    },
                    "mounts": null,
                    "name": "sonarr",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.6",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "8989",
                        "host_ip": "",
                        "host_port": "8989",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:02:40.501204724Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-06-21T07:01:03.737025228Z",
                    "environment": [
                      "PUID=99",
                      "TZ=Australia/Brisbane",
                      "HOST_OS=Unraid",
                      "PASSWORD=Lighthouse29",
                      "HASHED_PASSWORD=",
                      "SUDO_PASSWORD=Lighthouse29",
                      "SUDO_PASSWORD_HASH=",
                      "PROXY_DOMAIN=code.local.domalab.net",
                      "UMASK=022",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=code-server",
                      "DEFAULT_WORKSPACE=/config/workspace",
                      "PGID=100",
                      "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "HOME=/config",
                      "LANGUAGE=en_US.UTF-8",
                      "LANG=en_US.UTF-8",
                      "TERM=xterm",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_VERBOSITY=1",
                      "S6_STAGE2_HOOK=/docker-mods",
                      "VIRTUAL_ENV=/lsiopy",
                      "LSIO_FIRST_PARTY=true"
                    ],
                    "id": "811b426137d8bd137bed72c22584985c8248f3c8a1e5e4494549917e557f79f9",
                    "image": "lscr.io/linuxserver/code-server",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 4.101.1-ls282 Build-date:- 2025-06-21T03:36:47+00:00",
                      "maintainer": "aptalca",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-logo.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:8443]",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-21T03:36:47+00:00",
                      "org.opencontainers.image.description": "[Code-server](https://coder.com) is VS Code running on a remote server, accessible through the browser.  - Code on your Chromebook, tablet, and laptop with a consistent dev environment.  - If you have a Windows or Mac workstation, more easily develop for Linux.  - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more.  - Preserve battery life when you're on the go.  - All intensive computation runs on your server.  - You're no longer running excess instances of Chrome.  ",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-code-server",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "e204bcaef6049950a532da3cadf14a4b77df10d6",
                      "org.opencontainers.image.revision": "e204bcaef6049950a532da3cadf14a4b77df10d6",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-code-server",
                      "org.opencontainers.image.title": "Code-server",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-code-server/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "4.101.1-ls282"
                    },
                    "mounts": null,
                    "name": "code-server",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.4",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "8443",
                        "host_ip": "",
                        "host_port": "8443",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:01:47.840556584Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-06-17T02:28:32.174085562Z",
                    "environment": [
                      "TZ=Australia/Brisbane",
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=homeassistant",
                      "TCP_PORT_8123=8123",
                      "PUID=99",
                      "PGID=100",
                      "UMASK=022",
                      "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "LANG=C.UTF-8",
                      "S6_BEHAVIOUR_IF_STAGE2_FAILS=2",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_CMD_WAIT_FOR_SERVICES=1",
                      "S6_SERVICES_READYTIME=50",
                      "UV_EXTRA_INDEX_URL=https://wheels.home-assistant.io/musllinux-index/",
                      "S6_SERVICES_GRACETIME=240000",
                      "UV_SYSTEM_PYTHON=true",
                      "UV_NO_CACHE=true"
                    ],
                    "id": "415c0131535341f210c7701bea85aa84663045563ca4bf7c4d165660f03a5dad",
                    "image": "homeassistant/home-assistant",
                    "labels": {
                      "io.hass.arch": "amd64",
                      "io.hass.base.arch": "amd64",
                      "io.hass.base.image": "ghcr.io/home-assistant/amd64-base:3.21",
                      "io.hass.base.name": "python",
                      "io.hass.base.version": "2025.05.0",
                      "io.hass.type": "core",
                      "io.hass.version": "2025.6.1",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/homeassistant-logo.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:8123]",
                      "org.opencontainers.image.authors": "The Home Assistant Authors",
                      "org.opencontainers.image.created": "2025-06-13 20:22:00+00:00",
                      "org.opencontainers.image.description": "Open-source home automation platform running on Python 3",
                      "org.opencontainers.image.documentation": "https://www.home-assistant.io/docs/",
                      "org.opencontainers.image.licenses": "Apache-2.0",
                      "org.opencontainers.image.source": "https://github.com/home-assistant/core",
                      "org.opencontainers.image.title": "Home Assistant",
                      "org.opencontainers.image.url": "https://www.home-assistant.io/",
                      "org.opencontainers.image.version": "2025.6.1"
                    },
                    "mounts": null,
                    "name": "homeassistant",
                    "networks": [
                      {
                        "gateway": "",
                        "ip_address": "",
                        "name": "host"
                      }
                    ],
                    "ports": [],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:01:02.817904143Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-06-15T18:02:09.928228953Z",
                    "environment": [
                      "TZ=Australia/Brisbane",
                      "WEBUI_PORT=8181",
                      "PGID=100",
                      "TORRENTING_PORT=6881",
                      "PUID=99",
                      "UMASK=022",
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=qbittorrent",
                      "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                      "HOME=/config",
                      "TERM=xterm",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_VERBOSITY=1",
                      "S6_STAGE2_HOOK=/docker-mods",
                      "VIRTUAL_ENV=/lsiopy",
                      "LSIO_FIRST_PARTY=true",
                      "XDG_CONFIG_HOME=/config",
                      "XDG_DATA_HOME=/config"
                    ],
                    "id": "3530194c75f9d9675c13a4d748fb2effbbd5b32cadecb1b2b4a25f473a7104ff",
                    "image": "lscr.io/linuxserver/qbittorrent",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 5.1.0-r0-ls398 Build-date:- 2025-06-15T06:59:57+00:00",
                      "maintainer": "thespad",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qbittorrent-logo.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:8181]",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-15T06:59:57+00:00",
                      "org.opencontainers.image.description": "The [Qbittorrent](https://www.qbittorrent.org/) project aims to provide an open-source software alternative to ÂµTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-qbittorrent",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "d78e0089757031c68aa698d9105b005d5145ca2b",
                      "org.opencontainers.image.revision": "d78e0089757031c68aa698d9105b005d5145ca2b",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-qbittorrent",
                      "org.opencontainers.image.title": "Qbittorrent",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-qbittorrent/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "5.1.0-r0-ls398"
                    },
                    "mounts": null,
                    "name": "qbittorrent",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.9",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "6881",
                        "host_ip": "",
                        "host_port": "6881",
                        "protocol": "tcp"
                      },
                      {
                        "container_port": "6881",
                        "host_ip": "",
                        "host_port": "6881",
                        "protocol": "udp"
                      },
                      {
                        "container_port": "8181",
                        "host_ip": "",
                        "host_port": "8181",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:01:09.312911114Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-06-15T06:04:35.907989207Z",
                    "environment": [
                      "PGID=100",
                      "TZ=Australia/Brisbane",
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=radarr",
                      "PUID=99",
                      "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                      "HOME=/root",
                      "TERM=xterm",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_VERBOSITY=1",
                      "S6_STAGE2_HOOK=/docker-mods",
                      "VIRTUAL_ENV=/lsiopy",
                      "LSIO_FIRST_PARTY=true",
                      "XDG_CONFIG_HOME=/config/xdg",
                      "COMPlus_EnableDiagnostics=0",
                      "TMPDIR=/run/radarr-temp"
                    ],
                    "id": "5fd12be6372534bb8b5f24bf6ea2bdd260a82746d22160748558bdca586009de",
                    "image": "linuxserver/radarr:latest",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 5.26.2.10099-ls276 Build-date:- 2025-06-15T04:52:48+00:00",
                      "maintainer": "Roxedus,thespad",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:7878]",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-15T04:52:48+00:00",
                      "org.opencontainers.image.description": "[Radarr](https://github.com/Radarr/Radarr) - A fork of Sonarr to work with movies Ã  la Couchpotato.  ",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-radarr",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                      "org.opencontainers.image.revision": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-radarr",
                      "org.opencontainers.image.title": "Radarr",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-radarr/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "5.26.2.10099-ls276"
                    },
                    "mounts": null,
                    "name": "radarr",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.3",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "7878",
                        "host_ip": "",
                        "host_port": "7878",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:03:16.233500404Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-06-14T07:01:04.272938866Z",
                    "environment": [
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=flaresolverr",
                      "LOG_LEVEL=info",
                      "TZ=Australia/Brisbane",
                      "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "LANG=C.UTF-8",
                      "GPG_KEY=A035C8C19219BA821ECEA86B64E628F8D684696D",
                      "PYTHON_VERSION=3.11.13",
                      "PYTHON_SHA256=8fb5f9fbc7609fa822cb31549884575db7fd9657cbffb89510b5d7975963a83a"
                    ],
                    "id": "be5b0e9caaaa0fd775716df1a8edbeac1cca569a4bf184430efb3a978f9775ab",
                    "image": "flaresolverr/flaresolverr",
                    "labels": {
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/FlareSolverr/FlareSolverr/master/resources/flaresolverr_logo.png",
                      "net.unraid.docker.managed": "dockerman",
                      "org.opencontainers.image.created": "2025-06-14T02:52:44.964Z",
                      "org.opencontainers.image.description": "Proxy server to bypass Cloudflare protection",
                      "org.opencontainers.image.licenses": "MIT",
                      "org.opencontainers.image.revision": "6627de4fa6bc4759b1476085101fc91e80bbe356",
                      "org.opencontainers.image.source": "https://github.com/FlareSolverr/FlareSolverr",
                      "org.opencontainers.image.title": "FlareSolverr",
                      "org.opencontainers.image.url": "https://github.com/FlareSolverr/FlareSolverr",
                      "org.opencontainers.image.version": "v3.3.25"
                    },
                    "mounts": null,
                    "name": "flaresolverr",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.2",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "8191",
                        "host_ip": "",
                        "host_port": "8191",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:01:23.960679671Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-06-12T07:00:54.330585147Z",
                    "environment": [
                      "UMASK=022",
                      "TZ=Australia/Brisbane",
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=sabnzbd",
                      "PUID=99",
                      "PGID=100",
                      "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                      "HOME=/config",
                      "TERM=xterm",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_VERBOSITY=1",
                      "S6_STAGE2_HOOK=/docker-mods",
                      "VIRTUAL_ENV=/lsiopy",
                      "LSIO_FIRST_PARTY=true",
                      "PYTHONIOENCODING=utf-8"
                    ],
                    "id": "a72a966c16feff0f6dc2229ba21c0e8697151aba873d4d33f5df8db7cd1f8e79",
                    "image": "lscr.io/linuxserver/sabnzbd",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 4.5.1-ls221 Build-date:- 2025-06-12T02:25:46+00:00",
                      "maintainer": "thespad",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-logo.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:8080]",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-12T02:25:46+00:00",
                      "org.opencontainers.image.description": "[Sabnzbd](http://sabnzbd.org/) makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-sabnzbd",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "98de5e6f718b7f1cb583ce0a427439b733ce815d",
                      "org.opencontainers.image.revision": "98de5e6f718b7f1cb583ce0a427439b733ce815d",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-sabnzbd",
                      "org.opencontainers.image.title": "Sabnzbd",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-sabnzbd/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "4.5.1-ls221"
                    },
                    "mounts": null,
                    "name": "sabnzbd",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.8",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "8080",
                        "host_ip": "",
                        "host_port": "8080",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:02:46.519023546Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-06-12T01:41:31.114253366Z",
                    "environment": [
                      "PGID=100",
                      "UMASK=022",
                      "TZ=Australia/Brisbane",
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=overseerr",
                      "PUID=99",
                      "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                      "HOME=/config",
                      "TERM=xterm",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_VERBOSITY=1",
                      "S6_STAGE2_HOOK=/docker-mods",
                      "VIRTUAL_ENV=/lsiopy",
                      "LSIO_FIRST_PARTY=true",
                      "TMPDIR=/run/overseerr-temp"
                    ],
                    "id": "49bf0cebac074e90c48739042f1e285ec966b53cc406329f54e2a54e37dd89a3",
                    "image": "lscr.io/linuxserver/overseerr",
                    "labels": {
                      "build_version": "Linuxserver.io version:- v1.34.0-ls142 Build-date:- 2025-06-11T18:42:57+00:00",
                      "maintainer": "nemchik",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr-logo.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:5055]",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-11T18:42:57+00:00",
                      "org.opencontainers.image.description": "[Overseerr](https://overseerr.dev/) is a request management and media discovery tool built to work with your existing Plex ecosystem.  ",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-overseerr",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "8594a9686a6cbe2a16a747c7f3694518603556af",
                      "org.opencontainers.image.revision": "8594a9686a6cbe2a16a747c7f3694518603556af",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-overseerr",
                      "org.opencontainers.image.title": "Overseerr",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-overseerr/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "v1.34.0-ls142"
                    },
                    "mounts": null,
                    "name": "overseerr",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.10",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "5055",
                        "host_ip": "",
                        "host_port": "5055",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:01:15.513044417Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-06-10T18:10:03.88087747Z",
                    "environment": [
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=plex",
                      "UMASK=022",
                      "TZ=Australia/Brisbane",
                      "PLEX_CLAIM=claim-QhrM_aAYE2UfvMFjk4xK",
                      "PUID=99",
                      "PGID=100",
                      "VERSION=docker",
                      "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "HOME=/root",
                      "LANGUAGE=en_US.UTF-8",
                      "LANG=en_US.UTF-8",
                      "TERM=xterm",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_VERBOSITY=1",
                      "S6_STAGE2_HOOK=/docker-mods",
                      "VIRTUAL_ENV=/lsiopy",
                      "LSIO_FIRST_PARTY=true",
                      "NVIDIA_DRIVER_CAPABILITIES=compute,video,utility,graphics",
                      "DEBIAN_FRONTEND=noninteractive",
                      "PLEX_DOWNLOAD=https://downloads.plex.tv/plex-media-server-new",
                      "PLEX_ARCH=amd64",
                      "PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=/config/Library/Application Support",
                      "PLEX_MEDIA_SERVER_HOME=/usr/lib/plexmediaserver",
                      "PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=6",
                      "PLEX_MEDIA_SERVER_USER=abc",
                      "PLEX_MEDIA_SERVER_INFO_VENDOR=Docker",
                      "PLEX_MEDIA_SERVER_INFO_DEVICE=Docker Container (LinuxServer.io)",
                      "TMPDIR=/run/plex-temp"
                    ],
                    "id": "1440e9c825e6acf2d743db0e0e72f5425d74b2d6892a17964600b5f734f77036",
                    "image": "lscr.io/linuxserver/plex",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 1.41.8.9834-071366d65-ls269 Build-date:- 2025-06-10T17:38:48+00:00",
                      "maintainer": "thelamer",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-logo.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:32400]/web/index.html",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-10T17:38:48+00:00",
                      "org.opencontainers.image.description": "[Plex](https://plex.tv) organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. Straightforward design and bulk actions mean getting things done faster.",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-plex",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "c27d92587e0512513ad826a4ebde8a2cd1a5dd15",
                      "org.opencontainers.image.revision": "c27d92587e0512513ad826a4ebde8a2cd1a5dd15",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-plex",
                      "org.opencontainers.image.title": "Plex",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-plex/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "1.41.8.9834-071366d65-ls269"
                    },
                    "mounts": null,
                    "name": "plex",
                    "networks": [
                      {
                        "gateway": "",
                        "ip_address": "",
                        "name": "host"
                      }
                    ],
                    "ports": [],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:04:57.943428743Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-03-22T02:05:14.856993071Z",
                    "environment": [
                      "PUID=99",
                      "HOST_CONTAINERNAME=privoxyvpn",
                      "VPN_OUTPUT_PORTS=",
                      "DEBUG=false",
                      "PGID=100",
                      "SOCKS_PASS=socks",
                      "VPN_INPUT_PORTS=",
                      "ENABLE_PRIVOXY=yes",
                      "ENABLE_STARTUP_SCRIPTS=no",
                      "USERSPACE_WIREGUARD=no",
                      "NAME_SERVERS=84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40,1.0.0.1",
                      "TZ=Australia/Brisbane",
                      "VPN_PASS=Fi3xU#37ELY!",
                      "LAN_NETWORK=192.168.20.0/24",
                      "UMASK=000",
                      "HOST_OS=Unraid",
                      "VPN_ENABLED=yes",
                      "VPN_USER=nhquherygugg",
                      "VPN_CLIENT=openvpn",
                      "ENABLE_SOCKS=yes",
                      "HOST_HOSTNAME=Cube",
                      "VPN_PROV=custom",
                      "STRICT_PORT_FORWARD=no",
                      "SOCKS_USER=admin",
                      "VPN_OPTIONS=",
                      "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "HOME=/home/nobody",
                      "TERM=xterm",
                      "LANG=en_GB.UTF-8"
                    ],
                    "id": "c92f0e1dc766b5e6399627a8c45019f7ed8df904a9822ba82c5f3a2c523c0d5a",
                    "image": "binhex/arch-privoxyvpn",
                    "labels": {
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/privoxy-icon.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://config.privoxy.org/",
                      "org.opencontainers.image.authors": "binhex",
                      "org.opencontainers.image.source": "https://github.com/binhex/arch-privoxyvpn"
                    },
                    "mounts": null,
                    "name": "privoxyvpn",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.11",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "58946",
                        "host_ip": "",
                        "host_port": "58946",
                        "protocol": "tcp"
                      },
                      {
                        "container_port": "58946",
                        "host_ip": "",
                        "host_port": "58946",
                        "protocol": "udp"
                      },
                      {
                        "container_port": "8118",
                        "host_ip": "",
                        "host_port": "8118",
                        "protocol": "tcp"
                      },
                      {
                        "container_port": "9118",
                        "host_ip": "",
                        "host_port": "9118",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:05:02.542205257Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-02-16T02:02:34.021202468Z",
                    "environment": [
                      "CRON_SCHEDULE=@daily",
                      "RECYCLARR_CREATE_CONFIG=true",
                      "TZ=Australia/Brisbane",
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "HOST_CONTAINERNAME=recyclarr",
                      "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/app/recyclarr",
                      "APP_UID=1654",
                      "ASPNETCORE_HTTP_PORTS=8080",
                      "DOTNET_RUNNING_IN_CONTAINER=true",
                      "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true",
                      "DOTNET_VERSION=9.0.2",
                      "RECYCLARR_APP_DATA=/config",
                      "COMPlus_EnableDiagnostics=0"
                    ],
                    "id": "9ec3d62bf3fd9c10324e1dcce58a1f423219059898884058d4d7a0c3598b4815",
                    "image": "ghcr.io/recyclarr/recyclarr:latest",
                    "labels": {
                      "name": "recyclarr",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/recyclarr/recyclarr/master/ci/notify/trash-icon.png",
                      "net.unraid.docker.managed": "dockerman",
                      "org.opencontainers.image.created": "2025-02-15T20:53:04.489Z",
                      "org.opencontainers.image.description": "Automatically sync TRaSH Guides to your Sonarr and Radarr instances",
                      "org.opencontainers.image.licenses": "MIT",
                      "org.opencontainers.image.revision": "5bcd1122e967c828fceceea9810ebd1a33ce344a",
                      "org.opencontainers.image.source": "https://github.com/recyclarr/recyclarr",
                      "org.opencontainers.image.title": "recyclarr",
                      "org.opencontainers.image.url": "https://github.com/recyclarr/recyclarr",
                      "org.opencontainers.image.version": "7.4.1"
                    },
                    "mounts": null,
                    "name": "recyclarr",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.5",
                        "name": "media"
                      }
                    ],
                    "ports": [],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:02:02.61241899Z",
                    "state": "running",
                    "status": "running"
                  },
                  {
                    "created": "2025-01-21T22:39:07.186615886Z",
                    "environment": [
                      "HOST_CONTAINERNAME=unmanic",
                      "PUID=99",
                      "PGID=100",
                      "NVIDIA_VISIBLE_DEVICES=false",
                      "NVIDIA_PATCH_VERSION=",
                      "TZ=Australia/Brisbane",
                      "HOST_OS=Unraid",
                      "HOST_HOSTNAME=Cube",
                      "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                      "HOME=/root",
                      "LANGUAGE=en_US.UTF-8",
                      "LANG=en_US.UTF-8",
                      "TERM=xterm",
                      "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                      "S6_VERBOSITY=1",
                      "S6_STAGE2_HOOK=/docker-mods",
                      "VIRTUAL_ENV=/lsiopy",
                      "LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri",
                      "NVIDIA_DRIVER_CAPABILITIES=compute,video,utility"
                    ],
                    "id": "d8c4e4937b77c180ed44b9ca6b5cb831f53f3ce5c94a79740de939609f6be1b5",
                    "image": "josh5/unmanic:latest",
                    "labels": {
                      "build_version": "Linuxserver.io version:- bd519529-ls122 Build-date:- 2024-12-10T08:05:59+00:00",
                      "maintainer": "Josh.5 \u003cjsunnex@gmail.com\u003e",
                      "net.unraid.docker.icon": "https://raw.githubusercontent.com/Unmanic/unmanic/master/icon.png",
                      "net.unraid.docker.managed": "dockerman",
                      "net.unraid.docker.webui": "http://[IP]:[PORT:8888]/",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2024-12-10T08:05:59+00:00",
                      "org.opencontainers.image.description": "baseimage-ubuntu image by linuxserver.io",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-baseimage-ubuntu",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "f2d5c41d22b24511811c81e86d893cdbe405db0d",
                      "org.opencontainers.image.revision": "f2d5c41d22b24511811c81e86d893cdbe405db0d",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-baseimage-ubuntu",
                      "org.opencontainers.image.title": "Baseimage-ubuntu",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-baseimage-ubuntu/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "bd519529-ls122"
                    },
                    "mounts": null,
                    "name": "unmanic",
                    "networks": [
                      {
                        "gateway": "172.18.0.1",
                        "ip_address": "172.18.0.7",
                        "name": "media"
                      }
                    ],
                    "ports": [
                      {
                        "container_port": "8888",
                        "host_ip": "",
                        "host_port": "8888",
                        "protocol": "tcp"
                      }
                    ],
                    "restart_policy": "no",
                    "started_at": "2025-06-21T18:02:29.816465162Z",
                    "state": "running",
                    "status": "running"
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "created": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "environment": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      },
                      "labels": {
                        "properties": {
                          "build_version": {
                            "type": "string"
                          },
                          "maintainer": {
                            "type": "string"
                          },
                          "net.unraid.docker.icon": {
                            "type": "string"
                          },
                          "net.unraid.docker.managed": {
                            "type": "string"
                          },
                          "net.unraid.docker.webui": {
                            "type": "string"
                          },
                          "org.opencontainers.image.authors": {
                            "type": "string"
                          },
                          "org.opencontainers.image.created": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "org.opencontainers.image.description": {
                            "type": "string"
                          },
                          "org.opencontainers.image.documentation": {
                            "type": "string"
                          },
                          "org.opencontainers.image.licenses": {
                            "type": "string"
                          },
                          "org.opencontainers.image.ref.name": {
                            "type": "string"
                          },
                          "org.opencontainers.image.revision": {
                            "type": "string"
                          },
                          "org.opencontainers.image.source": {
                            "type": "string"
                          },
                          "org.opencontainers.image.title": {
                            "type": "string"
                          },
                          "org.opencontainers.image.url": {
                            "type": "string"
                          },
                          "org.opencontainers.image.vendor": {
                            "type": "string"
                          },
                          "org.opencontainers.image.version": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "build_version",
                          "maintainer",
                          "net.unraid.docker.icon",
                          "net.unraid.docker.managed",
                          "net.unraid.docker.webui",
                          "org.opencontainers.image.authors",
                          "org.opencontainers.image.created",
                          "org.opencontainers.image.description",
                          "org.opencontainers.image.documentation",
                          "org.opencontainers.image.licenses",
                          "org.opencontainers.image.ref.name",
                          "org.opencontainers.image.revision",
                          "org.opencontainers.image.source",
                          "org.opencontainers.image.title",
                          "org.opencontainers.image.url",
                          "org.opencontainers.image.vendor",
                          "org.opencontainers.image.version"
                        ],
                        "type": "object"
                      },
                      "mounts": {
                        "nullable": true,
                        "type": "null"
                      },
                      "name": {
                        "type": "string"
                      },
                      "networks": {
                        "items": {
                          "properties": {
                            "gateway": {
                              "type": "string"
                            },
                            "ip_address": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "gateway",
                            "ip_address",
                            "name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "ports": {
                        "items": {
                          "properties": {
                            "container_port": {
                              "type": "string"
                            },
                            "host_ip": {
                              "type": "string"
                            },
                            "host_port": {
                              "type": "string"
                            },
                            "protocol": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "container_port",
                            "host_ip",
                            "host_port",
                            "protocol"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "restart_policy": {
                        "type": "string"
                      },
                      "started_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "created",
                      "environment",
                      "id",
                      "image",
                      "labels",
                      "name",
                      "networks",
                      "ports",
                      "restart_policy",
                      "started_at",
                      "state",
                      "status"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/docker/containers/": {
      "get": {
        "description": "Auto-generated schema for /api/v1/docker/containers/",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/docker/containers/bulk/restart": {
      "get": {
        "description": "Auto-generated schema for /api/v1/docker/containers/bulk/restart",
        "responses": {
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "error": "Method not allowed",
                  "message": "Method Not Allowed"
                },
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/docker/containers/bulk/start": {
      "get": {
        "description": "Auto-generated schema for /api/v1/docker/containers/bulk/start",
        "responses": {
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "error": "Method not allowed",
                  "message": "Method Not Allowed"
                },
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/docker/containers/bulk/stop": {
      "get": {
        "description": "Auto-generated schema for /api/v1/docker/containers/bulk/stop",
        "responses": {
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "error": "Method not allowed",
                  "message": "Method Not Allowed"
                },
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/docker/images": {
      "get": {
        "description": "Auto-generated schema for /api/v1/docker/images",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "created": "2025-06-22T06:54:12.861992465Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:5501813212fda04d04a554df34589a82416184c9e54068af2539991119f9af35",
                    "labels": {
                      "build_version": "Linuxserver.io version:- v0.22.2037-ls67 Build-date:- 2025-06-22T06:52:41+00:00",
                      "maintainer": "thelamer",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-22T06:52:41+00:00",
                      "org.opencontainers.image.description": "[Jackett](https://github.com/Jackett/Jackett) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping \u0026 translation logic - removing the burden from other apps.",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-jackett",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "e3c734600bf7f081ce357dbda29668fb3f975922",
                      "org.opencontainers.image.revision": "e3c734600bf7f081ce357dbda29668fb3f975922",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-jackett",
                      "org.opencontainers.image.title": "Jackett",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-jackett/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "v0.22.2037-ls67"
                    },
                    "repo_digests": [
                      "lscr.io/linuxserver/jackett@sha256:67559a433d5be7cf73a9d03547080387386ee815036e256b6c9566abe95c8d8b"
                    ],
                    "repo_tags": [
                      "lscr.io/linuxserver/jackett:latest"
                    ],
                    "repository": "lscr.io/linuxserver/jackett",
                    "size": 178681168,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-06-21T03:38:35.397626504Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:f215aa7218cef0d926e811cc6b51ae1f43a1e2747cb3014144cdc6f0abd24871",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 4.101.1-ls282 Build-date:- 2025-06-21T03:36:47+00:00",
                      "maintainer": "aptalca",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-21T03:36:47+00:00",
                      "org.opencontainers.image.description": "[Code-server](https://coder.com) is VS Code running on a remote server, accessible through the browser.  - Code on your Chromebook, tablet, and laptop with a consistent dev environment.  - If you have a Windows or Mac workstation, more easily develop for Linux.  - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more.  - Preserve battery life when you're on the go.  - All intensive computation runs on your server.  - You're no longer running excess instances of Chrome.  ",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-code-server",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "e204bcaef6049950a532da3cadf14a4b77df10d6",
                      "org.opencontainers.image.revision": "e204bcaef6049950a532da3cadf14a4b77df10d6",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-code-server",
                      "org.opencontainers.image.title": "Code-server",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-code-server/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "4.101.1-ls282"
                    },
                    "repo_digests": [
                      "lscr.io/linuxserver/code-server@sha256:68559204a1328d36ebb3814586dc85af487a04c786b49150b060c4b6c63e1852"
                    ],
                    "repo_tags": [
                      "lscr.io/linuxserver/code-server:latest"
                    ],
                    "repository": "lscr.io/linuxserver/code-server",
                    "size": 621592097,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-06-20T18:10:55.123560059Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:143f1714496bd530073550abbb37c2ea3d64f739c2d3eded1a421576d16568e7",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 4.0.15.2941-ls285 Build-date:- 2025-06-20T17:50:01+00:00",
                      "maintainer": "thespad",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-20T17:50:01+00:00",
                      "org.opencontainers.image.description": "[Sonarr](https://sonarr.tv/) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.  ",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-sonarr",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "9fd50e19407a4f6a62ccddc284cda66f06dd8535",
                      "org.opencontainers.image.revision": "9fd50e19407a4f6a62ccddc284cda66f06dd8535",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-sonarr",
                      "org.opencontainers.image.title": "Sonarr",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-sonarr/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "4.0.15.2941-ls285"
                    },
                    "repo_digests": [
                      "linuxserver/sonarr@sha256:1156329d544b38bd1483add75c9b72c559f20e1ca043fd2d6376c2589d38951f"
                    ],
                    "repo_tags": [
                      "linuxserver/sonarr:latest"
                    ],
                    "repository": "linuxserver/sonarr",
                    "size": 205392167,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-06-15T07:01:42.931584201Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:dcabfe0d0d2a9481bb44a556ea187bf188ba30b12d466ed3b8db62de4ffa05d5",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 5.1.0-r0-ls398 Build-date:- 2025-06-15T06:59:57+00:00",
                      "maintainer": "thespad",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-15T06:59:57+00:00",
                      "org.opencontainers.image.description": "The [Qbittorrent](https://www.qbittorrent.org/) project aims to provide an open-source software alternative to ÂµTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-qbittorrent",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "d78e0089757031c68aa698d9105b005d5145ca2b",
                      "org.opencontainers.image.revision": "d78e0089757031c68aa698d9105b005d5145ca2b",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-qbittorrent",
                      "org.opencontainers.image.title": "Qbittorrent",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-qbittorrent/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "5.1.0-r0-ls398"
                    },
                    "repo_digests": [
                      "lscr.io/linuxserver/qbittorrent@sha256:3e87e9b74716ec1f104dbd3e67d18594dc6b920a757cd7377e35b2776b26e30d"
                    ],
                    "repo_tags": [
                      "lscr.io/linuxserver/qbittorrent:latest"
                    ],
                    "repository": "lscr.io/linuxserver/qbittorrent",
                    "size": 196766816,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-06-15T04:54:23.958765281Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:3529d5ea7df4a76352258ed45269525bfb9fe338cfb74c678e9f8d57dd312407",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 5.26.2.10099-ls276 Build-date:- 2025-06-15T04:52:48+00:00",
                      "maintainer": "Roxedus,thespad",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-15T04:52:48+00:00",
                      "org.opencontainers.image.description": "[Radarr](https://github.com/Radarr/Radarr) - A fork of Sonarr to work with movies Ã  la Couchpotato.  ",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-radarr",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                      "org.opencontainers.image.revision": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-radarr",
                      "org.opencontainers.image.title": "Radarr",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-radarr/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "5.26.2.10099-ls276"
                    },
                    "repo_digests": [
                      "linuxserver/radarr@sha256:07a474b61394553e047ad43a1a78c1047fc99be0144c509dd91e3877f402ebcb"
                    ],
                    "repo_tags": [
                      "linuxserver/radarr:latest"
                    ],
                    "repository": "linuxserver/radarr",
                    "size": 206939391,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-06-14T02:54:04.17231355Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:f95000dc15eb0594a95776a6157b4acd44501f9e50fd92526547a6e0632bed05",
                    "labels": {
                      "org.opencontainers.image.created": "2025-06-14T02:52:44.964Z",
                      "org.opencontainers.image.description": "Proxy server to bypass Cloudflare protection",
                      "org.opencontainers.image.licenses": "MIT",
                      "org.opencontainers.image.revision": "6627de4fa6bc4759b1476085101fc91e80bbe356",
                      "org.opencontainers.image.source": "https://github.com/FlareSolverr/FlareSolverr",
                      "org.opencontainers.image.title": "FlareSolverr",
                      "org.opencontainers.image.url": "https://github.com/FlareSolverr/FlareSolverr",
                      "org.opencontainers.image.version": "v3.3.25"
                    },
                    "repo_digests": [
                      "flaresolverr/flaresolverr@sha256:68160ec125e5cde23bc45549a443da0da0223cf4f0de7571ed2c6851cf6e1561"
                    ],
                    "repo_tags": [
                      "flaresolverr/flaresolverr:latest"
                    ],
                    "repository": "flaresolverr/flaresolverr",
                    "size": 717339505,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-06-13T20:23:24.963336319Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:8502c5301fdbfa067c1694d5585940773708437d03fa1950e7b6d564c867fa2f",
                    "labels": {
                      "io.hass.arch": "amd64",
                      "io.hass.base.arch": "amd64",
                      "io.hass.base.image": "ghcr.io/home-assistant/amd64-base:3.21",
                      "io.hass.base.name": "python",
                      "io.hass.base.version": "2025.05.0",
                      "io.hass.type": "core",
                      "io.hass.version": "2025.6.1",
                      "org.opencontainers.image.authors": "The Home Assistant Authors",
                      "org.opencontainers.image.created": "2025-06-13 20:22:00+00:00",
                      "org.opencontainers.image.description": "Open-source home automation platform running on Python 3",
                      "org.opencontainers.image.documentation": "https://www.home-assistant.io/docs/",
                      "org.opencontainers.image.licenses": "Apache-2.0",
                      "org.opencontainers.image.source": "https://github.com/home-assistant/core",
                      "org.opencontainers.image.title": "Home Assistant",
                      "org.opencontainers.image.url": "https://www.home-assistant.io/",
                      "org.opencontainers.image.version": "2025.6.1"
                    },
                    "repo_digests": [
                      "homeassistant/home-assistant@sha256:857745bd01589750174e60f2c477a65da1169c4f1c098a58db792baae7f7ada6"
                    ],
                    "repo_tags": [
                      "homeassistant/home-assistant:latest"
                    ],
                    "repository": "homeassistant/home-assistant",
                    "size": 1984064396,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-06-12T02:30:29.351508592Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:fb69694dba0315d77609fb3090f67ec7fc9025e5357624ac85368238b38174b5",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 4.5.1-ls221 Build-date:- 2025-06-12T02:25:46+00:00",
                      "maintainer": "thespad",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-12T02:25:46+00:00",
                      "org.opencontainers.image.description": "[Sabnzbd](http://sabnzbd.org/) makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-sabnzbd",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "98de5e6f718b7f1cb583ce0a427439b733ce815d",
                      "org.opencontainers.image.revision": "98de5e6f718b7f1cb583ce0a427439b733ce815d",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-sabnzbd",
                      "org.opencontainers.image.title": "Sabnzbd",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-sabnzbd/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "4.5.1-ls221"
                    },
                    "repo_digests": [
                      "lscr.io/linuxserver/sabnzbd@sha256:f9c06e2556a6f10b65373b9d0f2da8cdcf4cac15e7f30ea02fb2e52beffa2696"
                    ],
                    "repo_tags": [
                      "lscr.io/linuxserver/sabnzbd:latest"
                    ],
                    "repository": "lscr.io/linuxserver/sabnzbd",
                    "size": 171095791,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-06-11T18:49:15.463562235Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:2c0b193f6a02378b332514918017e94ab62b94d4a6ea5377333e455c136f5e6c",
                    "labels": {
                      "build_version": "Linuxserver.io version:- v1.34.0-ls142 Build-date:- 2025-06-11T18:42:57+00:00",
                      "maintainer": "nemchik",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-11T18:42:57+00:00",
                      "org.opencontainers.image.description": "[Overseerr](https://overseerr.dev/) is a request management and media discovery tool built to work with your existing Plex ecosystem.  ",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-overseerr",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "8594a9686a6cbe2a16a747c7f3694518603556af",
                      "org.opencontainers.image.revision": "8594a9686a6cbe2a16a747c7f3694518603556af",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-overseerr",
                      "org.opencontainers.image.title": "Overseerr",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-overseerr/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "v1.34.0-ls142"
                    },
                    "repo_digests": [
                      "lscr.io/linuxserver/overseerr@sha256:1205b8873f3ea0a98890191d9e01da911d9509272462a46414ba0378a6d76288"
                    ],
                    "repo_tags": [
                      "lscr.io/linuxserver/overseerr:latest"
                    ],
                    "repository": "lscr.io/linuxserver/overseerr",
                    "size": 713053705,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-06-10T17:40:41.585789697Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:6b86e7997d9803c29587fb76133d95825fcb938e93c7091c12c9a176fdd79f8e",
                    "labels": {
                      "build_version": "Linuxserver.io version:- 1.41.8.9834-071366d65-ls269 Build-date:- 2025-06-10T17:38:48+00:00",
                      "maintainer": "thelamer",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2025-06-10T17:38:48+00:00",
                      "org.opencontainers.image.description": "[Plex](https://plex.tv) organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. Straightforward design and bulk actions mean getting things done faster.",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-plex",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "c27d92587e0512513ad826a4ebde8a2cd1a5dd15",
                      "org.opencontainers.image.revision": "c27d92587e0512513ad826a4ebde8a2cd1a5dd15",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-plex",
                      "org.opencontainers.image.title": "Plex",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-plex/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "1.41.8.9834-071366d65-ls269"
                    },
                    "repo_digests": [
                      "lscr.io/linuxserver/plex@sha256:7794c25926494a63da421fabf2898dd38c4d6190f9146450fc0e29da8025ed2c"
                    ],
                    "repo_tags": [
                      "lscr.io/linuxserver/plex:latest"
                    ],
                    "repository": "lscr.io/linuxserver/plex",
                    "size": 370043948,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-03-21T20:23:34.532541565Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:52fc9c94f6a4a0e243a70620c24a4209b9c48a7462a988f5fc1c930c2b2f55a3",
                    "labels": {
                      "org.opencontainers.image.authors": "binhex",
                      "org.opencontainers.image.source": "https://github.com/binhex/arch-privoxyvpn"
                    },
                    "repo_digests": [
                      "binhex/arch-privoxyvpn@sha256:905e12ec81986fcc947c1fd7945a7f8e2ddd247c3c2b12c8585b0a9b21a62244"
                    ],
                    "repo_tags": [
                      "binhex/arch-privoxyvpn:latest"
                    ],
                    "repository": "binhex/arch-privoxyvpn",
                    "size": 1454348311,
                    "tag": "latest"
                  },
                  {
                    "created": "2025-02-15T20:53:51.601544194Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:2afd2bb23d0befb39b6d0bed6bfc430dcf5cbfcf2abbd22d2cb3f99f8db8cfeb",
                    "labels": {
                      "name": "recyclarr",
                      "org.opencontainers.image.created": "2025-02-15T20:53:04.489Z",
                      "org.opencontainers.image.description": "Automatically sync TRaSH Guides to your Sonarr and Radarr instances",
                      "org.opencontainers.image.licenses": "MIT",
                      "org.opencontainers.image.revision": "5bcd1122e967c828fceceea9810ebd1a33ce344a",
                      "org.opencontainers.image.source": "https://github.com/recyclarr/recyclarr",
                      "org.opencontainers.image.title": "recyclarr",
                      "org.opencontainers.image.url": "https://github.com/recyclarr/recyclarr",
                      "org.opencontainers.image.version": "7.4.1"
                    },
                    "repo_digests": [
                      "ghcr.io/recyclarr/recyclarr@sha256:759540877f95453eca8a26c1a93593e783a7a824c324fbd57523deffb67f48e1"
                    ],
                    "repo_tags": [
                      "ghcr.io/recyclarr/recyclarr:latest"
                    ],
                    "repository": "ghcr.io/recyclarr/recyclarr",
                    "size": 120266049,
                    "tag": "latest"
                  },
                  {
                    "created": "2024-12-14T03:14:46.064753019Z",
                    "digest": "\u003cnone\u003e",
                    "id": "sha256:a03a907f2a1ad42acea5bd4e0680e3a5b1efc309053f77f42ab9678b9f9f1dca",
                    "labels": {
                      "build_version": "Linuxserver.io version:- bd519529-ls122 Build-date:- 2024-12-10T08:05:59+00:00",
                      "maintainer": "Josh.5 \u003cjsunnex@gmail.com\u003e",
                      "org.opencontainers.image.authors": "linuxserver.io",
                      "org.opencontainers.image.created": "2024-12-10T08:05:59+00:00",
                      "org.opencontainers.image.description": "baseimage-ubuntu image by linuxserver.io",
                      "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-baseimage-ubuntu",
                      "org.opencontainers.image.licenses": "GPL-3.0-only",
                      "org.opencontainers.image.ref.name": "f2d5c41d22b24511811c81e86d893cdbe405db0d",
                      "org.opencontainers.image.revision": "f2d5c41d22b24511811c81e86d893cdbe405db0d",
                      "org.opencontainers.image.source": "https://github.com/linuxserver/docker-baseimage-ubuntu",
                      "org.opencontainers.image.title": "Baseimage-ubuntu",
                      "org.opencontainers.image.url": "https://github.com/linuxserver/docker-baseimage-ubuntu/packages",
                      "org.opencontainers.image.vendor": "linuxserver.io",
                      "org.opencontainers.image.version": "bd519529-ls122"
                    },
                    "repo_digests": [
                      "josh5/unmanic@sha256:d24fa03c1155e78c76ed5b24c46ec120aa1a58bde1c3f2a4a835c24ebd15a07d"
                    ],
                    "repo_tags": [
                      "josh5/unmanic:latest"
                    ],
                    "repository": "josh5/unmanic",
                    "size": 1201842784,
                    "tag": "latest"
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "created": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "digest": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "labels": {
                        "properties": {
                          "build_version": {
                            "type": "string"
                          },
                          "maintainer": {
                            "type": "string"
                          },
                          "org.opencontainers.image.authors": {
                            "type": "string"
                          },
                          "org.opencontainers.image.created": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "org.opencontainers.image.description": {
                            "type": "string"
                          },
                          "org.opencontainers.image.documentation": {
                            "type": "string"
                          },
                          "org.opencontainers.image.licenses": {
                            "type": "string"
                          },
                          "org.opencontainers.image.ref.name": {
                            "type": "string"
                          },
                          "org.opencontainers.image.revision": {
                            "type": "string"
                          },
                          "org.opencontainers.image.source": {
                            "type": "string"
                          },
                          "org.opencontainers.image.title": {
                            "type": "string"
                          },
                          "org.opencontainers.image.url": {
                            "type": "string"
                          },
                          "org.opencontainers.image.vendor": {
                            "type": "string"
                          },
                          "org.opencontainers.image.version": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "build_version",
                          "maintainer",
                          "org.opencontainers.image.authors",
                          "org.opencontainers.image.created",
                          "org.opencontainers.image.description",
                          "org.opencontainers.image.documentation",
                          "org.opencontainers.image.licenses",
                          "org.opencontainers.image.ref.name",
                          "org.opencontainers.image.revision",
                          "org.opencontainers.image.source",
                          "org.opencontainers.image.title",
                          "org.opencontainers.image.url",
                          "org.opencontainers.image.vendor",
                          "org.opencontainers.image.version"
                        ],
                        "type": "object"
                      },
                      "repo_digests": {
                        "items": {
                          "format": "email",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "repo_tags": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "repository": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "tag": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "created",
                      "digest",
                      "id",
                      "labels",
                      "repo_digests",
                      "repo_tags",
                      "repository",
                      "size",
                      "tag"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/docker/info": {
      "get": {
        "description": "Auto-generated schema for /api/v1/docker/info",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "Architecture": "x86_64",
                  "BridgeNfIp6tables": false,
                  "BridgeNfIptables": false,
                  "CDISpecDirs": [],
                  "CPUSet": true,
                  "CPUShares": true,
                  "CgroupDriver": "cgroupfs",
                  "CgroupVersion": "2",
                  "ClientInfo": {
                    "Arch": "amd64",
                    "BuildTime": "Wed Jan 22 13:40:02 2025",
                    "Context": "default",
                    "Debug": false,
                    "GitCommit": "9f9e405",
                    "GoVersion": "go1.22.11",
                    "Os": "linux",
                    "Plugins": [
                      {
                        "Name": "buildx",
                        "Path": "/usr/libexec/docker/cli-plugins/docker-buildx",
                        "SchemaVersion": "0.1.0",
                        "ShortDescription": "Docker Buildx",
                        "Vendor": "Docker Inc.",
                        "Version": "v0.20.1"
                      }
                    ],
                    "Version": "27.5.1",
                    "Warnings": null
                  },
                  "Containerd": {
                    "Address": "/var/run/docker/containerd/containerd.sock",
                    "Namespaces": {
                      "Containers": "moby",
                      "Plugins": "plugins.moby"
                    }
                  },
                  "ContainerdCommit": {
                    "Expected": "bcc810d6b9066471b0b6fa75f557a15a1cbf31bb",
                    "ID": "bcc810d6b9066471b0b6fa75f557a15a1cbf31bb"
                  },
                  "Containers": 13,
                  "ContainersPaused": 0,
                  "ContainersRunning": 13,
                  "ContainersStopped": 0,
                  "CpuCfsPeriod": true,
                  "CpuCfsQuota": true,
                  "Debug": false,
                  "DefaultRuntime": "runc",
                  "DockerRootDir": "/var/lib/docker",
                  "Driver": "btrfs",
                  "DriverStatus": [
                    [
                      "Btrfs",
                      ""
                    ]
                  ],
                  "ExperimentalBuild": false,
                  "GenericResources": null,
                  "HttpProxy": "",
                  "HttpsProxy": "",
                  "ID": "dcf99289-02ab-4aaf-b8f6-562f8ca37734",
                  "IPv4Forwarding": true,
                  "Images": 13,
                  "IndexServerAddress": "https://index.docker.io/v1/",
                  "InitBinary": "docker-init",
                  "InitCommit": {
                    "Expected": "de40ad0",
                    "ID": "de40ad0"
                  },
                  "Isolation": "",
                  "KernelVersion": "6.12.24-Unraid",
                  "Labels": [],
                  "LiveRestoreEnabled": false,
                  "LoggingDriver": "json-file",
                  "MemTotal": 33328439296,
                  "MemoryLimit": true,
                  "NCPU": 12,
                  "NEventsListener": 1,
                  "NFd": 125,
                  "NGoroutines": 153,
                  "Name": "Cube",
                  "NoProxy": "",
                  "OSType": "linux",
                  "OSVersion": "7.1.3",
                  "OomKillDisable": false,
                  "OperatingSystem": "Unraid OS 7.1 x86_64",
                  "PidsLimit": true,
                  "Plugins": {
                    "Authorization": null,
                    "Log": [
                      "awslogs",
                      "fluentd",
                      "gcplogs",
                      "gelf",
                      "journald",
                      "json-file",
                      "local",
                      "splunk",
                      "syslog"
                    ],
                    "Network": [
                      "bridge",
                      "host",
                      "ipvlan",
                      "macvlan",
                      "null",
                      "overlay"
                    ],
                    "Volume": [
                      "local"
                    ]
                  },
                  "ProductLicense": "Community Engine",
                  "RegistryConfig": {
                    "AllowNondistributableArtifactsCIDRs": null,
                    "AllowNondistributableArtifactsHostnames": null,
                    "IndexConfigs": {
                      "docker.io": {
                        "Mirrors": [],
                        "Name": "docker.io",
                        "Official": true,
                        "Secure": true
                      }
                    },
                    "InsecureRegistryCIDRs": [
                      "127.0.0.0/8"
                    ],
                    "Mirrors": null
                  },
                  "RuncCommit": {
                    "Expected": "v1.2.4-0-g6c52b3f",
                    "ID": "v1.2.4-0-g6c52b3f"
                  },
                  "Runtimes": {
                    "io.containerd.runc.v2": {
                      "path": "runc",
                      "status": {
                        "org.opencontainers.runtime-spec.features": "{\"ociVersionMin\":\"1.0.0\",\"ociVersionMax\":\"1.2.0\",\"hooks\":[\"prestart\",\"createRuntime\",\"createContainer\",\"startContainer\",\"poststart\",\"poststop\"],\"mountOptions\":[\"async\",\"atime\",\"bind\",\"defaults\",\"dev\",\"diratime\",\"dirsync\",\"exec\",\"iversion\",\"lazytime\",\"loud\",\"mand\",\"noatime\",\"nodev\",\"nodiratime\",\"noexec\",\"noiversion\",\"nolazytime\",\"nomand\",\"norelatime\",\"nostrictatime\",\"nosuid\",\"nosymfollow\",\"private\",\"ratime\",\"rbind\",\"rdev\",\"rdiratime\",\"relatime\",\"remount\",\"rexec\",\"rnoatime\",\"rnodev\",\"rnodiratime\",\"rnoexec\",\"rnorelatime\",\"rnostrictatime\",\"rnosuid\",\"rnosymfollow\",\"ro\",\"rprivate\",\"rrelatime\",\"rro\",\"rrw\",\"rshared\",\"rslave\",\"rstrictatime\",\"rsuid\",\"rsymfollow\",\"runbindable\",\"rw\",\"shared\",\"silent\",\"slave\",\"strictatime\",\"suid\",\"symfollow\",\"sync\",\"tmpcopyup\",\"unbindable\"],\"linux\":{\"namespaces\":[\"cgroup\",\"ipc\",\"mount\",\"network\",\"pid\",\"time\",\"user\",\"uts\"],\"capabilities\":[\"CAP_CHOWN\",\"CAP_DAC_OVERRIDE\",\"CAP_DAC_READ_SEARCH\",\"CAP_FOWNER\",\"CAP_FSETID\",\"CAP_KILL\",\"CAP_SETGID\",\"CAP_SETUID\",\"CAP_SETPCAP\",\"CAP_LINUX_IMMUTABLE\",\"CAP_NET_BIND_SERVICE\",\"CAP_NET_BROADCAST\",\"CAP_NET_ADMIN\",\"CAP_NET_RAW\",\"CAP_IPC_LOCK\",\"CAP_IPC_OWNER\",\"CAP_SYS_MODULE\",\"CAP_SYS_RAWIO\",\"CAP_SYS_CHROOT\",\"CAP_SYS_PTRACE\",\"CAP_SYS_PACCT\",\"CAP_SYS_ADMIN\",\"CAP_SYS_BOOT\",\"CAP_SYS_NICE\",\"CAP_SYS_RESOURCE\",\"CAP_SYS_TIME\",\"CAP_SYS_TTY_CONFIG\",\"CAP_MKNOD\",\"CAP_LEASE\",\"CAP_AUDIT_WRITE\",\"CAP_AUDIT_CONTROL\",\"CAP_SETFCAP\",\"CAP_MAC_OVERRIDE\",\"CAP_MAC_ADMIN\",\"CAP_SYSLOG\",\"CAP_WAKE_ALARM\",\"CAP_BLOCK_SUSPEND\",\"CAP_AUDIT_READ\",\"CAP_PERFMON\",\"CAP_BPF\",\"CAP_CHECKPOINT_RESTORE\"],\"cgroup\":{\"v1\":true,\"v2\":true,\"systemd\":true,\"systemdUser\":true,\"rdma\":true},\"seccomp\":{\"enabled\":true,\"actions\":[\"SCMP_ACT_ALLOW\",\"SCMP_ACT_ERRNO\",\"SCMP_ACT_KILL\",\"SCMP_ACT_KILL_PROCESS\",\"SCMP_ACT_KILL_THREAD\",\"SCMP_ACT_LOG\",\"SCMP_ACT_NOTIFY\",\"SCMP_ACT_TRACE\",\"SCMP_ACT_TRAP\"],\"operators\":[\"SCMP_CMP_EQ\",\"SCMP_CMP_GE\",\"SCMP_CMP_GT\",\"SCMP_CMP_LE\",\"SCMP_CMP_LT\",\"SCMP_CMP_MASKED_EQ\",\"SCMP_CMP_NE\"],\"archs\":[\"SCMP_ARCH_AARCH64\",\"SCMP_ARCH_ARM\",\"SCMP_ARCH_MIPS\",\"SCMP_ARCH_MIPS64\",\"SCMP_ARCH_MIPS64N32\",\"SCMP_ARCH_MIPSEL\",\"SCMP_ARCH_MIPSEL64\",\"SCMP_ARCH_MIPSEL64N32\",\"SCMP_ARCH_PPC\",\"SCMP_ARCH_PPC64\",\"SCMP_ARCH_PPC64LE\",\"SCMP_ARCH_RISCV64\",\"SCMP_ARCH_S390\",\"SCMP_ARCH_S390X\",\"SCMP_ARCH_X32\",\"SCMP_ARCH_X86\",\"SCMP_ARCH_X86_64\"],\"knownFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"],\"supportedFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"]},\"apparmor\":{\"enabled\":true},\"selinux\":{\"enabled\":true},\"intelRdt\":{\"enabled\":true},\"mountExtensions\":{\"idmap\":{\"enabled\":true}}},\"annotations\":{\"io.github.seccomp.libseccomp.version\":\"2.5.4\",\"org.opencontainers.runc.checkpoint.enabled\":\"true\",\"org.opencontainers.runc.commit\":\"v1.2.4-0-g6c52b3f\",\"org.opencontainers.runc.version\":\"1.2.4\"},\"potentiallyUnsafeConfigAnnotations\":[\"bundle\",\"org.systemd.property.\",\"org.criu.config\"]}"
                      }
                    },
                    "runc": {
                      "path": "runc",
                      "status": {
                        "org.opencontainers.runtime-spec.features": "{\"ociVersionMin\":\"1.0.0\",\"ociVersionMax\":\"1.2.0\",\"hooks\":[\"prestart\",\"createRuntime\",\"createContainer\",\"startContainer\",\"poststart\",\"poststop\"],\"mountOptions\":[\"async\",\"atime\",\"bind\",\"defaults\",\"dev\",\"diratime\",\"dirsync\",\"exec\",\"iversion\",\"lazytime\",\"loud\",\"mand\",\"noatime\",\"nodev\",\"nodiratime\",\"noexec\",\"noiversion\",\"nolazytime\",\"nomand\",\"norelatime\",\"nostrictatime\",\"nosuid\",\"nosymfollow\",\"private\",\"ratime\",\"rbind\",\"rdev\",\"rdiratime\",\"relatime\",\"remount\",\"rexec\",\"rnoatime\",\"rnodev\",\"rnodiratime\",\"rnoexec\",\"rnorelatime\",\"rnostrictatime\",\"rnosuid\",\"rnosymfollow\",\"ro\",\"rprivate\",\"rrelatime\",\"rro\",\"rrw\",\"rshared\",\"rslave\",\"rstrictatime\",\"rsuid\",\"rsymfollow\",\"runbindable\",\"rw\",\"shared\",\"silent\",\"slave\",\"strictatime\",\"suid\",\"symfollow\",\"sync\",\"tmpcopyup\",\"unbindable\"],\"linux\":{\"namespaces\":[\"cgroup\",\"ipc\",\"mount\",\"network\",\"pid\",\"time\",\"user\",\"uts\"],\"capabilities\":[\"CAP_CHOWN\",\"CAP_DAC_OVERRIDE\",\"CAP_DAC_READ_SEARCH\",\"CAP_FOWNER\",\"CAP_FSETID\",\"CAP_KILL\",\"CAP_SETGID\",\"CAP_SETUID\",\"CAP_SETPCAP\",\"CAP_LINUX_IMMUTABLE\",\"CAP_NET_BIND_SERVICE\",\"CAP_NET_BROADCAST\",\"CAP_NET_ADMIN\",\"CAP_NET_RAW\",\"CAP_IPC_LOCK\",\"CAP_IPC_OWNER\",\"CAP_SYS_MODULE\",\"CAP_SYS_RAWIO\",\"CAP_SYS_CHROOT\",\"CAP_SYS_PTRACE\",\"CAP_SYS_PACCT\",\"CAP_SYS_ADMIN\",\"CAP_SYS_BOOT\",\"CAP_SYS_NICE\",\"CAP_SYS_RESOURCE\",\"CAP_SYS_TIME\",\"CAP_SYS_TTY_CONFIG\",\"CAP_MKNOD\",\"CAP_LEASE\",\"CAP_AUDIT_WRITE\",\"CAP_AUDIT_CONTROL\",\"CAP_SETFCAP\",\"CAP_MAC_OVERRIDE\",\"CAP_MAC_ADMIN\",\"CAP_SYSLOG\",\"CAP_WAKE_ALARM\",\"CAP_BLOCK_SUSPEND\",\"CAP_AUDIT_READ\",\"CAP_PERFMON\",\"CAP_BPF\",\"CAP_CHECKPOINT_RESTORE\"],\"cgroup\":{\"v1\":true,\"v2\":true,\"systemd\":true,\"systemdUser\":true,\"rdma\":true},\"seccomp\":{\"enabled\":true,\"actions\":[\"SCMP_ACT_ALLOW\",\"SCMP_ACT_ERRNO\",\"SCMP_ACT_KILL\",\"SCMP_ACT_KILL_PROCESS\",\"SCMP_ACT_KILL_THREAD\",\"SCMP_ACT_LOG\",\"SCMP_ACT_NOTIFY\",\"SCMP_ACT_TRACE\",\"SCMP_ACT_TRAP\"],\"operators\":[\"SCMP_CMP_EQ\",\"SCMP_CMP_GE\",\"SCMP_CMP_GT\",\"SCMP_CMP_LE\",\"SCMP_CMP_LT\",\"SCMP_CMP_MASKED_EQ\",\"SCMP_CMP_NE\"],\"archs\":[\"SCMP_ARCH_AARCH64\",\"SCMP_ARCH_ARM\",\"SCMP_ARCH_MIPS\",\"SCMP_ARCH_MIPS64\",\"SCMP_ARCH_MIPS64N32\",\"SCMP_ARCH_MIPSEL\",\"SCMP_ARCH_MIPSEL64\",\"SCMP_ARCH_MIPSEL64N32\",\"SCMP_ARCH_PPC\",\"SCMP_ARCH_PPC64\",\"SCMP_ARCH_PPC64LE\",\"SCMP_ARCH_RISCV64\",\"SCMP_ARCH_S390\",\"SCMP_ARCH_S390X\",\"SCMP_ARCH_X32\",\"SCMP_ARCH_X86\",\"SCMP_ARCH_X86_64\"],\"knownFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"],\"supportedFlags\":[\"SECCOMP_FILTER_FLAG_TSYNC\",\"SECCOMP_FILTER_FLAG_SPEC_ALLOW\",\"SECCOMP_FILTER_FLAG_LOG\"]},\"apparmor\":{\"enabled\":true},\"selinux\":{\"enabled\":true},\"intelRdt\":{\"enabled\":true},\"mountExtensions\":{\"idmap\":{\"enabled\":true}}},\"annotations\":{\"io.github.seccomp.libseccomp.version\":\"2.5.4\",\"org.opencontainers.runc.checkpoint.enabled\":\"true\",\"org.opencontainers.runc.commit\":\"v1.2.4-0-g6c52b3f\",\"org.opencontainers.runc.version\":\"1.2.4\"},\"potentiallyUnsafeConfigAnnotations\":[\"bundle\",\"org.systemd.property.\",\"org.criu.config\"]}"
                      }
                    }
                  },
                  "SecurityOptions": [
                    "name=seccomp,profile=builtin",
                    "name=cgroupns"
                  ],
                  "ServerVersion": "27.5.1",
                  "SwapLimit": false,
                  "Swarm": {
                    "ControlAvailable": false,
                    "Error": "",
                    "LocalNodeState": "inactive",
                    "NodeAddr": "",
                    "NodeID": "",
                    "RemoteManagers": null
                  },
                  "SystemTime": "2025-06-22T18:33:54.991160967+10:00",
                  "Warnings": [
                    "WARNING: No swap limit support"
                  ]
                },
                "schema": {
                  "properties": {
                    "Architecture": {
                      "type": "string"
                    },
                    "BridgeNfIp6tables": {
                      "type": "boolean"
                    },
                    "BridgeNfIptables": {
                      "type": "boolean"
                    },
                    "CDISpecDirs": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "CPUSet": {
                      "type": "boolean"
                    },
                    "CPUShares": {
                      "type": "boolean"
                    },
                    "CgroupDriver": {
                      "type": "string"
                    },
                    "CgroupVersion": {
                      "type": "string"
                    },
                    "ClientInfo": {
                      "properties": {
                        "Arch": {
                          "type": "string"
                        },
                        "BuildTime": {
                          "type": "string"
                        },
                        "Context": {
                          "type": "string"
                        },
                        "Debug": {
                          "type": "boolean"
                        },
                        "GitCommit": {
                          "type": "string"
                        },
                        "GoVersion": {
                          "type": "string"
                        },
                        "Os": {
                          "type": "string"
                        },
                        "Plugins": {
                          "items": {
                            "properties": {
                              "Name": {
                                "type": "string"
                              },
                              "Path": {
                                "type": "string"
                              },
                              "SchemaVersion": {
                                "type": "string"
                              },
                              "ShortDescription": {
                                "type": "string"
                              },
                              "Vendor": {
                                "type": "string"
                              },
                              "Version": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "Name",
                              "Path",
                              "SchemaVersion",
                              "ShortDescription",
                              "Vendor",
                              "Version"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "Version": {
                          "type": "string"
                        },
                        "Warnings": {
                          "nullable": true,
                          "type": "null"
                        }
                      },
                      "required": [
                        "Arch",
                        "BuildTime",
                        "Context",
                        "Debug",
                        "GitCommit",
                        "GoVersion",
                        "Os",
                        "Plugins",
                        "Version"
                      ],
                      "type": "object"
                    },
                    "Containerd": {
                      "properties": {
                        "Address": {
                          "type": "string"
                        },
                        "Namespaces": {
                          "properties": {
                            "Containers": {
                              "type": "string"
                            },
                            "Plugins": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "Containers",
                            "Plugins"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "Address",
                        "Namespaces"
                      ],
                      "type": "object"
                    },
                    "ContainerdCommit": {
                      "properties": {
                        "Expected": {
                          "type": "string"
                        },
                        "ID": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "Expected",
                        "ID"
                      ],
                      "type": "object"
                    },
                    "Containers": {
                      "type": "integer"
                    },
                    "ContainersPaused": {
                      "type": "integer"
                    },
                    "ContainersRunning": {
                      "type": "integer"
                    },
                    "ContainersStopped": {
                      "type": "integer"
                    },
                    "CpuCfsPeriod": {
                      "type": "boolean"
                    },
                    "CpuCfsQuota": {
                      "type": "boolean"
                    },
                    "Debug": {
                      "type": "boolean"
                    },
                    "DefaultRuntime": {
                      "type": "string"
                    },
                    "DockerRootDir": {
                      "type": "string"
                    },
                    "Driver": {
                      "type": "string"
                    },
                    "DriverStatus": {
                      "items": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "type": "array"
                    },
                    "ExperimentalBuild": {
                      "type": "boolean"
                    },
                    "GenericResources": {
                      "nullable": true,
                      "type": "null"
                    },
                    "HttpProxy": {
                      "type": "string"
                    },
                    "HttpsProxy": {
                      "type": "string"
                    },
                    "ID": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "IPv4Forwarding": {
                      "type": "boolean"
                    },
                    "Images": {
                      "type": "integer"
                    },
                    "IndexServerAddress": {
                      "type": "string"
                    },
                    "InitBinary": {
                      "type": "string"
                    },
                    "InitCommit": {
                      "properties": {
                        "Expected": {
                          "type": "string"
                        },
                        "ID": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "Expected",
                        "ID"
                      ],
                      "type": "object"
                    },
                    "Isolation": {
                      "type": "string"
                    },
                    "KernelVersion": {
                      "type": "string"
                    },
                    "Labels": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "LiveRestoreEnabled": {
                      "type": "boolean"
                    },
                    "LoggingDriver": {
                      "type": "string"
                    },
                    "MemTotal": {
                      "type": "integer"
                    },
                    "MemoryLimit": {
                      "type": "boolean"
                    },
                    "NCPU": {
                      "type": "integer"
                    },
                    "NEventsListener": {
                      "type": "integer"
                    },
                    "NFd": {
                      "type": "integer"
                    },
                    "NGoroutines": {
                      "type": "integer"
                    },
                    "Name": {
                      "type": "string"
                    },
                    "NoProxy": {
                      "type": "string"
                    },
                    "OSType": {
                      "type": "string"
                    },
                    "OSVersion": {
                      "type": "string"
                    },
                    "OomKillDisable": {
                      "type": "boolean"
                    },
                    "OperatingSystem": {
                      "type": "string"
                    },
                    "PidsLimit": {
                      "type": "boolean"
                    },
                    "Plugins": {
                      "properties": {
                        "Authorization": {
                          "nullable": true,
                          "type": "null"
                        },
                        "Log": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "Network": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "Volume": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "Log",
                        "Network",
                        "Volume"
                      ],
                      "type": "object"
                    },
                    "ProductLicense": {
                      "type": "string"
                    },
                    "RegistryConfig": {
                      "properties": {
                        "AllowNondistributableArtifactsCIDRs": {
                          "nullable": true,
                          "type": "null"
                        },
                        "AllowNondistributableArtifactsHostnames": {
                          "nullable": true,
                          "type": "null"
                        },
                        "IndexConfigs": {
                          "properties": {
                            "docker.io": {
                              "properties": {
                                "Mirrors": {
                                  "items": {
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "Name": {
                                  "type": "string"
                                },
                                "Official": {
                                  "type": "boolean"
                                },
                                "Secure": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "Mirrors",
                                "Name",
                                "Official",
                                "Secure"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "docker.io"
                          ],
                          "type": "object"
                        },
                        "InsecureRegistryCIDRs": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "Mirrors": {
                          "nullable": true,
                          "type": "null"
                        }
                      },
                      "required": [
                        "IndexConfigs",
                        "InsecureRegistryCIDRs"
                      ],
                      "type": "object"
                    },
                    "RuncCommit": {
                      "properties": {
                        "Expected": {
                          "type": "string"
                        },
                        "ID": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "Expected",
                        "ID"
                      ],
                      "type": "object"
                    },
                    "Runtimes": {
                      "properties": {
                        "io.containerd.runc.v2": {
                          "properties": {
                            "path": {
                              "type": "string"
                            },
                            "status": {
                              "properties": {
                                "org.opencontainers.runtime-spec.features": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "org.opencontainers.runtime-spec.features"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "path",
                            "status"
                          ],
                          "type": "object"
                        },
                        "runc": {
                          "properties": {
                            "path": {
                              "type": "string"
                            },
                            "status": {
                              "properties": {
                                "org.opencontainers.runtime-spec.features": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "org.opencontainers.runtime-spec.features"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "path",
                            "status"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "io.containerd.runc.v2",
                        "runc"
                      ],
                      "type": "object"
                    },
                    "SecurityOptions": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "ServerVersion": {
                      "type": "string"
                    },
                    "SwapLimit": {
                      "type": "boolean"
                    },
                    "Swarm": {
                      "properties": {
                        "ControlAvailable": {
                          "type": "boolean"
                        },
                        "Error": {
                          "type": "string"
                        },
                        "LocalNodeState": {
                          "type": "string"
                        },
                        "NodeAddr": {
                          "type": "string"
                        },
                        "NodeID": {
                          "type": "string"
                        },
                        "RemoteManagers": {
                          "nullable": true,
                          "type": "null"
                        }
                      },
                      "required": [
                        "ControlAvailable",
                        "Error",
                        "LocalNodeState",
                        "NodeAddr",
                        "NodeID"
                      ],
                      "type": "object"
                    },
                    "SystemTime": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "Warnings": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "Architecture",
                    "BridgeNfIp6tables",
                    "BridgeNfIptables",
                    "CDISpecDirs",
                    "CPUSet",
                    "CPUShares",
                    "CgroupDriver",
                    "CgroupVersion",
                    "ClientInfo",
                    "Containerd",
                    "ContainerdCommit",
                    "Containers",
                    "ContainersPaused",
                    "ContainersRunning",
                    "ContainersStopped",
                    "CpuCfsPeriod",
                    "CpuCfsQuota",
                    "Debug",
                    "DefaultRuntime",
                    "DockerRootDir",
                    "Driver",
                    "DriverStatus",
                    "ExperimentalBuild",
                    "HttpProxy",
                    "HttpsProxy",
                    "ID",
                    "IPv4Forwarding",
                    "Images",
                    "IndexServerAddress",
                    "InitBinary",
                    "InitCommit",
                    "Isolation",
                    "KernelVersion",
                    "Labels",
                    "LiveRestoreEnabled",
                    "LoggingDriver",
                    "MemTotal",
                    "MemoryLimit",
                    "NCPU",
                    "NEventsListener",
                    "NFd",
                    "NGoroutines",
                    "Name",
                    "NoProxy",
                    "OSType",
                    "OSVersion",
                    "OomKillDisable",
                    "OperatingSystem",
                    "PidsLimit",
                    "Plugins",
                    "ProductLicense",
                    "RegistryConfig",
                    "RuncCommit",
                    "Runtimes",
                    "SecurityOptions",
                    "ServerVersion",
                    "SwapLimit",
                    "Swarm",
                    "SystemTime",
                    "Warnings"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/docker/networks": {
      "get": {
        "description": "Auto-generated schema for /api/v1/docker/networks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "attachable": false,
                    "created": "2025-06-16T14:44:15.60852522+10:00",
                    "driver": "ipvlan",
                    "id": "59a69f25655a783d385953eb860b964620d0085a36235c8991ea3996d6101382",
                    "ingress": false,
                    "internal": false,
                    "ipam": {
                      "config": [
                        {
                          "gateway": "192.168.20.1",
                          "subnet": "192.168.20.0/24"
                        }
                      ],
                      "driver": "default"
                    },
                    "name": "br0",
                    "options": {
                      "parent": "br0"
                    },
                    "scope": "local"
                  },
                  {
                    "attachable": false,
                    "created": "2025-06-16T14:44:13.879073657+10:00",
                    "driver": "bridge",
                    "id": "30eda4986da228c9e75ece7502b81b9740ae84279a05f6b9b2e6b4f596f2331f",
                    "ingress": false,
                    "internal": false,
                    "ipam": {
                      "config": [
                        {
                          "gateway": "172.17.0.1",
                          "subnet": "172.17.0.0/16"
                        }
                      ],
                      "driver": "default"
                    },
                    "name": "bridge",
                    "options": {
                      "com.docker.network.bridge.default_bridge": "true",
                      "com.docker.network.bridge.enable_icc": "true",
                      "com.docker.network.bridge.enable_ip_masquerade": "true",
                      "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",
                      "com.docker.network.bridge.name": "docker0",
                      "com.docker.network.driver.mtu": "1500"
                    },
                    "scope": "local"
                  },
                  {
                    "attachable": false,
                    "created": "2024-09-07T16:44:12.008605072+10:00",
                    "driver": "host",
                    "id": "1852718c5a7c4d55fee45d3b57427049025c2de60f3592bf55bbddf60cf02300",
                    "ingress": false,
                    "internal": false,
                    "ipam": {
                      "config": null,
                      "driver": "default"
                    },
                    "name": "host",
                    "scope": "local"
                  },
                  {
                    "attachable": false,
                    "created": "2024-09-08T13:54:23.65474586+10:00",
                    "driver": "bridge",
                    "id": "3cc0fa14431ca9930d03d06813f5551022558bf25b3447365c8dac3bab513b06",
                    "ingress": false,
                    "internal": false,
                    "ipam": {
                      "config": [
                        {
                          "gateway": "172.18.0.1",
                          "subnet": "172.18.0.0/16"
                        }
                      ],
                      "driver": "default"
                    },
                    "name": "media",
                    "scope": "local"
                  },
                  {
                    "attachable": false,
                    "created": "2024-09-07T16:44:11.545912822+10:00",
                    "driver": "null",
                    "id": "56041be5952996f40934874d8c29f85c3e42c16021db6557f2f2341a325789d8",
                    "ingress": false,
                    "internal": false,
                    "ipam": {
                      "config": null,
                      "driver": "default"
                    },
                    "name": "none",
                    "scope": "local"
                  },
                  {
                    "attachable": false,
                    "created": "2024-09-17T17:06:57.61140044+10:00",
                    "driver": "bridge",
                    "id": "f063b8e6a1ab69acff8db182b4192681b376b65c223c7c5be30d023d6692d6ec",
                    "ingress": false,
                    "internal": false,
                    "ipam": {
                      "config": [
                        {
                          "gateway": "172.19.0.1",
                          "subnet": "172.19.0.0/16"
                        }
                      ],
                      "driver": "default"
                    },
                    "name": "proxy",
                    "scope": "local"
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "attachable": {
                        "type": "boolean"
                      },
                      "created": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "driver": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "ingress": {
                        "type": "boolean"
                      },
                      "internal": {
                        "type": "boolean"
                      },
                      "ipam": {
                        "properties": {
                          "config": {
                            "items": {
                              "properties": {
                                "gateway": {
                                  "type": "string"
                                },
                                "subnet": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "gateway",
                                "subnet"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "driver": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "config",
                          "driver"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "options": {
                        "properties": {
                          "parent": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "parent"
                        ],
                        "type": "object"
                      },
                      "scope": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "attachable",
                      "created",
                      "driver",
                      "id",
                      "ingress",
                      "internal",
                      "ipam",
                      "name",
                      "options",
                      "scope"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/docs": {
      "get": {
        "description": "Auto-generated schema for /api/v1/docs",
        "responses": {
          "200": {
            "content": {
              "text/html; charset=utf-8": {
                "example": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003ctitle\u003eUMA API Documentation\u003c/title\u003e\n    \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/swagger-ui-dist@5.9.0/swagger-ui.css\" /\u003e\n    \u003cstyle\u003e\n        html {\n            box-sizing: border-box;\n            overflow: -moz-scrollbars-vertical;\n            overflow-y: scroll;\n        }\n        *, *:before, *:after {\n            box-sizing: inherit;\n        }\n        body {\n            margin:0;\n            background: #fafafa;\n        }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003cdiv id=\"swagger-ui\"\u003e\u003c/div\u003e\n    \u003cscript src=\"https://unpkg.com/swagger-ui-dist@5.9.0/swagger-ui-bundle.js\"\u003e\u003c/script\u003e\n    \u003cscript src=\"https://unpkg.com/swagger-ui-dist@5.9.0/swagger-ui-standalone-preset.js\"\u003e\u003c/script\u003e\n    \u003cscript\u003e\n        window.onload = function() {\n            const ui = SwaggerUIBundle({\n                url: '/api/v1/openapi.json',\n                dom_id: '#swagger-ui',\n                deepLinking: true,\n                presets: [\n                    SwaggerUIBundle.presets.apis,\n                    SwaggerUIStandalonePreset\n                ],\n                plugins: [\n                    SwaggerUIBundle.plugins.DownloadUrl\n                ],\n                layout: \"StandaloneLayout\",\n                validatorUrl: null,\n                tryItOutEnabled: true,\n                supportedSubmitMethods: ['get', 'post', 'put', 'delete', 'patch'],\n                onComplete: function() {\n                    console.log('UMA API Documentation loaded');\n                }\n            });\n        };\n    \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e",
                "schema": {
                  "format": "email",
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/gpu": {
      "get": {
        "description": "Auto-generated schema for /api/v1/gpu",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "clock_core_mhz": 0,
                    "clock_memory_mhz": 0,
                    "driver": "i915",
                    "fan_speed_percent": 0,
                    "index": 0,
                    "memory_free_bytes": 0,
                    "memory_free_formatted": "0 B",
                    "memory_total_bytes": 0,
                    "memory_total_formatted": "0 B",
                    "memory_used_bytes": 0,
                    "memory_used_formatted": "0 B",
                    "name": "Intel Corporation CoffeeLake-S GT2 [UHD Graphics 630] (prog-if 00 [VGA controller])",
                    "power_draw_formatted": "0 W",
                    "power_draw_watts": 0,
                    "power_limit_formatted": "0 W",
                    "power_limit_watts": 0,
                    "status": "active",
                    "temperature": 0,
                    "utilization_gpu_percent": 0,
                    "utilization_memory_percent": 0,
                    "uuid": ""
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "clock_core_mhz": {
                        "type": "integer"
                      },
                      "clock_memory_mhz": {
                        "type": "integer"
                      },
                      "driver": {
                        "type": "string"
                      },
                      "fan_speed_percent": {
                        "type": "integer"
                      },
                      "index": {
                        "type": "integer"
                      },
                      "memory_free_bytes": {
                        "type": "integer"
                      },
                      "memory_free_formatted": {
                        "type": "string"
                      },
                      "memory_total_bytes": {
                        "type": "integer"
                      },
                      "memory_total_formatted": {
                        "type": "string"
                      },
                      "memory_used_bytes": {
                        "type": "integer"
                      },
                      "memory_used_formatted": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "power_draw_formatted": {
                        "type": "string"
                      },
                      "power_draw_watts": {
                        "type": "integer"
                      },
                      "power_limit_formatted": {
                        "type": "string"
                      },
                      "power_limit_watts": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "temperature": {
                        "type": "integer"
                      },
                      "utilization_gpu_percent": {
                        "type": "integer"
                      },
                      "utilization_memory_percent": {
                        "type": "integer"
                      },
                      "uuid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "clock_core_mhz",
                      "clock_memory_mhz",
                      "driver",
                      "fan_speed_percent",
                      "index",
                      "memory_free_bytes",
                      "memory_free_formatted",
                      "memory_total_bytes",
                      "memory_total_formatted",
                      "memory_used_bytes",
                      "memory_used_formatted",
                      "name",
                      "power_draw_formatted",
                      "power_draw_watts",
                      "power_limit_formatted",
                      "power_limit_watts",
                      "status",
                      "temperature",
                      "utilization_gpu_percent",
                      "utilization_memory_percent",
                      "uuid"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/health": {
      "get": {
        "description": "Auto-generated schema for /api/v1/health",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "checks": {
                    "response_time_ms": 1455
                  },
                  "dependencies": {
                    "docker": "healthy",
                    "libvirt": "healthy",
                    "notifications": "healthy",
                    "storage": "healthy"
                  },
                  "metrics": {
                    "api_calls_total": 0,
                    "cpu_cores": 6,
                    "cpu_model": "Intel(R) Core(TM) i7-8700K CPU @ 3.70GHz",
                    "cpu_temperature": 43,
                    "cpu_usage_percent": 16.853932584269664,
                    "memory_total_bytes": 33328439296,
                    "memory_total_formatted": "31.0 MB",
                    "memory_usage_percent": 21.34912311016605,
                    "memory_used_bytes": 7115329536,
                    "memory_used_formatted": "6.6 MB",
                    "uptime_human": "532294 seconds",
                    "uptime_seconds": 532293
                  },
                  "service": "uma",
                  "status": "healthy",
                  "timestamp": "2025-06-22T08:33:57Z",
                  "version": "unknown"
                },
                "schema": {
                  "properties": {
                    "checks": {
                      "properties": {
                        "response_time_ms": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "response_time_ms"
                      ],
                      "type": "object"
                    },
                    "dependencies": {
                      "properties": {
                        "docker": {
                          "type": "string"
                        },
                        "libvirt": {
                          "type": "string"
                        },
                        "notifications": {
                          "type": "string"
                        },
                        "storage": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "docker",
                        "libvirt",
                        "notifications",
                        "storage"
                      ],
                      "type": "object"
                    },
                    "metrics": {
                      "properties": {
                        "api_calls_total": {
                          "type": "integer"
                        },
                        "cpu_cores": {
                          "type": "integer"
                        },
                        "cpu_model": {
                          "format": "email",
                          "type": "string"
                        },
                        "cpu_temperature": {
                          "type": "integer"
                        },
                        "cpu_usage_percent": {
                          "type": "number"
                        },
                        "memory_total_bytes": {
                          "type": "integer"
                        },
                        "memory_total_formatted": {
                          "type": "string"
                        },
                        "memory_usage_percent": {
                          "type": "number"
                        },
                        "memory_used_bytes": {
                          "type": "integer"
                        },
                        "memory_used_formatted": {
                          "type": "string"
                        },
                        "uptime_human": {
                          "type": "string"
                        },
                        "uptime_seconds": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "api_calls_total",
                        "cpu_cores",
                        "cpu_model",
                        "cpu_temperature",
                        "cpu_usage_percent",
                        "memory_total_bytes",
                        "memory_total_formatted",
                        "memory_usage_percent",
                        "memory_used_bytes",
                        "memory_used_formatted",
                        "uptime_human",
                        "uptime_seconds"
                      ],
                      "type": "object"
                    },
                    "service": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "checks",
                    "dependencies",
                    "metrics",
                    "service",
                    "status",
                    "timestamp",
                    "version"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/notifications": {
      "get": {
        "description": "Auto-generated schema for /api/v1/notifications",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "count": 0,
                  "notifications": []
                },
                "schema": {
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "notifications": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "count",
                    "notifications"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/notifications/": {
      "get": {
        "description": "Auto-generated schema for /api/v1/notifications/",
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "error": "Notification ID required",
                  "message": "Bad Request"
                },
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/notifications/clear": {
      "get": {
        "description": "Auto-generated schema for /api/v1/notifications/clear",
        "responses": {
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "error": "Method not allowed",
                  "message": "Method Not Allowed"
                },
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/notifications/mark-all-read": {
      "get": {
        "description": "Auto-generated schema for /api/v1/notifications/mark-all-read",
        "responses": {
          "405": {
            "content": {
              "application/json": {
                "example": {
                  "error": "Method not allowed",
                  "message": "Method Not Allowed"
                },
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/notifications/stats": {
      "get": {
        "description": "Auto-generated schema for /api/v1/notifications/stats",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "by_category": {},
                  "by_level": {},
                  "persistent": 0,
                  "total": 0,
                  "unread": 0
                },
                "schema": {
                  "properties": {
                    "by_category": {
                      "properties": {},
                      "type": "object"
                    },
                    "by_level": {
                      "properties": {},
                      "type": "object"
                    },
                    "persistent": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    },
                    "unread": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "by_category",
                    "by_level",
                    "persistent",
                    "total",
                    "unread"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/openapi.json": {
      "get": {
        "description": "Auto-generated schema for /api/v1/openapi.json",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "components": {
                    "responses": {
                      "BadRequest": {
                        "content": {
                          "application/json": {
                            "schema": {
                              "properties": {
                                "error": {
                                  "description": "Error message",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "description": "Bad Request"
                      },
                      "InternalServerError": {
                        "content": {
                          "application/json": {
                            "schema": {
                              "properties": {
                                "error": {
                                  "description": "Error message",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "description": "Internal Server Error"
                      }
                    },
                    "schemas": {
                      "BulkOperationResponse": {
                        "properties": {
                          "operation": {
                            "description": "The bulk operation performed",
                            "enum": [
                              "start",
                              "stop",
                              "restart"
                            ],
                            "examples": [
                              "start",
                              "stop",
                              "restart"
                            ],
                            "type": "string"
                          },
                          "results": {
                            "description": "Results for each container operation",
                            "items": {
                              "$ref": "#/components/schemas/ContainerOperationResult"
                            },
                            "type": "array"
                          },
                          "summary": {
                            "$ref": "#/components/schemas/BulkOperationSummary"
                          }
                        },
                        "type": "object"
                      },
                      "BulkOperationSummary": {
                        "properties": {
                          "failed": {
                            "description": "Number of failed operations",
                            "examples": [
                              0,
                              1,
                              2
                            ],
                            "minimum": 0,
                            "type": "integer"
                          },
                          "succeeded": {
                            "description": "Number of successful operations",
                            "examples": [
                              0,
                              1,
                              2,
                              3
                            ],
                            "minimum": 0,
                            "type": "integer"
                          },
                          "total": {
                            "description": "Total number of containers processed",
                            "examples": [
                              1,
                              2,
                              3,
                              5
                            ],
                            "minimum": 0,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "ContainerOperationResult": {
                        "properties": {
                          "container_id": {
                            "description": "Container ID or name",
                            "examples": [
                              "plex",
                              "nginx",
                              "sonarr"
                            ],
                            "type": "string"
                          },
                          "container_name": {
                            "description": "Container name",
                            "examples": [
                              "plex",
                              "nginx",
                              "sonarr"
                            ],
                            "type": "string"
                          },
                          "duration": {
                            "description": "Operation duration",
                            "examples": [
                              "43.658896ms",
                              "337.794446ms",
                              "1.234s"
                            ],
                            "type": "string"
                          },
                          "error": {
                            "description": "Error message if operation failed",
                            "examples": [
                              "Container not found",
                              "Failed to start container",
                              "Operation timeout"
                            ],
                            "type": "string"
                          },
                          "success": {
                            "description": "Whether the operation succeeded",
                            "examples": [
                              true,
                              false
                            ],
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "DiskInfo": {
                        "properties": {
                          "device": {
                            "description": "Device path",
                            "example": "/dev/sdc",
                            "type": "string"
                          },
                          "health": {
                            "description": "Disk health status",
                            "enum": [
                              "healthy",
                              "warning",
                              "critical",
                              "unknown"
                            ],
                            "examples": [
                              "healthy",
                              "warning"
                            ],
                            "type": "string"
                          },
                          "name": {
                            "description": "Disk name",
                            "example": "disk0",
                            "type": "string"
                          },
                          "role": {
                            "description": "Disk role in the array",
                            "enum": [
                              "array",
                              "parity",
                              "cache",
                              "boot"
                            ],
                            "examples": [
                              "array",
                              "parity",
                              "cache"
                            ],
                            "type": "string"
                          },
                          "size": {
                            "description": "Disk size in bytes",
                            "example": 16000900608000,
                            "type": "integer"
                          },
                          "size_formatted": {
                            "description": "Human-readable disk size",
                            "example": "14.6 TB",
                            "type": "string"
                          },
                          "smart_data": {
                            "description": "SMART health data",
                            "properties": {
                              "attributes": {
                                "description": "SMART attribute details",
                                "items": {
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "raw_value": {
                                      "type": "integer"
                                    },
                                    "value": {
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "overall_health": {
                                "description": "Overall SMART health status",
                                "example": "PASSED",
                                "type": "string"
                              },
                              "power_on_hours": {
                                "description": "Total power-on hours",
                                "example": 37556,
                                "type": "integer"
                              },
                              "temperature": {
                                "description": "SMART temperature reading",
                                "example": 33,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "Disk operational status",
                            "enum": [
                              "online",
                              "offline",
                              "disabled",
                              "error"
                            ],
                            "examples": [
                              "online",
                              "offline"
                            ],
                            "type": "string"
                          },
                          "temperature": {
                            "description": "Disk temperature in Celsius",
                            "example": 33,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "HealthResponse": {
                        "properties": {
                          "checks": {
                            "properties": {
                              "response_time_ms": {
                                "description": "Health check response time in milliseconds",
                                "example": 150,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "dependencies": {
                            "properties": {
                              "docker": {
                                "description": "Docker daemon health status",
                                "enum": [
                                  "healthy",
                                  "unhealthy",
                                  "unavailable"
                                ],
                                "examples": [
                                  "healthy",
                                  "unhealthy"
                                ],
                                "type": "string"
                              },
                              "libvirt": {
                                "description": "Libvirt service health status",
                                "enum": [
                                  "healthy",
                                  "unhealthy",
                                  "unavailable"
                                ],
                                "examples": [
                                  "healthy",
                                  "unavailable"
                                ],
                                "type": "string"
                              },
                              "notifications": {
                                "description": "Notification system health status",
                                "enum": [
                                  "healthy",
                                  "unhealthy",
                                  "unavailable"
                                ],
                                "examples": [
                                  "healthy"
                                ],
                                "type": "string"
                              },
                              "storage": {
                                "description": "Storage system health status",
                                "enum": [
                                  "healthy",
                                  "unhealthy",
                                  "unavailable"
                                ],
                                "examples": [
                                  "healthy"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "metrics": {
                            "properties": {
                              "api_calls_total": {
                                "description": "Total API calls processed",
                                "example": 1234,
                                "type": "integer"
                              },
                              "cpu_usage_percent": {
                                "description": "CPU usage percentage",
                                "example": 23.5,
                                "type": "number"
                              },
                              "memory_usage_percent": {
                                "description": "Memory usage percentage",
                                "example": 45.2,
                                "type": "number"
                              },
                              "uptime_seconds": {
                                "description": "System uptime in seconds",
                                "example": 86400,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "service": {
                            "const": "uma",
                            "description": "Service name",
                            "type": "string"
                          },
                          "status": {
                            "description": "Overall health status",
                            "enum": [
                              "healthy",
                              "degraded",
                              "unhealthy"
                            ],
                            "examples": [
                              "healthy",
                              "degraded"
                            ],
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "Health check timestamp",
                            "format": "date-time",
                            "type": "string"
                          },
                          "version": {
                            "description": "UMA version",
                            "examples": [
                              "1.0.0",
                              "1.1.0"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "PaginationInfo": {
                        "properties": {
                          "has_more": {
                            "description": "Whether there are more pages available",
                            "example": true,
                            "type": "boolean"
                          },
                          "page": {
                            "description": "Current page number",
                            "example": 1,
                            "type": "integer"
                          },
                          "per_page": {
                            "description": "Number of items per page",
                            "example": 50,
                            "type": "integer"
                          },
                          "total": {
                            "description": "Total number of items",
                            "example": 150,
                            "type": "integer"
                          },
                          "total_pages": {
                            "description": "Total number of pages",
                            "example": 3,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "ResponseMeta": {
                        "properties": {
                          "request_id": {
                            "description": "Unique request identifier for tracing",
                            "example": "req_1234567890_5678",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "Response timestamp in ISO 8601 format",
                            "example": "2025-06-15T21:30:42Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "version": {
                            "description": "API version",
                            "example": "1.0.0",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "StandardResponse": {
                        "properties": {
                          "data": {
                            "description": "The response data"
                          },
                          "meta": {
                            "$ref": "#/components/schemas/ResponseMeta"
                          },
                          "pagination": {
                            "$ref": "#/components/schemas/PaginationInfo"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "info": {
                    "contact": {
                      "email": "support@domalab.net",
                      "name": "UMA Development Team",
                      "url": "https://github.com/domalab/uma"
                    },
                    "description": "Unraid Management Agent API for system monitoring, Docker container management, VM control, and storage management",
                    "title": "UMA API",
                    "version": "unknown"
                  },
                  "openapi": "3.1.1",
                  "paths": {
                    "/api/v1/docker/containers": {
                      "get": {
                        "description": "Returns a list of Docker containers with optional pagination support",
                        "parameters": [
                          {
                            "description": "Include stopped containers",
                            "in": "query",
                            "name": "all",
                            "required": false,
                            "schema": {
                              "default": false,
                              "type": "boolean"
                            }
                          },
                          {
                            "description": "Page number for pagination (enables paginated response)",
                            "in": "query",
                            "name": "page",
                            "required": false,
                            "schema": {
                              "default": 1,
                              "minimum": 1,
                              "type": "integer"
                            }
                          },
                          {
                            "description": "Number of items per page (enables paginated response)",
                            "in": "query",
                            "name": "limit",
                            "required": false,
                            "schema": {
                              "default": 50,
                              "maximum": 1000,
                              "minimum": 1,
                              "type": "integer"
                            }
                          },
                          {
                            "description": "Optional request ID for tracing",
                            "in": "header",
                            "name": "X-Request-ID",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          }
                        ],
                        "responses": {
                          "200": {
                            "content": {
                              "application/json": {
                                "schema": {
                                  "oneOf": [
                                    {
                                      "allOf": [
                                        {
                                          "$ref": "#/components/schemas/StandardResponse"
                                        },
                                        {
                                          "properties": {
                                            "data": {
                                              "items": {
                                                "description": "Docker container information",
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          }
                                        }
                                      ],
                                      "description": "Paginated response (when page or limit parameters are provided)"
                                    },
                                    {
                                      "description": "Legacy response format (when no pagination parameters)",
                                      "items": {
                                        "description": "Docker container information",
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  ]
                                }
                              }
                            },
                            "description": "Containers retrieved successfully"
                          },
                          "500": {
                            "$ref": "#/components/responses/InternalServerError"
                          }
                        },
                        "summary": "List Docker containers",
                        "tags": [
                          "Docker"
                        ]
                      }
                    },
                    "/api/v1/docker/containers/bulk/start": {
                      "post": {
                        "description": "Starts multiple Docker containers in a single bulk operation",
                        "requestBody": {
                          "content": {
                            "application/json": {
                              "schema": {
                                "properties": {
                                  "container_ids": {
                                    "description": "Array of container IDs or names to start",
                                    "example": [
                                      "plex",
                                      "nginx",
                                      "sonarr"
                                    ],
                                    "items": {
                                      "type": "string"
                                    },
                                    "maxItems": 50,
                                    "minItems": 1,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "container_ids"
                                ],
                                "type": "object"
                              }
                            }
                          },
                          "required": true
                        },
                        "responses": {
                          "200": {
                            "content": {
                              "application/json": {
                                "schema": {
                                  "$ref": "#/components/schemas/BulkOperationResponse"
                                }
                              }
                            },
                            "description": "Bulk operation completed (may include partial failures)"
                          }
                        },
                        "summary": "Start multiple Docker containers",
                        "tags": [
                          "Docker",
                          "Bulk Operations"
                        ]
                      }
                    },
                    "/api/v1/health": {
                      "get": {
                        "description": "Returns comprehensive health information including dependency status, system metrics, and performance data",
                        "parameters": [
                          {
                            "description": "Optional request ID for tracing",
                            "in": "header",
                            "name": "X-Request-ID",
                            "required": false,
                            "schema": {
                              "type": "string"
                            }
                          }
                        ],
                        "responses": {
                          "200": {
                            "content": {
                              "application/json": {
                                "schema": {
                                  "$ref": "#/components/schemas/HealthResponse"
                                }
                              }
                            },
                            "description": "Health status retrieved successfully"
                          },
                          "500": {
                            "$ref": "#/components/responses/InternalServerError"
                          }
                        },
                        "summary": "Get system health status",
                        "tags": [
                          "Health"
                        ]
                      }
                    },
                    "/api/v1/storage/disks": {
                      "get": {
                        "description": "Returns comprehensive disk information including SMART health data, with optional pagination support",
                        "parameters": [
                          {
                            "description": "Page number for pagination (enables paginated response with flattened disk list)",
                            "in": "query",
                            "name": "page",
                            "required": false,
                            "schema": {
                              "default": 1,
                              "minimum": 1,
                              "type": "integer"
                            }
                          },
                          {
                            "description": "Number of disks per page (enables paginated response)",
                            "in": "query",
                            "name": "limit",
                            "required": false,
                            "schema": {
                              "default": 10,
                              "maximum": 100,
                              "minimum": 1,
                              "type": "integer"
                            }
                          }
                        ],
                        "responses": {
                          "200": {
                            "content": {
                              "application/json": {
                                "schema": {
                                  "oneOf": [
                                    {
                                      "$ref": "#/components/schemas/StandardResponse",
                                      "description": "Paginated response (when page or limit parameters are provided)"
                                    },
                                    {
                                      "description": "Structured response format (when no pagination parameters)",
                                      "properties": {
                                        "array_disks": {
                                          "description": "Array member disks",
                                          "type": "array"
                                        },
                                        "boot_disk": {
                                          "description": "Boot disk information",
                                          "type": "object"
                                        },
                                        "cache_disks": {
                                          "description": "Cache pool disks",
                                          "type": "array"
                                        },
                                        "summary": {
                                          "description": "Disk summary statistics",
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ]
                                }
                              }
                            },
                            "description": "Disk information retrieved successfully"
                          }
                        },
                        "summary": "Get consolidated disk information",
                        "tags": [
                          "Storage"
                        ]
                      }
                    },
                    "/api/v1/ws/docker/events": {
                      "get": {
                        "description": "WebSocket endpoint for real-time Docker container events (start, stop, restart, health changes)",
                        "responses": {
                          "101": {
                            "description": "WebSocket connection established"
                          }
                        },
                        "summary": "Real-time Docker events WebSocket",
                        "tags": [
                          "WebSocket",
                          "Docker"
                        ]
                      }
                    },
                    "/api/v1/ws/storage/status": {
                      "get": {
                        "description": "WebSocket endpoint for real-time storage array status updates (disk health, SMART alerts, array status changes)",
                        "responses": {
                          "101": {
                            "description": "WebSocket connection established"
                          }
                        },
                        "summary": "Real-time storage status WebSocket",
                        "tags": [
                          "WebSocket",
                          "Storage"
                        ]
                      }
                    },
                    "/api/v1/ws/system/stats": {
                      "get": {
                        "description": "WebSocket endpoint for real-time system statistics including CPU, memory, and uptime",
                        "responses": {
                          "101": {
                            "description": "WebSocket connection established"
                          }
                        },
                        "summary": "Real-time system statistics WebSocket",
                        "tags": [
                          "WebSocket",
                          "System"
                        ]
                      }
                    }
                  },
                  "servers": [
                    {
                      "description": "Local UMA API server",
                      "url": "http://your-unraid-server:34600"
                    },
                    {
                      "description": "Unix socket API server",
                      "url": "unix:/var/run/uma-api.sock"
                    }
                  ]
                },
                "schema": {
                  "properties": {
                    "components": {
                      "properties": {
                        "responses": {
                          "properties": {
                            "BadRequest": {
                              "properties": {
                                "content": {
                                  "properties": {
                                    "application/json": {
                                      "properties": {
                                        "schema": {
                                          "properties": {
                                            "properties": {
                                              "properties": {
                                                "error": {
                                                  "properties": {
                                                    "description": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "description",
                                                    "type"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "required": [
                                                "error"
                                              ],
                                              "type": "object"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "properties",
                                            "type"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "schema"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "application/json"
                                  ],
                                  "type": "object"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "content",
                                "description"
                              ],
                              "type": "object"
                            },
                            "InternalServerError": {
                              "properties": {
                                "content": {
                                  "properties": {
                                    "application/json": {
                                      "properties": {
                                        "schema": {
                                          "properties": {
                                            "properties": {
                                              "properties": {
                                                "error": {
                                                  "properties": {
                                                    "description": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "description",
                                                    "type"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "required": [
                                                "error"
                                              ],
                                              "type": "object"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "properties",
                                            "type"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "schema"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "application/json"
                                  ],
                                  "type": "object"
                                },
                                "description": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "content",
                                "description"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "BadRequest",
                            "InternalServerError"
                          ],
                          "type": "object"
                        },
                        "schemas": {
                          "properties": {
                            "BulkOperationResponse": {
                              "properties": {
                                "properties": {
                                  "properties": {
                                    "operation": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "enum": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "enum",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "results": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "items": {
                                          "properties": {
                                            "$ref": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "$ref"
                                          ],
                                          "type": "object"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "items",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "summary": {
                                      "properties": {
                                        "$ref": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "$ref"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "operation",
                                    "results",
                                    "summary"
                                  ],
                                  "type": "object"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "properties",
                                "type"
                              ],
                              "type": "object"
                            },
                            "BulkOperationSummary": {
                              "properties": {
                                "properties": {
                                  "properties": {
                                    "failed": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "integer"
                                          },
                                          "type": "array"
                                        },
                                        "minimum": {
                                          "type": "integer"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "examples",
                                        "minimum",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "succeeded": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "integer"
                                          },
                                          "type": "array"
                                        },
                                        "minimum": {
                                          "type": "integer"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "examples",
                                        "minimum",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "total": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "integer"
                                          },
                                          "type": "array"
                                        },
                                        "minimum": {
                                          "type": "integer"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "examples",
                                        "minimum",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "failed",
                                    "succeeded",
                                    "total"
                                  ],
                                  "type": "object"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "properties",
                                "type"
                              ],
                              "type": "object"
                            },
                            "ContainerOperationResult": {
                              "properties": {
                                "properties": {
                                  "properties": {
                                    "container_id": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "container_name": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "duration": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "error": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "success": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "boolean"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "container_id",
                                    "container_name",
                                    "duration",
                                    "error",
                                    "success"
                                  ],
                                  "type": "object"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "properties",
                                "type"
                              ],
                              "type": "object"
                            },
                            "DiskInfo": {
                              "properties": {
                                "properties": {
                                  "properties": {
                                    "device": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "health": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "enum": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "enum",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "name": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "role": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "enum": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "enum",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "size": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "integer"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "size_formatted": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "smart_data": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "properties": {
                                          "properties": {
                                            "attributes": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "items": {
                                                  "properties": {
                                                    "properties": {
                                                      "properties": {
                                                        "id": {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ],
                                                          "type": "object"
                                                        },
                                                        "name": {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ],
                                                          "type": "object"
                                                        },
                                                        "raw_value": {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ],
                                                          "type": "object"
                                                        },
                                                        "value": {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ],
                                                          "type": "object"
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "name",
                                                        "raw_value",
                                                        "value"
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "type": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "properties",
                                                    "type"
                                                  ],
                                                  "type": "object"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "items",
                                                "type"
                                              ],
                                              "type": "object"
                                            },
                                            "overall_health": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "example": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "example",
                                                "type"
                                              ],
                                              "type": "object"
                                            },
                                            "power_on_hours": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "example": {
                                                  "type": "integer"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "example",
                                                "type"
                                              ],
                                              "type": "object"
                                            },
                                            "temperature": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "example": {
                                                  "type": "integer"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "example",
                                                "type"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "attributes",
                                            "overall_health",
                                            "power_on_hours",
                                            "temperature"
                                          ],
                                          "type": "object"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "properties",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "status": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "enum": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "enum",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "temperature": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "integer"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "device",
                                    "health",
                                    "name",
                                    "role",
                                    "size",
                                    "size_formatted",
                                    "smart_data",
                                    "status",
                                    "temperature"
                                  ],
                                  "type": "object"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "properties",
                                "type"
                              ],
                              "type": "object"
                            },
                            "HealthResponse": {
                              "properties": {
                                "properties": {
                                  "properties": {
                                    "checks": {
                                      "properties": {
                                        "properties": {
                                          "properties": {
                                            "response_time_ms": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "example": {
                                                  "type": "integer"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "example",
                                                "type"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "response_time_ms"
                                          ],
                                          "type": "object"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "properties",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "dependencies": {
                                      "properties": {
                                        "properties": {
                                          "properties": {
                                            "docker": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "enum": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "examples": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "enum",
                                                "examples",
                                                "type"
                                              ],
                                              "type": "object"
                                            },
                                            "libvirt": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "enum": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "examples": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "enum",
                                                "examples",
                                                "type"
                                              ],
                                              "type": "object"
                                            },
                                            "notifications": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "enum": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "examples": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "enum",
                                                "examples",
                                                "type"
                                              ],
                                              "type": "object"
                                            },
                                            "storage": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "enum": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "examples": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "enum",
                                                "examples",
                                                "type"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "docker",
                                            "libvirt",
                                            "notifications",
                                            "storage"
                                          ],
                                          "type": "object"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "properties",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "metrics": {
                                      "properties": {
                                        "properties": {
                                          "properties": {
                                            "api_calls_total": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "example": {
                                                  "type": "integer"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "example",
                                                "type"
                                              ],
                                              "type": "object"
                                            },
                                            "cpu_usage_percent": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "example": {
                                                  "type": "number"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "example",
                                                "type"
                                              ],
                                              "type": "object"
                                            },
                                            "memory_usage_percent": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "example": {
                                                  "type": "number"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "example",
                                                "type"
                                              ],
                                              "type": "object"
                                            },
                                            "uptime_seconds": {
                                              "properties": {
                                                "description": {
                                                  "type": "string"
                                                },
                                                "example": {
                                                  "type": "integer"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "description",
                                                "example",
                                                "type"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "api_calls_total",
                                            "cpu_usage_percent",
                                            "memory_usage_percent",
                                            "uptime_seconds"
                                          ],
                                          "type": "object"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "properties",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "service": {
                                      "properties": {
                                        "const": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "const",
                                        "description",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "status": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "enum": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "enum",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "timestamp": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "format": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "format",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "version": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "examples": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "examples",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "checks",
                                    "dependencies",
                                    "metrics",
                                    "service",
                                    "status",
                                    "timestamp",
                                    "version"
                                  ],
                                  "type": "object"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "properties",
                                "type"
                              ],
                              "type": "object"
                            },
                            "PaginationInfo": {
                              "properties": {
                                "properties": {
                                  "properties": {
                                    "has_more": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "boolean"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "page": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "integer"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "per_page": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "integer"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "total": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "integer"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "total_pages": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "integer"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "has_more",
                                    "page",
                                    "per_page",
                                    "total",
                                    "total_pages"
                                  ],
                                  "type": "object"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "properties",
                                "type"
                              ],
                              "type": "object"
                            },
                            "ResponseMeta": {
                              "properties": {
                                "properties": {
                                  "properties": {
                                    "request_id": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "timestamp": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "format": "date-time",
                                          "type": "string"
                                        },
                                        "format": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "format",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    "version": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "example": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "example",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "request_id",
                                    "timestamp",
                                    "version"
                                  ],
                                  "type": "object"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "properties",
                                "type"
                              ],
                              "type": "object"
                            },
                            "StandardResponse": {
                              "properties": {
                                "properties": {
                                  "properties": {
                                    "data": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ],
                                      "type": "object"
                                    },
                                    "meta": {
                                      "properties": {
                                        "$ref": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "$ref"
                                      ],
                                      "type": "object"
                                    },
                                    "pagination": {
                                      "properties": {
                                        "$ref": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "$ref"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "data",
                                    "meta",
                                    "pagination"
                                  ],
                                  "type": "object"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "properties",
                                "type"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "BulkOperationResponse",
                            "BulkOperationSummary",
                            "ContainerOperationResult",
                            "DiskInfo",
                            "HealthResponse",
                            "PaginationInfo",
                            "ResponseMeta",
                            "StandardResponse"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "responses",
                        "schemas"
                      ],
                      "type": "object"
                    },
                    "info": {
                      "properties": {
                        "contact": {
                          "properties": {
                            "email": {
                              "format": "email",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "email",
                            "name",
                            "url"
                          ],
                          "type": "object"
                        },
                        "description": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "contact",
                        "description",
                        "title",
                        "version"
                      ],
                      "type": "object"
                    },
                    "openapi": {
                      "type": "string"
                    },
                    "paths": {
                      "properties": {
                        "/api/v1/docker/containers": {
                          "properties": {
                            "get": {
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "parameters": {
                                  "items": {
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      },
                                      "in": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "schema": {
                                        "properties": {
                                          "default": {
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "default",
                                          "type"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "description",
                                      "in",
                                      "name",
                                      "required",
                                      "schema"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "responses": {
                                  "properties": {
                                    "200": {
                                      "properties": {
                                        "content": {
                                          "properties": {
                                            "application/json": {
                                              "properties": {
                                                "schema": {
                                                  "properties": {
                                                    "oneOf": {
                                                      "items": {
                                                        "properties": {
                                                          "allOf": {
                                                            "items": {
                                                              "properties": {
                                                                "$ref": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "$ref"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "description": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "allOf",
                                                          "description"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "required": [
                                                    "oneOf"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "required": [
                                                "schema"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "application/json"
                                          ],
                                          "type": "object"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "content",
                                        "description"
                                      ],
                                      "type": "object"
                                    },
                                    "500": {
                                      "properties": {
                                        "$ref": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "$ref"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "200",
                                    "500"
                                  ],
                                  "type": "object"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "tags": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "description",
                                "parameters",
                                "responses",
                                "summary",
                                "tags"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "get"
                          ],
                          "type": "object"
                        },
                        "/api/v1/docker/containers/bulk/start": {
                          "properties": {
                            "post": {
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "requestBody": {
                                  "properties": {
                                    "content": {
                                      "properties": {
                                        "application/json": {
                                          "properties": {
                                            "schema": {
                                              "properties": {
                                                "properties": {
                                                  "properties": {
                                                    "container_ids": {
                                                      "properties": {
                                                        "description": {
                                                          "type": "string"
                                                        },
                                                        "example": {
                                                          "items": {
                                                            "type": "string"
                                                          },
                                                          "type": "array"
                                                        },
                                                        "items": {
                                                          "properties": {
                                                            "type": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "type"
                                                          ],
                                                          "type": "object"
                                                        },
                                                        "maxItems": {
                                                          "type": "integer"
                                                        },
                                                        "minItems": {
                                                          "type": "integer"
                                                        },
                                                        "type": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "description",
                                                        "example",
                                                        "items",
                                                        "maxItems",
                                                        "minItems",
                                                        "type"
                                                      ],
                                                      "type": "object"
                                                    }
                                                  },
                                                  "required": [
                                                    "container_ids"
                                                  ],
                                                  "type": "object"
                                                },
                                                "required": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "properties",
                                                "required",
                                                "type"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "schema"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "application/json"
                                      ],
                                      "type": "object"
                                    },
                                    "required": {
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "content",
                                    "required"
                                  ],
                                  "type": "object"
                                },
                                "responses": {
                                  "properties": {
                                    "200": {
                                      "properties": {
                                        "content": {
                                          "properties": {
                                            "application/json": {
                                              "properties": {
                                                "schema": {
                                                  "properties": {
                                                    "$ref": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "$ref"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "required": [
                                                "schema"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "application/json"
                                          ],
                                          "type": "object"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "content",
                                        "description"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "200"
                                  ],
                                  "type": "object"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "tags": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "description",
                                "requestBody",
                                "responses",
                                "summary",
                                "tags"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "post"
                          ],
                          "type": "object"
                        },
                        "/api/v1/health": {
                          "properties": {
                            "get": {
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "parameters": {
                                  "items": {
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      },
                                      "in": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "schema": {
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "description",
                                      "in",
                                      "name",
                                      "required",
                                      "schema"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "responses": {
                                  "properties": {
                                    "200": {
                                      "properties": {
                                        "content": {
                                          "properties": {
                                            "application/json": {
                                              "properties": {
                                                "schema": {
                                                  "properties": {
                                                    "$ref": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "$ref"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "required": [
                                                "schema"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "application/json"
                                          ],
                                          "type": "object"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "content",
                                        "description"
                                      ],
                                      "type": "object"
                                    },
                                    "500": {
                                      "properties": {
                                        "$ref": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "$ref"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "200",
                                    "500"
                                  ],
                                  "type": "object"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "tags": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "description",
                                "parameters",
                                "responses",
                                "summary",
                                "tags"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "get"
                          ],
                          "type": "object"
                        },
                        "/api/v1/storage/disks": {
                          "properties": {
                            "get": {
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "parameters": {
                                  "items": {
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      },
                                      "in": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "schema": {
                                        "properties": {
                                          "default": {
                                            "type": "integer"
                                          },
                                          "minimum": {
                                            "type": "integer"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "default",
                                          "minimum",
                                          "type"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "description",
                                      "in",
                                      "name",
                                      "required",
                                      "schema"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "responses": {
                                  "properties": {
                                    "200": {
                                      "properties": {
                                        "content": {
                                          "properties": {
                                            "application/json": {
                                              "properties": {
                                                "schema": {
                                                  "properties": {
                                                    "oneOf": {
                                                      "items": {
                                                        "properties": {
                                                          "$ref": {
                                                            "type": "string"
                                                          },
                                                          "description": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "$ref",
                                                          "description"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "required": [
                                                    "oneOf"
                                                  ],
                                                  "type": "object"
                                                }
                                              },
                                              "required": [
                                                "schema"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "required": [
                                            "application/json"
                                          ],
                                          "type": "object"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "content",
                                        "description"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "200"
                                  ],
                                  "type": "object"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "tags": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "description",
                                "parameters",
                                "responses",
                                "summary",
                                "tags"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "get"
                          ],
                          "type": "object"
                        },
                        "/api/v1/ws/docker/events": {
                          "properties": {
                            "get": {
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "responses": {
                                  "properties": {
                                    "101": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "101"
                                  ],
                                  "type": "object"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "tags": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "description",
                                "responses",
                                "summary",
                                "tags"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "get"
                          ],
                          "type": "object"
                        },
                        "/api/v1/ws/storage/status": {
                          "properties": {
                            "get": {
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "responses": {
                                  "properties": {
                                    "101": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "101"
                                  ],
                                  "type": "object"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "tags": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "description",
                                "responses",
                                "summary",
                                "tags"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "get"
                          ],
                          "type": "object"
                        },
                        "/api/v1/ws/system/stats": {
                          "properties": {
                            "get": {
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "responses": {
                                  "properties": {
                                    "101": {
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "101"
                                  ],
                                  "type": "object"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "tags": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "description",
                                "responses",
                                "summary",
                                "tags"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "get"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "/api/v1/docker/containers",
                        "/api/v1/docker/containers/bulk/start",
                        "/api/v1/health",
                        "/api/v1/storage/disks",
                        "/api/v1/ws/docker/events",
                        "/api/v1/ws/storage/status",
                        "/api/v1/ws/system/stats"
                      ],
                      "type": "object"
                    },
                    "servers": {
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "url"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "components",
                    "info",
                    "openapi",
                    "paths",
                    "servers"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/operations": {
      "get": {
        "description": "Auto-generated schema for /api/v1/operations",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/operations/": {
      "get": {
        "description": "Auto-generated schema for /api/v1/operations/",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/operations/stats": {
      "get": {
        "description": "Auto-generated schema for /api/v1/operations/stats",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/rate-limits/config": {
      "get": {
        "description": "Auto-generated schema for /api/v1/rate-limits/config",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/rate-limits/stats": {
      "get": {
        "description": "Auto-generated schema for /api/v1/rate-limits/stats",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/scripts": {
      "get": {
        "description": "Auto-generated schema for /api/v1/scripts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "scripts": [
                    {
                      "description": "This script will delete all .DS_Store files on your array created by Apple's Finder",
                      "last_result": "unknown",
                      "last_run": "",
                      "name": "delete.ds_store",
                      "path": "/boot/config/plugins/user.scripts/scripts/delete.ds_store/script",
                      "status": "idle"
                    },
                    {
                      "description": "This simple script will delete any \"dangling\" images within your docker.img file",
                      "last_result": "unknown",
                      "last_run": "",
                      "name": "delete_dangling_images",
                      "path": "/boot/config/plugins/user.scripts/scripts/delete_dangling_images/script",
                      "status": "idle"
                    },
                    {
                      "description": "No description available",
                      "last_result": "unknown",
                      "last_run": "",
                      "name": "startDockerContainers",
                      "path": "/boot/config/plugins/user.scripts/scripts/startDockerContainers/script",
                      "status": "idle"
                    },
                    {
                      "description": "No description available",
                      "last_result": "unknown",
                      "last_run": "",
                      "name": "stopDockerContainers",
                      "path": "/boot/config/plugins/user.scripts/scripts/stopDockerContainers/script",
                      "status": "idle"
                    },
                    {
                      "description": "This script will display the size of your docker logs, so you can see if runaway logging is contributing to your docker.img file filling up",
                      "last_result": "success",
                      "last_run": "2025-06-18T17:04:24+10:00",
                      "name": "viewDockerLogSize",
                      "path": "/boot/config/plugins/user.scripts/scripts/viewDockerLogSize/script",
                      "status": "idle"
                    }
                  ]
                },
                "schema": {
                  "properties": {
                    "scripts": {
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "last_result": {
                            "type": "string"
                          },
                          "last_run": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "description",
                          "last_result",
                          "last_run",
                          "name",
                          "path",
                          "status"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "scripts"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/scripts/": {
      "get": {
        "description": "Auto-generated schema for /api/v1/scripts/",
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "error": "Script name required",
                  "message": "Bad Request"
                },
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/shares": {
      "get": {
        "description": "Auto-generated schema for /api/v1/shares",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "shares": [
                    {
                      "afp_enabled": false,
                      "allocator_method": "",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2022-09-17T03:38:16+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "",
                      "modified_at": "2022-09-17T03:38:16+10:00",
                      "name": "._appdata",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/._appdata",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "",
                      "split_level": 0,
                      "use_cache": ""
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2022-09-17T03:38:16+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "",
                      "modified_at": "2022-09-17T03:38:16+10:00",
                      "name": "._backups",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/._backups",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "",
                      "split_level": 0,
                      "use_cache": ""
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2022-09-17T03:38:16+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "",
                      "modified_at": "2022-09-17T03:38:16+10:00",
                      "name": "._domains",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/._domains",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "",
                      "split_level": 0,
                      "use_cache": ""
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2022-09-17T03:38:16+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "",
                      "modified_at": "2022-09-17T03:38:16+10:00",
                      "name": "._downloads",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/._downloads",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "",
                      "split_level": 0,
                      "use_cache": ""
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2022-09-17T03:38:16+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "",
                      "modified_at": "2022-09-17T03:38:16+10:00",
                      "name": "._isos",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/._isos",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "",
                      "split_level": 0,
                      "use_cache": ""
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2022-09-17T03:38:16+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "",
                      "modified_at": "2022-09-17T03:38:16+10:00",
                      "name": "._medialibrary",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/._medialibrary",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "",
                      "split_level": 0,
                      "use_cache": ""
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2022-09-17T03:38:16+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "",
                      "modified_at": "2022-09-17T03:38:16+10:00",
                      "name": "._system",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/._system",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "",
                      "split_level": 0,
                      "use_cache": ""
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2022-09-17T03:38:16+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "",
                      "modified_at": "2022-09-17T03:38:16+10:00",
                      "name": "._trash",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/._trash",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "",
                      "split_level": 0,
                      "use_cache": ""
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2022-09-17T03:38:16+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "",
                      "modified_at": "2022-09-17T03:38:16+10:00",
                      "name": "._wallpapers",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/._wallpapers",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "",
                      "split_level": 0,
                      "use_cache": ""
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "highwater",
                      "cache_pool": "cache",
                      "comment": "",
                      "created_at": "2024-12-23T17:44:14+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "50000000",
                      "modified_at": "2024-12-23T17:44:14+10:00",
                      "name": "appdata",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/appdata",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "public",
                      "split_level": 0,
                      "use_cache": "only"
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "highwater",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2024-09-11T15:37:46+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "781193962",
                      "modified_at": "2024-09-11T15:37:46+10:00",
                      "name": "backups",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/backups",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "private",
                      "split_level": 0,
                      "use_cache": "no"
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "highwater",
                      "cache_pool": "cache",
                      "comment": "",
                      "created_at": "2025-01-14T14:49:52+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "50010658",
                      "modified_at": "2025-01-14T14:49:52+10:00",
                      "name": "domains",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/domains",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "private",
                      "split_level": 0,
                      "use_cache": "only"
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "highwater",
                      "cache_pool": "garbage",
                      "comment": "",
                      "created_at": "2025-04-07T08:31:08+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "22557466",
                      "modified_at": "2025-04-07T08:31:08+10:00",
                      "name": "downloads",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/downloads",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "private",
                      "split_level": 0,
                      "use_cache": "only"
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "highwater",
                      "cache_pool": "",
                      "comment": "ISO images",
                      "created_at": "2025-05-06T09:45:48+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "781193962",
                      "modified_at": "2025-05-06T09:45:48+10:00",
                      "name": "isos",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/isos",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "public",
                      "split_level": 0,
                      "use_cache": "no"
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "highwater",
                      "cache_pool": "",
                      "comment": "",
                      "created_at": "2025-05-03T11:29:22+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "976434990",
                      "modified_at": "2025-05-03T11:29:22+10:00",
                      "name": "media",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/media",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "public",
                      "split_level": 0,
                      "use_cache": "no"
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "highwater",
                      "cache_pool": "cache",
                      "comment": "",
                      "created_at": "2024-10-11T17:36:00+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "50000000",
                      "modified_at": "2024-10-11T17:36:00+10:00",
                      "name": "system",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/system",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "private",
                      "split_level": 0,
                      "use_cache": "only"
                    },
                    {
                      "afp_enabled": false,
                      "allocator_method": "highwater",
                      "cache_pool": "garbage",
                      "comment": "",
                      "created_at": "2025-04-07T08:28:06+10:00",
                      "excluded_disks": null,
                      "ftp_enabled": false,
                      "included_disks": null,
                      "minimum_free_space": "22557466",
                      "modified_at": "2025-04-07T08:28:06+10:00",
                      "name": "unmanic",
                      "nfs_enabled": false,
                      "nfs_security": "",
                      "path": "/mnt/user/unmanic",
                      "smb_enabled": false,
                      "smb_guests": false,
                      "smb_security": "private",
                      "split_level": 0,
                      "use_cache": "only"
                    }
                  ]
                },
                "schema": {
                  "properties": {
                    "shares": {
                      "items": {
                        "properties": {
                          "afp_enabled": {
                            "type": "boolean"
                          },
                          "allocator_method": {
                            "type": "string"
                          },
                          "cache_pool": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "excluded_disks": {
                            "nullable": true,
                            "type": "null"
                          },
                          "ftp_enabled": {
                            "type": "boolean"
                          },
                          "included_disks": {
                            "nullable": true,
                            "type": "null"
                          },
                          "minimum_free_space": {
                            "type": "string"
                          },
                          "modified_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "nfs_enabled": {
                            "type": "boolean"
                          },
                          "nfs_security": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "smb_enabled": {
                            "type": "boolean"
                          },
                          "smb_guests": {
                            "type": "boolean"
                          },
                          "smb_security": {
                            "type": "string"
                          },
                          "split_level": {
                            "type": "integer"
                          },
                          "use_cache": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "afp_enabled",
                          "allocator_method",
                          "cache_pool",
                          "comment",
                          "created_at",
                          "ftp_enabled",
                          "minimum_free_space",
                          "modified_at",
                          "name",
                          "nfs_enabled",
                          "nfs_security",
                          "path",
                          "smb_enabled",
                          "smb_guests",
                          "smb_security",
                          "split_level",
                          "use_cache"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "shares"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/shares/": {
      "get": {
        "description": "Auto-generated schema for /api/v1/shares/",
        "responses": {
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "error": "Share name required",
                  "message": "Bad Request"
                },
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error",
                    "message"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/storage/array": {
      "get": {
        "description": "Auto-generated schema for /api/v1/storage/array",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "disks": [
                    {
                      "available": 0,
                      "device": "/dev/sdc",
                      "disk_type": "HDD",
                      "filesystem": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "WUH721816ALE6L4",
                      "mount_point": "",
                      "name": "disk0",
                      "power_state": "active",
                      "serial_number": "2CGV0URP",
                      "size": 16000900608000,
                      "smart_data": {
                        "attributes": [
                          {
                            "flags": "0x000b",
                            "id": 1,
                            "name": "Raw_Read_Error_Rate",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0005",
                            "id": 2,
                            "name": "Throughput_Performance",
                            "raw_value": 96,
                            "threshold": 54,
                            "value": 136,
                            "when_failed": "-",
                            "worst": 136
                          },
                          {
                            "flags": "0x0007",
                            "id": 3,
                            "name": "Spin_Up_Time",
                            "raw_value": 329,
                            "threshold": 1,
                            "value": 83,
                            "when_failed": "-",
                            "worst": 83
                          },
                          {
                            "flags": "0x0012",
                            "id": 4,
                            "name": "Start_Stop_Count",
                            "raw_value": 130,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0033",
                            "id": 5,
                            "name": "Reallocated_Sector_Ct",
                            "raw_value": 2,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000b",
                            "id": 7,
                            "name": "Seek_Error_Rate",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0005",
                            "id": 8,
                            "name": "Seek_Time_Performance",
                            "raw_value": 15,
                            "threshold": 20,
                            "value": 140,
                            "when_failed": "-",
                            "worst": 140
                          },
                          {
                            "flags": "0x0012",
                            "id": 9,
                            "name": "Power_On_Hours",
                            "raw_value": 37712,
                            "threshold": 0,
                            "value": 95,
                            "when_failed": "-",
                            "worst": 95
                          },
                          {
                            "flags": "0x0013",
                            "id": 10,
                            "name": "Spin_Retry_Count",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 12,
                            "name": "Power_Cycle_Count",
                            "raw_value": 22,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0023",
                            "id": 22,
                            "name": "Helium_Level",
                            "raw_value": 100,
                            "threshold": 25,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0033",
                            "id": 184,
                            "name": "End-to-End_Error",
                            "raw_value": 0,
                            "threshold": 97,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 188,
                            "name": "Command_Timeout",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 192,
                            "name": "Power-Off_Retract_Count",
                            "raw_value": 1675,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0012",
                            "id": 193,
                            "name": "Load_Cycle_Count",
                            "raw_value": 1675,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0002",
                            "id": 194,
                            "name": "Temperature_Celsius",
                            "raw_value": 37,
                            "threshold": 0,
                            "value": 57,
                            "when_failed": "-",
                            "worst": 57
                          },
                          {
                            "flags": "0x0032",
                            "id": 196,
                            "name": "Reallocated_Event_Count",
                            "raw_value": 2,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0022",
                            "id": 197,
                            "name": "Current_Pending_Sector",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0008",
                            "id": 198,
                            "name": "Offline_Uncorrectable",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000a",
                            "id": 199,
                            "name": "UDMA_CRC_Error_Count",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0012",
                            "id": 241,
                            "name": "Total_LBAs_Written",
                            "raw_value": 168119298199,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0012",
                            "id": 242,
                            "name": "Total_LBAs_Read",
                            "raw_value": 293710019630,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          }
                        ],
                        "current_pending_sectors": 0,
                        "offline_uncorrectable": 0,
                        "overall_health": "PASSED",
                        "power_cycle_count": 22,
                        "power_on_hours": 37712,
                        "reallocated_events": 2,
                        "reallocated_sectors": 2,
                        "smart_enabled": false,
                        "smart_supported": true,
                        "temperature": 37
                      },
                      "status": "online",
                      "temperature": 37,
                      "used": 0,
                      "used_percent": 0
                    },
                    {
                      "available": 11685330780160,
                      "device": "/dev/sdd",
                      "disk_type": "HDD",
                      "filesystem": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "WUH721816ALE6L4",
                      "mount_point": "/mnt/disk1",
                      "name": "md1p1",
                      "power_state": "active",
                      "serial_number": "2CH181EP",
                      "size": 15998763610112,
                      "smart_data": {
                        "attributes": [
                          {
                            "flags": "0x000b",
                            "id": 1,
                            "name": "Raw_Read_Error_Rate",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0005",
                            "id": 2,
                            "name": "Throughput_Performance",
                            "raw_value": 96,
                            "threshold": 54,
                            "value": 136,
                            "when_failed": "-",
                            "worst": 136
                          },
                          {
                            "flags": "0x0007",
                            "id": 3,
                            "name": "Spin_Up_Time",
                            "raw_value": 315,
                            "threshold": 1,
                            "value": 84,
                            "when_failed": "-",
                            "worst": 84
                          },
                          {
                            "flags": "0x0012",
                            "id": 4,
                            "name": "Start_Stop_Count",
                            "raw_value": 196,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0033",
                            "id": 5,
                            "name": "Reallocated_Sector_Ct",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000b",
                            "id": 7,
                            "name": "Seek_Error_Rate",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0005",
                            "id": 8,
                            "name": "Seek_Time_Performance",
                            "raw_value": 15,
                            "threshold": 20,
                            "value": 140,
                            "when_failed": "-",
                            "worst": 140
                          },
                          {
                            "flags": "0x0012",
                            "id": 9,
                            "name": "Power_On_Hours",
                            "raw_value": 27657,
                            "threshold": 0,
                            "value": 97,
                            "when_failed": "-",
                            "worst": 97
                          },
                          {
                            "flags": "0x0013",
                            "id": 10,
                            "name": "Spin_Retry_Count",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 12,
                            "name": "Power_Cycle_Count",
                            "raw_value": 33,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0023",
                            "id": 22,
                            "name": "Helium_Level",
                            "raw_value": 100,
                            "threshold": 25,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0033",
                            "id": 184,
                            "name": "End-to-End_Error",
                            "raw_value": 0,
                            "threshold": 97,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 188,
                            "name": "Command_Timeout",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 192,
                            "name": "Power-Off_Retract_Count",
                            "raw_value": 1320,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0012",
                            "id": 193,
                            "name": "Load_Cycle_Count",
                            "raw_value": 1320,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0002",
                            "id": 194,
                            "name": "Temperature_Celsius",
                            "raw_value": 35,
                            "threshold": 0,
                            "value": 59,
                            "when_failed": "-",
                            "worst": 59
                          },
                          {
                            "flags": "0x0032",
                            "id": 196,
                            "name": "Reallocated_Event_Count",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0022",
                            "id": 197,
                            "name": "Current_Pending_Sector",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0008",
                            "id": 198,
                            "name": "Offline_Uncorrectable",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000a",
                            "id": 199,
                            "name": "UDMA_CRC_Error_Count",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0012",
                            "id": 241,
                            "name": "Total_LBAs_Written",
                            "raw_value": 137986013522,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0012",
                            "id": 242,
                            "name": "Total_LBAs_Read",
                            "raw_value": 235890546206,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          }
                        ],
                        "current_pending_sectors": 0,
                        "offline_uncorrectable": 0,
                        "overall_health": "PASSED",
                        "power_cycle_count": 33,
                        "power_on_hours": 27657,
                        "reallocated_events": 0,
                        "reallocated_sectors": 0,
                        "smart_enabled": false,
                        "smart_supported": true,
                        "temperature": 35
                      },
                      "status": "online",
                      "temperature": 35,
                      "used": 4313432829952,
                      "used_percent": 26.961038584417235
                    },
                    {
                      "available": 9807210442752,
                      "device": "/dev/sdf",
                      "disk_type": "HDD",
                      "filesystem": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "WDC WD100EFAX-68LHPN0",
                      "mount_point": "/mnt/disk2",
                      "name": "md2p1",
                      "power_state": "active",
                      "serial_number": "JEKV15MZ",
                      "size": 9998694297600,
                      "smart_data": {
                        "attributes": [
                          {
                            "flags": "0x000b",
                            "id": 1,
                            "name": "Raw_Read_Error_Rate",
                            "raw_value": 0,
                            "threshold": 16,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0004",
                            "id": 2,
                            "name": "Throughput_Performance",
                            "raw_value": 108,
                            "threshold": 54,
                            "value": 130,
                            "when_failed": "-",
                            "worst": 130
                          },
                          {
                            "flags": "0x0007",
                            "id": 3,
                            "name": "Spin_Up_Time",
                            "raw_value": 442,
                            "threshold": 24,
                            "value": 148,
                            "when_failed": "-",
                            "worst": 148
                          },
                          {
                            "flags": "0x0012",
                            "id": 4,
                            "name": "Start_Stop_Count",
                            "raw_value": 2089,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0033",
                            "id": 5,
                            "name": "Reallocated_Sector_Ct",
                            "raw_value": 0,
                            "threshold": 5,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000a",
                            "id": 7,
                            "name": "Seek_Error_Rate",
                            "raw_value": 0,
                            "threshold": 67,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0004",
                            "id": 8,
                            "name": "Seek_Time_Performance",
                            "raw_value": 18,
                            "threshold": 20,
                            "value": 128,
                            "when_failed": "-",
                            "worst": 128
                          },
                          {
                            "flags": "0x0012",
                            "id": 9,
                            "name": "Power_On_Hours",
                            "raw_value": 44116,
                            "threshold": 0,
                            "value": 94,
                            "when_failed": "-",
                            "worst": 94
                          },
                          {
                            "flags": "0x0012",
                            "id": 10,
                            "name": "Spin_Retry_Count",
                            "raw_value": 0,
                            "threshold": 60,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 12,
                            "name": "Power_Cycle_Count",
                            "raw_value": 376,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0023",
                            "id": 22,
                            "name": "Helium_Level",
                            "raw_value": 100,
                            "threshold": 25,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 192,
                            "name": "Power-Off_Retract_Count",
                            "raw_value": 19796,
                            "threshold": 0,
                            "value": 84,
                            "when_failed": "-",
                            "worst": 84
                          },
                          {
                            "flags": "0x0012",
                            "id": 193,
                            "name": "Load_Cycle_Count",
                            "raw_value": 19796,
                            "threshold": 0,
                            "value": 84,
                            "when_failed": "-",
                            "worst": 84
                          },
                          {
                            "flags": "0x0002",
                            "id": 194,
                            "name": "Temperature_Celsius",
                            "raw_value": 35,
                            "threshold": 0,
                            "value": 185,
                            "when_failed": "-",
                            "worst": 185
                          },
                          {
                            "flags": "0x0032",
                            "id": 196,
                            "name": "Reallocated_Event_Count",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0022",
                            "id": 197,
                            "name": "Current_Pending_Sector",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0008",
                            "id": 198,
                            "name": "Offline_Uncorrectable",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000a",
                            "id": 199,
                            "name": "UDMA_CRC_Error_Count",
                            "raw_value": 10,
                            "threshold": 0,
                            "value": 200,
                            "when_failed": "-",
                            "worst": 200
                          }
                        ],
                        "current_pending_sectors": 0,
                        "offline_uncorrectable": 0,
                        "overall_health": "PASSED",
                        "power_cycle_count": 376,
                        "power_on_hours": 44116,
                        "reallocated_events": 0,
                        "reallocated_sectors": 0,
                        "smart_enabled": false,
                        "smart_supported": true,
                        "temperature": 35
                      },
                      "status": "online",
                      "temperature": 35,
                      "used": 191483854848,
                      "used_percent": 1.915088602058392
                    },
                    {
                      "available": 4305351061504,
                      "device": "/dev/sde",
                      "disk_type": "HDD",
                      "filesystem": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "ST8000VN004-2M2101",
                      "mount_point": "/mnt/disk3",
                      "name": "md3p1",
                      "power_state": "active",
                      "serial_number": "WKD08FP6",
                      "size": 7999426170880,
                      "smart_data": {
                        "attributes": [
                          {
                            "flags": "0x000f",
                            "id": 1,
                            "name": "Raw_Read_Error_Rate",
                            "raw_value": 18468944,
                            "threshold": 44,
                            "value": 73,
                            "when_failed": "-",
                            "worst": 64
                          },
                          {
                            "flags": "0x0003",
                            "id": 3,
                            "name": "Spin_Up_Time",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 84,
                            "when_failed": "-",
                            "worst": 79
                          },
                          {
                            "flags": "0x0032",
                            "id": 4,
                            "name": "Start_Stop_Count",
                            "raw_value": 3379,
                            "threshold": 20,
                            "value": 97,
                            "when_failed": "-",
                            "worst": 97
                          },
                          {
                            "flags": "0x0033",
                            "id": 5,
                            "name": "Reallocated_Sector_Ct",
                            "raw_value": 0,
                            "threshold": 10,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000f",
                            "id": 7,
                            "name": "Seek_Error_Rate",
                            "raw_value": 469410195,
                            "threshold": 45,
                            "value": 87,
                            "when_failed": "-",
                            "worst": 60
                          },
                          {
                            "flags": "0x0032",
                            "id": 9,
                            "name": "Power_On_Hours",
                            "raw_value": 46110,
                            "threshold": 0,
                            "value": 48,
                            "when_failed": "-",
                            "worst": 48
                          },
                          {
                            "flags": "0x0013",
                            "id": 10,
                            "name": "Spin_Retry_Count",
                            "raw_value": 0,
                            "threshold": 97,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 12,
                            "name": "Power_Cycle_Count",
                            "raw_value": 451,
                            "threshold": 20,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000b",
                            "id": 18,
                            "name": "Head_Health",
                            "raw_value": 0,
                            "threshold": 50,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 187,
                            "name": "Reported_Uncorrect",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 188,
                            "name": "Command_Timeout",
                            "raw_value": 52,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 99
                          },
                          {
                            "flags": "0x0022",
                            "id": 190,
                            "name": "Airflow_Temperature_Cel",
                            "raw_value": 38,
                            "threshold": 40,
                            "value": 62,
                            "when_failed": "-",
                            "worst": 43
                          },
                          {
                            "flags": "0x0032",
                            "id": 192,
                            "name": "Power-Off_Retract_Count",
                            "raw_value": 82,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 193,
                            "name": "Load_Cycle_Count",
                            "raw_value": 60703,
                            "threshold": 0,
                            "value": 70,
                            "when_failed": "-",
                            "worst": 70
                          },
                          {
                            "flags": "0x0022",
                            "id": 194,
                            "name": "Temperature_Celsius",
                            "raw_value": 38,
                            "threshold": 0,
                            "value": 38,
                            "when_failed": "-",
                            "worst": 57
                          },
                          {
                            "flags": "0x001a",
                            "id": 195,
                            "name": "Hardware_ECC_Recovered",
                            "raw_value": 18468944,
                            "threshold": 0,
                            "value": 73,
                            "when_failed": "-",
                            "worst": 64
                          },
                          {
                            "flags": "0x0012",
                            "id": 197,
                            "name": "Current_Pending_Sector",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0010",
                            "id": 198,
                            "name": "Offline_Uncorrectable",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x003e",
                            "id": 199,
                            "name": "UDMA_CRC_Error_Count",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 200,
                            "when_failed": "-",
                            "worst": 200
                          },
                          {
                            "flags": "0x0000",
                            "id": 240,
                            "name": "Head_Flying_Hours",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 253
                          },
                          {
                            "flags": "0x0000",
                            "id": 241,
                            "name": "Total_LBAs_Written",
                            "raw_value": 201439537336,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 253
                          },
                          {
                            "flags": "0x0000",
                            "id": 242,
                            "name": "Total_LBAs_Read",
                            "raw_value": 1091856124558,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 253
                          }
                        ],
                        "current_pending_sectors": 0,
                        "offline_uncorrectable": 0,
                        "overall_health": "PASSED",
                        "power_cycle_count": 451,
                        "power_on_hours": 46110,
                        "reallocated_events": 0,
                        "reallocated_sectors": 0,
                        "smart_enabled": false,
                        "smart_supported": true,
                        "temperature": 38
                      },
                      "status": "online",
                      "temperature": 38,
                      "used": 3694075109376,
                      "used_percent": 46.179251242087815
                    },
                    {
                      "available": 7147890888704,
                      "device": "/dev/sdg",
                      "disk_type": "HDD",
                      "filesystem": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "ST8000VN004-2M2101",
                      "mount_point": "/mnt/disk4",
                      "name": "md4p1",
                      "power_state": "active",
                      "serial_number": "WKD07FR0",
                      "size": 7999426170880,
                      "smart_data": {
                        "attributes": [
                          {
                            "flags": "0x000f",
                            "id": 1,
                            "name": "Raw_Read_Error_Rate",
                            "raw_value": 156638384,
                            "threshold": 44,
                            "value": 82,
                            "when_failed": "-",
                            "worst": 64
                          },
                          {
                            "flags": "0x0003",
                            "id": 3,
                            "name": "Spin_Up_Time",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 83,
                            "when_failed": "-",
                            "worst": 78
                          },
                          {
                            "flags": "0x0032",
                            "id": 4,
                            "name": "Start_Stop_Count",
                            "raw_value": 2436,
                            "threshold": 20,
                            "value": 98,
                            "when_failed": "-",
                            "worst": 98
                          },
                          {
                            "flags": "0x0033",
                            "id": 5,
                            "name": "Reallocated_Sector_Ct",
                            "raw_value": 0,
                            "threshold": 10,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000f",
                            "id": 7,
                            "name": "Seek_Error_Rate",
                            "raw_value": 13241979597,
                            "threshold": 45,
                            "value": 81,
                            "when_failed": "-",
                            "worst": 60
                          },
                          {
                            "flags": "0x0032",
                            "id": 9,
                            "name": "Power_On_Hours",
                            "raw_value": 44621,
                            "threshold": 0,
                            "value": 50,
                            "when_failed": "-",
                            "worst": 50
                          },
                          {
                            "flags": "0x0013",
                            "id": 10,
                            "name": "Spin_Retry_Count",
                            "raw_value": 0,
                            "threshold": 97,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 12,
                            "name": "Power_Cycle_Count",
                            "raw_value": 411,
                            "threshold": 20,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000b",
                            "id": 18,
                            "name": "Head_Health",
                            "raw_value": 0,
                            "threshold": 50,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 187,
                            "name": "Reported_Uncorrect",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 188,
                            "name": "Command_Timeout",
                            "raw_value": 18,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 80
                          },
                          {
                            "flags": "0x0022",
                            "id": 190,
                            "name": "Airflow_Temperature_Cel",
                            "raw_value": 39,
                            "threshold": 40,
                            "value": 61,
                            "when_failed": "-",
                            "worst": 47
                          },
                          {
                            "flags": "0x0032",
                            "id": 192,
                            "name": "Power-Off_Retract_Count",
                            "raw_value": 76,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 193,
                            "name": "Load_Cycle_Count",
                            "raw_value": 52334,
                            "threshold": 0,
                            "value": 74,
                            "when_failed": "-",
                            "worst": 74
                          },
                          {
                            "flags": "0x0022",
                            "id": 194,
                            "name": "Temperature_Celsius",
                            "raw_value": 39,
                            "threshold": 0,
                            "value": 39,
                            "when_failed": "-",
                            "worst": 53
                          },
                          {
                            "flags": "0x001a",
                            "id": 195,
                            "name": "Hardware_ECC_Recovered",
                            "raw_value": 156638384,
                            "threshold": 0,
                            "value": 82,
                            "when_failed": "-",
                            "worst": 64
                          },
                          {
                            "flags": "0x0012",
                            "id": 197,
                            "name": "Current_Pending_Sector",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0010",
                            "id": 198,
                            "name": "Offline_Uncorrectable",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x003e",
                            "id": 199,
                            "name": "UDMA_CRC_Error_Count",
                            "raw_value": 123,
                            "threshold": 0,
                            "value": 200,
                            "when_failed": "-",
                            "worst": 177
                          },
                          {
                            "flags": "0x0000",
                            "id": 240,
                            "name": "Head_Flying_Hours",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 253
                          },
                          {
                            "flags": "0x0000",
                            "id": 241,
                            "name": "Total_LBAs_Written",
                            "raw_value": 101107718497,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 253
                          },
                          {
                            "flags": "0x0000",
                            "id": 242,
                            "name": "Total_LBAs_Read",
                            "raw_value": 876523712825,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 253
                          }
                        ],
                        "current_pending_sectors": 0,
                        "offline_uncorrectable": 0,
                        "overall_health": "PASSED",
                        "power_cycle_count": 411,
                        "power_on_hours": 44621,
                        "reallocated_events": 0,
                        "reallocated_sectors": 0,
                        "smart_enabled": false,
                        "smart_supported": true,
                        "temperature": 39
                      },
                      "status": "online",
                      "temperature": 39,
                      "used": 851535282176,
                      "used_percent": 10.64495457531455
                    },
                    {
                      "available": 0,
                      "device": "/dev/disk/by-id/",
                      "disk_type": "",
                      "filesystem": "",
                      "health": "unknown",
                      "interface": "",
                      "mount_point": "",
                      "name": "disk29",
                      "power_state": "",
                      "size": 0,
                      "status": "disabled",
                      "used": 0,
                      "used_percent": 0
                    }
                  ],
                  "free_size": 32945783173120,
                  "free_size_formatted": "30.0 GB",
                  "num_devices": 6,
                  "num_disks": 10,
                  "num_parity": 1,
                  "spin_down_delay": 0,
                  "state": "started",
                  "total_size": 57997210857472,
                  "total_size_formatted": "52.7 GB",
                  "used_percent": 15.605107456966591,
                  "used_size": 9050527076352,
                  "used_size_formatted": "8.2 GB"
                },
                "schema": {
                  "properties": {
                    "disks": {
                      "items": {
                        "properties": {
                          "available": {
                            "type": "integer"
                          },
                          "device": {
                            "type": "string"
                          },
                          "disk_type": {
                            "type": "string"
                          },
                          "filesystem": {
                            "type": "string"
                          },
                          "health": {
                            "type": "string"
                          },
                          "interface": {
                            "type": "string"
                          },
                          "model": {
                            "type": "string"
                          },
                          "mount_point": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "power_state": {
                            "type": "string"
                          },
                          "serial_number": {
                            "type": "string"
                          },
                          "size": {
                            "type": "integer"
                          },
                          "smart_data": {
                            "properties": {
                              "attributes": {
                                "items": {
                                  "properties": {
                                    "flags": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "raw_value": {
                                      "type": "integer"
                                    },
                                    "threshold": {
                                      "type": "integer"
                                    },
                                    "value": {
                                      "type": "integer"
                                    },
                                    "when_failed": {
                                      "type": "string"
                                    },
                                    "worst": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "flags",
                                    "id",
                                    "name",
                                    "raw_value",
                                    "threshold",
                                    "value",
                                    "when_failed",
                                    "worst"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "current_pending_sectors": {
                                "type": "integer"
                              },
                              "offline_uncorrectable": {
                                "type": "integer"
                              },
                              "overall_health": {
                                "type": "string"
                              },
                              "power_cycle_count": {
                                "type": "integer"
                              },
                              "power_on_hours": {
                                "type": "integer"
                              },
                              "reallocated_events": {
                                "type": "integer"
                              },
                              "reallocated_sectors": {
                                "type": "integer"
                              },
                              "smart_enabled": {
                                "type": "boolean"
                              },
                              "smart_supported": {
                                "type": "boolean"
                              },
                              "temperature": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "attributes",
                              "current_pending_sectors",
                              "offline_uncorrectable",
                              "overall_health",
                              "power_cycle_count",
                              "power_on_hours",
                              "reallocated_events",
                              "reallocated_sectors",
                              "smart_enabled",
                              "smart_supported",
                              "temperature"
                            ],
                            "type": "object"
                          },
                          "status": {
                            "type": "string"
                          },
                          "temperature": {
                            "type": "integer"
                          },
                          "used": {
                            "type": "integer"
                          },
                          "used_percent": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "available",
                          "device",
                          "disk_type",
                          "filesystem",
                          "health",
                          "interface",
                          "model",
                          "mount_point",
                          "name",
                          "power_state",
                          "serial_number",
                          "size",
                          "smart_data",
                          "status",
                          "temperature",
                          "used",
                          "used_percent"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "free_size": {
                      "type": "integer"
                    },
                    "free_size_formatted": {
                      "type": "string"
                    },
                    "num_devices": {
                      "type": "integer"
                    },
                    "num_disks": {
                      "type": "integer"
                    },
                    "num_parity": {
                      "type": "integer"
                    },
                    "spin_down_delay": {
                      "type": "integer"
                    },
                    "state": {
                      "type": "string"
                    },
                    "total_size": {
                      "type": "integer"
                    },
                    "total_size_formatted": {
                      "type": "string"
                    },
                    "used_percent": {
                      "type": "number"
                    },
                    "used_size": {
                      "type": "integer"
                    },
                    "used_size_formatted": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "disks",
                    "free_size",
                    "free_size_formatted",
                    "num_devices",
                    "num_disks",
                    "num_parity",
                    "spin_down_delay",
                    "state",
                    "total_size",
                    "total_size_formatted",
                    "used_percent",
                    "used_size",
                    "used_size_formatted"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/storage/array/start": {
      "get": {
        "description": "Auto-generated schema for /api/v1/storage/array/start",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/storage/array/stop": {
      "get": {
        "description": "Auto-generated schema for /api/v1/storage/array/stop",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/storage/boot": {
      "get": {
        "description": "Auto-generated schema for /api/v1/storage/boot",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "available": 28892708864,
                  "device": "/dev/sdb1",
                  "disk_type": "",
                  "filesystem": "vfat",
                  "health": "",
                  "interface": "",
                  "mount_point": "/boot",
                  "name": "boot",
                  "power_state": "",
                  "size": 30749130752,
                  "status": "online",
                  "used": 1856421888,
                  "used_percent": 6.037315015414716
                },
                "schema": {
                  "properties": {
                    "available": {
                      "type": "integer"
                    },
                    "device": {
                      "type": "string"
                    },
                    "disk_type": {
                      "type": "string"
                    },
                    "filesystem": {
                      "type": "string"
                    },
                    "health": {
                      "type": "string"
                    },
                    "interface": {
                      "type": "string"
                    },
                    "mount_point": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "power_state": {
                      "type": "string"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "used": {
                      "type": "integer"
                    },
                    "used_percent": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "available",
                    "device",
                    "disk_type",
                    "filesystem",
                    "health",
                    "interface",
                    "mount_point",
                    "name",
                    "power_state",
                    "size",
                    "status",
                    "used",
                    "used_percent"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/storage/cache": {
      "get": {
        "description": "Auto-generated schema for /api/v1/storage/cache",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "disks": [
                      {
                        "available": 0,
                        "device": "/dev/nvme0n1p1",
                        "disk_type": "",
                        "filesystem": "",
                        "health": "healthy",
                        "interface": "",
                        "mount_point": "/mnt/cache",
                        "name": "cache",
                        "power_state": "",
                        "size": 0,
                        "status": "online",
                        "used": 0,
                        "used_percent": 0
                      }
                    ],
                    "filesystem": "btrfs",
                    "free_size": 438035140608,
                    "free_size_formatted": "408.0 MB",
                    "name": "cache",
                    "status": "online",
                    "total_size": 512109142016,
                    "total_size_formatted": "476.9 MB",
                    "used_percent": 13.716537673097301,
                    "used_size": 70243643392,
                    "used_size_formatted": "65.4 MB"
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "disks": {
                        "items": {
                          "properties": {
                            "available": {
                              "type": "integer"
                            },
                            "device": {
                              "type": "string"
                            },
                            "disk_type": {
                              "type": "string"
                            },
                            "filesystem": {
                              "type": "string"
                            },
                            "health": {
                              "type": "string"
                            },
                            "interface": {
                              "type": "string"
                            },
                            "mount_point": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "power_state": {
                              "type": "string"
                            },
                            "size": {
                              "type": "integer"
                            },
                            "status": {
                              "type": "string"
                            },
                            "used": {
                              "type": "integer"
                            },
                            "used_percent": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "available",
                            "device",
                            "disk_type",
                            "filesystem",
                            "health",
                            "interface",
                            "mount_point",
                            "name",
                            "power_state",
                            "size",
                            "status",
                            "used",
                            "used_percent"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "filesystem": {
                        "type": "string"
                      },
                      "free_size": {
                        "type": "integer"
                      },
                      "free_size_formatted": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "total_size": {
                        "type": "integer"
                      },
                      "total_size_formatted": {
                        "type": "string"
                      },
                      "used_percent": {
                        "type": "number"
                      },
                      "used_size": {
                        "type": "integer"
                      },
                      "used_size_formatted": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "disks",
                      "filesystem",
                      "free_size",
                      "free_size_formatted",
                      "name",
                      "status",
                      "total_size",
                      "total_size_formatted",
                      "used_percent",
                      "used_size",
                      "used_size_formatted"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/storage/disks": {
      "get": {
        "description": "Auto-generated schema for /api/v1/storage/disks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "array_disks": [
                    {
                      "available": 0,
                      "available_formatted": "0 B",
                      "device": "/dev/sdc",
                      "disk_type": "HDD",
                      "filesystem": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "WUH721816ALE6L4",
                      "mount_point": "",
                      "name": "disk0",
                      "power_state": "active",
                      "role": "array",
                      "serial_number": "2CGV0URP",
                      "size": 16000900608000,
                      "size_formatted": "14.6 GB",
                      "smart_data": {
                        "attributes": [
                          {
                            "flags": "0x000b",
                            "id": 1,
                            "name": "Raw_Read_Error_Rate",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0005",
                            "id": 2,
                            "name": "Throughput_Performance",
                            "raw_value": 96,
                            "threshold": 54,
                            "value": 136,
                            "when_failed": "-",
                            "worst": 136
                          },
                          {
                            "flags": "0x0007",
                            "id": 3,
                            "name": "Spin_Up_Time",
                            "raw_value": 329,
                            "threshold": 1,
                            "value": 83,
                            "when_failed": "-",
                            "worst": 83
                          },
                          {
                            "flags": "0x0012",
                            "id": 4,
                            "name": "Start_Stop_Count",
                            "raw_value": 130,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0033",
                            "id": 5,
                            "name": "Reallocated_Sector_Ct",
                            "raw_value": 2,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000b",
                            "id": 7,
                            "name": "Seek_Error_Rate",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0005",
                            "id": 8,
                            "name": "Seek_Time_Performance",
                            "raw_value": 15,
                            "threshold": 20,
                            "value": 140,
                            "when_failed": "-",
                            "worst": 140
                          },
                          {
                            "flags": "0x0012",
                            "id": 9,
                            "name": "Power_On_Hours",
                            "raw_value": 37712,
                            "threshold": 0,
                            "value": 95,
                            "when_failed": "-",
                            "worst": 95
                          },
                          {
                            "flags": "0x0013",
                            "id": 10,
                            "name": "Spin_Retry_Count",
                            "raw_value": 0,
                            "threshold": 1,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 12,
                            "name": "Power_Cycle_Count",
                            "raw_value": 22,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0023",
                            "id": 22,
                            "name": "Helium_Level",
                            "raw_value": 100,
                            "threshold": 25,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0033",
                            "id": 184,
                            "name": "End-to-End_Error",
                            "raw_value": 0,
                            "threshold": 97,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 188,
                            "name": "Command_Timeout",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0032",
                            "id": 192,
                            "name": "Power-Off_Retract_Count",
                            "raw_value": 1675,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0012",
                            "id": 193,
                            "name": "Load_Cycle_Count",
                            "raw_value": 1675,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0002",
                            "id": 194,
                            "name": "Temperature_Celsius",
                            "raw_value": 37,
                            "threshold": 0,
                            "value": 57,
                            "when_failed": "-",
                            "worst": 57
                          },
                          {
                            "flags": "0x0032",
                            "id": 196,
                            "name": "Reallocated_Event_Count",
                            "raw_value": 2,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0022",
                            "id": 197,
                            "name": "Current_Pending_Sector",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0008",
                            "id": 198,
                            "name": "Offline_Uncorrectable",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x000a",
                            "id": 199,
                            "name": "UDMA_CRC_Error_Count",
                            "raw_value": 0,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0012",
                            "id": 241,
                            "name": "Total_LBAs_Written",
                            "raw_value": 168119298199,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          },
                          {
                            "flags": "0x0012",
                            "id": 242,
                            "name": "Total_LBAs_Read",
                            "raw_value": 293710019630,
                            "threshold": 0,
                            "value": 100,
                            "when_failed": "-",
                            "worst": 100
                          }
                        ],
                        "current_pending_sectors": 0,
                        "offline_uncorrectable": 0,
                        "overall_health": "PASSED",
                        "power_cycle_count": 22,
                        "power_on_hours": 37712,
                        "reallocated_events": 2,
                        "reallocated_sectors": 2,
                        "smart_enabled": false,
                        "smart_supported": true,
                        "temperature": 37
                      },
                      "status": "online",
                      "temperature": 37,
                      "used": 0,
                      "used_formatted": "0 B",
                      "used_percent": 0
                    },
                    {
                      "available": 0,
                      "available_formatted": "0 B",
                      "device": "/dev/disk/by-id/",
                      "disk_type": "",
                      "filesystem": "",
                      "health": "unknown",
                      "interface": "",
                      "mount_point": "",
                      "name": "disk29",
                      "power_state": "",
                      "role": "array",
                      "size": 0,
                      "size_formatted": "0 B",
                      "status": "disabled",
                      "used": 0,
                      "used_formatted": "0 B",
                      "used_percent": 0
                    }
                  ],
                  "boot_disk": {
                    "available": 28892708864,
                    "available_formatted": "26.9 MB",
                    "device": "/dev/sdb1",
                    "disk_type": "",
                    "filesystem": "vfat",
                    "health": "",
                    "interface": "",
                    "mount_point": "/boot",
                    "name": "boot",
                    "power_state": "",
                    "role": "boot",
                    "size": 30749130752,
                    "size_formatted": "28.6 MB",
                    "status": "online",
                    "used": 1856421888,
                    "used_formatted": "1.7 MB",
                    "used_percent": 6.037315015414716
                  },
                  "cache_disks": [
                    {
                      "available": 0,
                      "available_formatted": "0 B",
                      "device": "/dev/nvme0n1p1",
                      "disk_type": "",
                      "filesystem": "",
                      "health": "healthy",
                      "interface": "",
                      "mount_point": "/mnt/cache",
                      "name": "cache",
                      "power_state": "",
                      "role": "cache",
                      "size": 0,
                      "size_formatted": "0 B",
                      "status": "online",
                      "used": 0,
                      "used_formatted": "0 B",
                      "used_percent": 0
                    }
                  ],
                  "parity_disks": [],
                  "summary": {
                    "active_disks": 1,
                    "failing_disks": 0,
                    "healthy_disks": 2,
                    "standby_disks": 0,
                    "total_disks": 4,
                    "warning_disks": 2
                  }
                },
                "schema": {
                  "properties": {
                    "array_disks": {
                      "items": {
                        "properties": {
                          "available": {
                            "type": "integer"
                          },
                          "available_formatted": {
                            "type": "string"
                          },
                          "device": {
                            "type": "string"
                          },
                          "disk_type": {
                            "type": "string"
                          },
                          "filesystem": {
                            "type": "string"
                          },
                          "health": {
                            "type": "string"
                          },
                          "interface": {
                            "type": "string"
                          },
                          "model": {
                            "type": "string"
                          },
                          "mount_point": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "power_state": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "serial_number": {
                            "type": "string"
                          },
                          "size": {
                            "type": "integer"
                          },
                          "size_formatted": {
                            "type": "string"
                          },
                          "smart_data": {
                            "properties": {
                              "attributes": {
                                "items": {
                                  "properties": {
                                    "flags": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "raw_value": {
                                      "type": "integer"
                                    },
                                    "threshold": {
                                      "type": "integer"
                                    },
                                    "value": {
                                      "type": "integer"
                                    },
                                    "when_failed": {
                                      "type": "string"
                                    },
                                    "worst": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "flags",
                                    "id",
                                    "name",
                                    "raw_value",
                                    "threshold",
                                    "value",
                                    "when_failed",
                                    "worst"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "current_pending_sectors": {
                                "type": "integer"
                              },
                              "offline_uncorrectable": {
                                "type": "integer"
                              },
                              "overall_health": {
                                "type": "string"
                              },
                              "power_cycle_count": {
                                "type": "integer"
                              },
                              "power_on_hours": {
                                "type": "integer"
                              },
                              "reallocated_events": {
                                "type": "integer"
                              },
                              "reallocated_sectors": {
                                "type": "integer"
                              },
                              "smart_enabled": {
                                "type": "boolean"
                              },
                              "smart_supported": {
                                "type": "boolean"
                              },
                              "temperature": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "attributes",
                              "current_pending_sectors",
                              "offline_uncorrectable",
                              "overall_health",
                              "power_cycle_count",
                              "power_on_hours",
                              "reallocated_events",
                              "reallocated_sectors",
                              "smart_enabled",
                              "smart_supported",
                              "temperature"
                            ],
                            "type": "object"
                          },
                          "status": {
                            "type": "string"
                          },
                          "temperature": {
                            "type": "integer"
                          },
                          "used": {
                            "type": "integer"
                          },
                          "used_formatted": {
                            "type": "string"
                          },
                          "used_percent": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "available",
                          "available_formatted",
                          "device",
                          "disk_type",
                          "filesystem",
                          "health",
                          "interface",
                          "model",
                          "mount_point",
                          "name",
                          "power_state",
                          "role",
                          "serial_number",
                          "size",
                          "size_formatted",
                          "smart_data",
                          "status",
                          "temperature",
                          "used",
                          "used_formatted",
                          "used_percent"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "boot_disk": {
                      "properties": {
                        "available": {
                          "type": "integer"
                        },
                        "available_formatted": {
                          "type": "string"
                        },
                        "device": {
                          "type": "string"
                        },
                        "disk_type": {
                          "type": "string"
                        },
                        "filesystem": {
                          "type": "string"
                        },
                        "health": {
                          "type": "string"
                        },
                        "interface": {
                          "type": "string"
                        },
                        "mount_point": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "power_state": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "size_formatted": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "used": {
                          "type": "integer"
                        },
                        "used_formatted": {
                          "type": "string"
                        },
                        "used_percent": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "available",
                        "available_formatted",
                        "device",
                        "disk_type",
                        "filesystem",
                        "health",
                        "interface",
                        "mount_point",
                        "name",
                        "power_state",
                        "role",
                        "size",
                        "size_formatted",
                        "status",
                        "used",
                        "used_formatted",
                        "used_percent"
                      ],
                      "type": "object"
                    },
                    "cache_disks": {
                      "items": {
                        "properties": {
                          "available": {
                            "type": "integer"
                          },
                          "available_formatted": {
                            "type": "string"
                          },
                          "device": {
                            "type": "string"
                          },
                          "disk_type": {
                            "type": "string"
                          },
                          "filesystem": {
                            "type": "string"
                          },
                          "health": {
                            "type": "string"
                          },
                          "interface": {
                            "type": "string"
                          },
                          "mount_point": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "power_state": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "size": {
                            "type": "integer"
                          },
                          "size_formatted": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "used": {
                            "type": "integer"
                          },
                          "used_formatted": {
                            "type": "string"
                          },
                          "used_percent": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "available",
                          "available_formatted",
                          "device",
                          "disk_type",
                          "filesystem",
                          "health",
                          "interface",
                          "mount_point",
                          "name",
                          "power_state",
                          "role",
                          "size",
                          "size_formatted",
                          "status",
                          "used",
                          "used_formatted",
                          "used_percent"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "parity_disks": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "summary": {
                      "properties": {
                        "active_disks": {
                          "type": "integer"
                        },
                        "failing_disks": {
                          "type": "integer"
                        },
                        "healthy_disks": {
                          "type": "integer"
                        },
                        "standby_disks": {
                          "type": "integer"
                        },
                        "total_disks": {
                          "type": "integer"
                        },
                        "warning_disks": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "active_disks",
                        "failing_disks",
                        "healthy_disks",
                        "standby_disks",
                        "total_disks",
                        "warning_disks"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "array_disks",
                    "boot_disk",
                    "cache_disks",
                    "parity_disks",
                    "summary"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/storage/general": {
      "get": {
        "description": "Auto-generated schema for /api/v1/storage/general",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "array_state": {
                    "num_devices": 6,
                    "num_disks": 10,
                    "num_parity": 1,
                    "state": "started"
                  },
                  "array_usage": {
                    "free": 32945783173120,
                    "total": 57997210857472,
                    "used": 9050527076352,
                    "used_percent": 15.605107456966591
                  },
                  "cpu": {
                    "cores": 6,
                    "frequency": 4300,
                    "model": "Intel(R) Core(TM) i7-8700K CPU @ 3.70GHz",
                    "temperature": 41,
                    "threads": 12,
                    "usage": 15.080213903743314
                  },
                  "disks": [
                    {
                      "available": 0,
                      "device": "/dev/sdc",
                      "disk_type": "HDD",
                      "file_system": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "WUH721816ALE6L4",
                      "mount_point": "",
                      "name": "disk0",
                      "power_state": "active",
                      "serial_number": "2CGV0URP",
                      "size": 16000900608000,
                      "status": "online",
                      "temperature": 37,
                      "used": 0,
                      "used_percent": 0
                    },
                    {
                      "available": 11685330780160,
                      "device": "/dev/sdd",
                      "disk_type": "HDD",
                      "file_system": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "WUH721816ALE6L4",
                      "mount_point": "/mnt/disk1",
                      "name": "md1p1",
                      "power_state": "active",
                      "serial_number": "2CH181EP",
                      "size": 15998763610112,
                      "status": "online",
                      "temperature": 35,
                      "used": 4313432829952,
                      "used_percent": 26.961038584417235
                    },
                    {
                      "available": 9807210442752,
                      "device": "/dev/sdf",
                      "disk_type": "HDD",
                      "file_system": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "WDC WD100EFAX-68LHPN0",
                      "mount_point": "/mnt/disk2",
                      "name": "md2p1",
                      "power_state": "active",
                      "serial_number": "JEKV15MZ",
                      "size": 9998694297600,
                      "status": "online",
                      "temperature": 35,
                      "used": 191483854848,
                      "used_percent": 1.915088602058392
                    },
                    {
                      "available": 4305351061504,
                      "device": "/dev/sde",
                      "disk_type": "HDD",
                      "file_system": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "ST8000VN004-2M2101",
                      "mount_point": "/mnt/disk3",
                      "name": "md3p1",
                      "power_state": "active",
                      "serial_number": "WKD08FP6",
                      "size": 7999426170880,
                      "status": "online",
                      "temperature": 38,
                      "used": 3694075109376,
                      "used_percent": 46.179251242087815
                    },
                    {
                      "available": 7147890888704,
                      "device": "/dev/sdg",
                      "disk_type": "HDD",
                      "file_system": "",
                      "health": "healthy",
                      "interface": "SATA",
                      "model": "ST8000VN004-2M2101",
                      "mount_point": "/mnt/disk4",
                      "name": "md4p1",
                      "power_state": "active",
                      "serial_number": "WKD07FR0",
                      "size": 7999426170880,
                      "status": "online",
                      "temperature": 39,
                      "used": 851535282176,
                      "used_percent": 10.64495457531455
                    },
                    {
                      "available": 0,
                      "device": "/dev/disk/by-id/",
                      "disk_type": "",
                      "file_system": "",
                      "health": "unknown",
                      "interface": "",
                      "model": "",
                      "mount_point": "",
                      "name": "disk29",
                      "power_state": "",
                      "size": 0,
                      "status": "disabled",
                      "used": 0,
                      "used_percent": 0
                    }
                  ],
                  "docker": {
                    "containers": [
                      {
                        "created": "2025-06-22T07:00:46.810652056Z",
                        "environment": [
                          "AUTO_UPDATE=true",
                          "RUN_OPTS=",
                          "PUID=99",
                          "UMASK=022",
                          "TZ=Australia/Brisbane",
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=jackett",
                          "PGID=100",
                          "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                          "HOME=/root",
                          "TERM=xterm",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_VERBOSITY=1",
                          "S6_STAGE2_HOOK=/docker-mods",
                          "VIRTUAL_ENV=/lsiopy",
                          "LSIO_FIRST_PARTY=true",
                          "XDG_DATA_HOME=/config",
                          "XDG_CONFIG_HOME=/config",
                          "TMPDIR=/run/jackett-temp"
                        ],
                        "id": "efc18f02f3a3e67dd4466d8baf7b3bc463df124cfda7b5995ba0b0d8adddcc68",
                        "image": "lscr.io/linuxserver/jackett",
                        "labels": {
                          "build_version": "Linuxserver.io version:- v0.22.2037-ls67 Build-date:- 2025-06-22T06:52:41+00:00",
                          "maintainer": "thelamer",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jackett-logo.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:9117]",
                          "org.opencontainers.image.authors": "linuxserver.io",
                          "org.opencontainers.image.created": "2025-06-22T06:52:41+00:00",
                          "org.opencontainers.image.description": "[Jackett](https://github.com/Jackett/Jackett) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping \u0026 translation logic - removing the burden from other apps.",
                          "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-jackett",
                          "org.opencontainers.image.licenses": "GPL-3.0-only",
                          "org.opencontainers.image.ref.name": "e3c734600bf7f081ce357dbda29668fb3f975922",
                          "org.opencontainers.image.revision": "e3c734600bf7f081ce357dbda29668fb3f975922",
                          "org.opencontainers.image.source": "https://github.com/linuxserver/docker-jackett",
                          "org.opencontainers.image.title": "Jackett",
                          "org.opencontainers.image.url": "https://github.com/linuxserver/docker-jackett/packages",
                          "org.opencontainers.image.vendor": "linuxserver.io",
                          "org.opencontainers.image.version": "v0.22.2037-ls67"
                        },
                        "mounts": null,
                        "name": "jackett",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.12",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "9117",
                            "host_ip": "",
                            "host_port": "9117",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-22T07:00:47.012965961Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-06-21T07:01:12.706408503Z",
                        "environment": [
                          "HOST_CONTAINERNAME=sonarr",
                          "PUID=99",
                          "PGID=100",
                          "TZ=Australia/Brisbane",
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                          "HOME=/root",
                          "TERM=xterm",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_VERBOSITY=1",
                          "S6_STAGE2_HOOK=/docker-mods",
                          "VIRTUAL_ENV=/lsiopy",
                          "LSIO_FIRST_PARTY=true",
                          "XDG_CONFIG_HOME=/config/xdg",
                          "SONARR_CHANNEL=v4-stable",
                          "SONARR_BRANCH=main",
                          "COMPlus_EnableDiagnostics=0",
                          "TMPDIR=/run/sonarr-temp"
                        ],
                        "id": "74914585b15777b511dde000d42d25cd549f70d673c18cbb6bac38aa1ee4ca16",
                        "image": "linuxserver/sonarr:latest",
                        "labels": {
                          "build_version": "Linuxserver.io version:- 4.0.15.2941-ls285 Build-date:- 2025-06-20T17:50:01+00:00",
                          "maintainer": "thespad",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-icon.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:8989]/",
                          "org.opencontainers.image.authors": "linuxserver.io",
                          "org.opencontainers.image.created": "2025-06-20T17:50:01+00:00",
                          "org.opencontainers.image.description": "[Sonarr](https://sonarr.tv/) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.  ",
                          "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-sonarr",
                          "org.opencontainers.image.licenses": "GPL-3.0-only",
                          "org.opencontainers.image.ref.name": "9fd50e19407a4f6a62ccddc284cda66f06dd8535",
                          "org.opencontainers.image.revision": "9fd50e19407a4f6a62ccddc284cda66f06dd8535",
                          "org.opencontainers.image.source": "https://github.com/linuxserver/docker-sonarr",
                          "org.opencontainers.image.title": "Sonarr",
                          "org.opencontainers.image.url": "https://github.com/linuxserver/docker-sonarr/packages",
                          "org.opencontainers.image.vendor": "linuxserver.io",
                          "org.opencontainers.image.version": "4.0.15.2941-ls285"
                        },
                        "mounts": null,
                        "name": "sonarr",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.6",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "8989",
                            "host_ip": "",
                            "host_port": "8989",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:02:40.501204724Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-06-21T07:01:03.737025228Z",
                        "environment": [
                          "PUID=99",
                          "TZ=Australia/Brisbane",
                          "HOST_OS=Unraid",
                          "PASSWORD=Lighthouse29",
                          "HASHED_PASSWORD=",
                          "SUDO_PASSWORD=Lighthouse29",
                          "SUDO_PASSWORD_HASH=",
                          "PROXY_DOMAIN=code.local.domalab.net",
                          "UMASK=022",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=code-server",
                          "DEFAULT_WORKSPACE=/config/workspace",
                          "PGID=100",
                          "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "HOME=/config",
                          "LANGUAGE=en_US.UTF-8",
                          "LANG=en_US.UTF-8",
                          "TERM=xterm",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_VERBOSITY=1",
                          "S6_STAGE2_HOOK=/docker-mods",
                          "VIRTUAL_ENV=/lsiopy",
                          "LSIO_FIRST_PARTY=true"
                        ],
                        "id": "811b426137d8bd137bed72c22584985c8248f3c8a1e5e4494549917e557f79f9",
                        "image": "lscr.io/linuxserver/code-server",
                        "labels": {
                          "build_version": "Linuxserver.io version:- 4.101.1-ls282 Build-date:- 2025-06-21T03:36:47+00:00",
                          "maintainer": "aptalca",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-logo.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:8443]",
                          "org.opencontainers.image.authors": "linuxserver.io",
                          "org.opencontainers.image.created": "2025-06-21T03:36:47+00:00",
                          "org.opencontainers.image.description": "[Code-server](https://coder.com) is VS Code running on a remote server, accessible through the browser.  - Code on your Chromebook, tablet, and laptop with a consistent dev environment.  - If you have a Windows or Mac workstation, more easily develop for Linux.  - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more.  - Preserve battery life when you're on the go.  - All intensive computation runs on your server.  - You're no longer running excess instances of Chrome.  ",
                          "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-code-server",
                          "org.opencontainers.image.licenses": "GPL-3.0-only",
                          "org.opencontainers.image.ref.name": "e204bcaef6049950a532da3cadf14a4b77df10d6",
                          "org.opencontainers.image.revision": "e204bcaef6049950a532da3cadf14a4b77df10d6",
                          "org.opencontainers.image.source": "https://github.com/linuxserver/docker-code-server",
                          "org.opencontainers.image.title": "Code-server",
                          "org.opencontainers.image.url": "https://github.com/linuxserver/docker-code-server/packages",
                          "org.opencontainers.image.vendor": "linuxserver.io",
                          "org.opencontainers.image.version": "4.101.1-ls282"
                        },
                        "mounts": null,
                        "name": "code-server",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.4",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "8443",
                            "host_ip": "",
                            "host_port": "8443",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:01:47.840556584Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-06-17T02:28:32.174085562Z",
                        "environment": [
                          "TZ=Australia/Brisbane",
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=homeassistant",
                          "TCP_PORT_8123=8123",
                          "PUID=99",
                          "PGID=100",
                          "UMASK=022",
                          "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "LANG=C.UTF-8",
                          "S6_BEHAVIOUR_IF_STAGE2_FAILS=2",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_CMD_WAIT_FOR_SERVICES=1",
                          "S6_SERVICES_READYTIME=50",
                          "UV_EXTRA_INDEX_URL=https://wheels.home-assistant.io/musllinux-index/",
                          "S6_SERVICES_GRACETIME=240000",
                          "UV_SYSTEM_PYTHON=true",
                          "UV_NO_CACHE=true"
                        ],
                        "id": "415c0131535341f210c7701bea85aa84663045563ca4bf7c4d165660f03a5dad",
                        "image": "homeassistant/home-assistant",
                        "labels": {
                          "io.hass.arch": "amd64",
                          "io.hass.base.arch": "amd64",
                          "io.hass.base.image": "ghcr.io/home-assistant/amd64-base:3.21",
                          "io.hass.base.name": "python",
                          "io.hass.base.version": "2025.05.0",
                          "io.hass.type": "core",
                          "io.hass.version": "2025.6.1",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/homeassistant-logo.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:8123]",
                          "org.opencontainers.image.authors": "The Home Assistant Authors",
                          "org.opencontainers.image.created": "2025-06-13 20:22:00+00:00",
                          "org.opencontainers.image.description": "Open-source home automation platform running on Python 3",
                          "org.opencontainers.image.documentation": "https://www.home-assistant.io/docs/",
                          "org.opencontainers.image.licenses": "Apache-2.0",
                          "org.opencontainers.image.source": "https://github.com/home-assistant/core",
                          "org.opencontainers.image.title": "Home Assistant",
                          "org.opencontainers.image.url": "https://www.home-assistant.io/",
                          "org.opencontainers.image.version": "2025.6.1"
                        },
                        "mounts": null,
                        "name": "homeassistant",
                        "networks": [
                          {
                            "gateway": "",
                            "ip_address": "",
                            "name": "host"
                          }
                        ],
                        "ports": [],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:01:02.817904143Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-06-15T18:02:09.928228953Z",
                        "environment": [
                          "TZ=Australia/Brisbane",
                          "WEBUI_PORT=8181",
                          "PGID=100",
                          "TORRENTING_PORT=6881",
                          "PUID=99",
                          "UMASK=022",
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=qbittorrent",
                          "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                          "HOME=/config",
                          "TERM=xterm",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_VERBOSITY=1",
                          "S6_STAGE2_HOOK=/docker-mods",
                          "VIRTUAL_ENV=/lsiopy",
                          "LSIO_FIRST_PARTY=true",
                          "XDG_CONFIG_HOME=/config",
                          "XDG_DATA_HOME=/config"
                        ],
                        "id": "3530194c75f9d9675c13a4d748fb2effbbd5b32cadecb1b2b4a25f473a7104ff",
                        "image": "lscr.io/linuxserver/qbittorrent",
                        "labels": {
                          "build_version": "Linuxserver.io version:- 5.1.0-r0-ls398 Build-date:- 2025-06-15T06:59:57+00:00",
                          "maintainer": "thespad",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qbittorrent-logo.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:8181]",
                          "org.opencontainers.image.authors": "linuxserver.io",
                          "org.opencontainers.image.created": "2025-06-15T06:59:57+00:00",
                          "org.opencontainers.image.description": "The [Qbittorrent](https://www.qbittorrent.org/) project aims to provide an open-source software alternative to ÂµTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
                          "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-qbittorrent",
                          "org.opencontainers.image.licenses": "GPL-3.0-only",
                          "org.opencontainers.image.ref.name": "d78e0089757031c68aa698d9105b005d5145ca2b",
                          "org.opencontainers.image.revision": "d78e0089757031c68aa698d9105b005d5145ca2b",
                          "org.opencontainers.image.source": "https://github.com/linuxserver/docker-qbittorrent",
                          "org.opencontainers.image.title": "Qbittorrent",
                          "org.opencontainers.image.url": "https://github.com/linuxserver/docker-qbittorrent/packages",
                          "org.opencontainers.image.vendor": "linuxserver.io",
                          "org.opencontainers.image.version": "5.1.0-r0-ls398"
                        },
                        "mounts": null,
                        "name": "qbittorrent",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.9",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "6881",
                            "host_ip": "",
                            "host_port": "6881",
                            "protocol": "udp"
                          },
                          {
                            "container_port": "8181",
                            "host_ip": "",
                            "host_port": "8181",
                            "protocol": "tcp"
                          },
                          {
                            "container_port": "6881",
                            "host_ip": "",
                            "host_port": "6881",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:01:09.312911114Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-06-15T06:04:35.907989207Z",
                        "environment": [
                          "PGID=100",
                          "TZ=Australia/Brisbane",
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=radarr",
                          "PUID=99",
                          "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                          "HOME=/root",
                          "TERM=xterm",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_VERBOSITY=1",
                          "S6_STAGE2_HOOK=/docker-mods",
                          "VIRTUAL_ENV=/lsiopy",
                          "LSIO_FIRST_PARTY=true",
                          "XDG_CONFIG_HOME=/config/xdg",
                          "COMPlus_EnableDiagnostics=0",
                          "TMPDIR=/run/radarr-temp"
                        ],
                        "id": "5fd12be6372534bb8b5f24bf6ea2bdd260a82746d22160748558bdca586009de",
                        "image": "linuxserver/radarr:latest",
                        "labels": {
                          "build_version": "Linuxserver.io version:- 5.26.2.10099-ls276 Build-date:- 2025-06-15T04:52:48+00:00",
                          "maintainer": "Roxedus,thespad",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:7878]",
                          "org.opencontainers.image.authors": "linuxserver.io",
                          "org.opencontainers.image.created": "2025-06-15T04:52:48+00:00",
                          "org.opencontainers.image.description": "[Radarr](https://github.com/Radarr/Radarr) - A fork of Sonarr to work with movies Ã  la Couchpotato.  ",
                          "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-radarr",
                          "org.opencontainers.image.licenses": "GPL-3.0-only",
                          "org.opencontainers.image.ref.name": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                          "org.opencontainers.image.revision": "a587df8e84bbd3a06dff6442ae174f6cc334a2e5",
                          "org.opencontainers.image.source": "https://github.com/linuxserver/docker-radarr",
                          "org.opencontainers.image.title": "Radarr",
                          "org.opencontainers.image.url": "https://github.com/linuxserver/docker-radarr/packages",
                          "org.opencontainers.image.vendor": "linuxserver.io",
                          "org.opencontainers.image.version": "5.26.2.10099-ls276"
                        },
                        "mounts": null,
                        "name": "radarr",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.3",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "7878",
                            "host_ip": "",
                            "host_port": "7878",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:03:16.233500404Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-06-14T07:01:04.272938866Z",
                        "environment": [
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=flaresolverr",
                          "LOG_LEVEL=info",
                          "TZ=Australia/Brisbane",
                          "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "LANG=C.UTF-8",
                          "GPG_KEY=A035C8C19219BA821ECEA86B64E628F8D684696D",
                          "PYTHON_VERSION=3.11.13",
                          "PYTHON_SHA256=8fb5f9fbc7609fa822cb31549884575db7fd9657cbffb89510b5d7975963a83a"
                        ],
                        "id": "be5b0e9caaaa0fd775716df1a8edbeac1cca569a4bf184430efb3a978f9775ab",
                        "image": "flaresolverr/flaresolverr",
                        "labels": {
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/FlareSolverr/FlareSolverr/master/resources/flaresolverr_logo.png",
                          "net.unraid.docker.managed": "dockerman",
                          "org.opencontainers.image.created": "2025-06-14T02:52:44.964Z",
                          "org.opencontainers.image.description": "Proxy server to bypass Cloudflare protection",
                          "org.opencontainers.image.licenses": "MIT",
                          "org.opencontainers.image.revision": "6627de4fa6bc4759b1476085101fc91e80bbe356",
                          "org.opencontainers.image.source": "https://github.com/FlareSolverr/FlareSolverr",
                          "org.opencontainers.image.title": "FlareSolverr",
                          "org.opencontainers.image.url": "https://github.com/FlareSolverr/FlareSolverr",
                          "org.opencontainers.image.version": "v3.3.25"
                        },
                        "mounts": null,
                        "name": "flaresolverr",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.2",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "8191",
                            "host_ip": "",
                            "host_port": "8191",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:01:23.960679671Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-06-12T07:00:54.330585147Z",
                        "environment": [
                          "UMASK=022",
                          "TZ=Australia/Brisbane",
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=sabnzbd",
                          "PUID=99",
                          "PGID=100",
                          "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                          "HOME=/config",
                          "TERM=xterm",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_VERBOSITY=1",
                          "S6_STAGE2_HOOK=/docker-mods",
                          "VIRTUAL_ENV=/lsiopy",
                          "LSIO_FIRST_PARTY=true",
                          "PYTHONIOENCODING=utf-8"
                        ],
                        "id": "a72a966c16feff0f6dc2229ba21c0e8697151aba873d4d33f5df8db7cd1f8e79",
                        "image": "lscr.io/linuxserver/sabnzbd",
                        "labels": {
                          "build_version": "Linuxserver.io version:- 4.5.1-ls221 Build-date:- 2025-06-12T02:25:46+00:00",
                          "maintainer": "thespad",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-logo.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:8080]",
                          "org.opencontainers.image.authors": "linuxserver.io",
                          "org.opencontainers.image.created": "2025-06-12T02:25:46+00:00",
                          "org.opencontainers.image.description": "[Sabnzbd](http://sabnzbd.org/) makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
                          "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-sabnzbd",
                          "org.opencontainers.image.licenses": "GPL-3.0-only",
                          "org.opencontainers.image.ref.name": "98de5e6f718b7f1cb583ce0a427439b733ce815d",
                          "org.opencontainers.image.revision": "98de5e6f718b7f1cb583ce0a427439b733ce815d",
                          "org.opencontainers.image.source": "https://github.com/linuxserver/docker-sabnzbd",
                          "org.opencontainers.image.title": "Sabnzbd",
                          "org.opencontainers.image.url": "https://github.com/linuxserver/docker-sabnzbd/packages",
                          "org.opencontainers.image.vendor": "linuxserver.io",
                          "org.opencontainers.image.version": "4.5.1-ls221"
                        },
                        "mounts": null,
                        "name": "sabnzbd",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.8",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "8080",
                            "host_ip": "",
                            "host_port": "8080",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:02:46.519023546Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-06-12T01:41:31.114253366Z",
                        "environment": [
                          "PGID=100",
                          "UMASK=022",
                          "TZ=Australia/Brisbane",
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=overseerr",
                          "PUID=99",
                          "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "PS1=$(whoami)@$(hostname):$(pwd)\\$ ",
                          "HOME=/config",
                          "TERM=xterm",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_VERBOSITY=1",
                          "S6_STAGE2_HOOK=/docker-mods",
                          "VIRTUAL_ENV=/lsiopy",
                          "LSIO_FIRST_PARTY=true",
                          "TMPDIR=/run/overseerr-temp"
                        ],
                        "id": "49bf0cebac074e90c48739042f1e285ec966b53cc406329f54e2a54e37dd89a3",
                        "image": "lscr.io/linuxserver/overseerr",
                        "labels": {
                          "build_version": "Linuxserver.io version:- v1.34.0-ls142 Build-date:- 2025-06-11T18:42:57+00:00",
                          "maintainer": "nemchik",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr-logo.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:5055]",
                          "org.opencontainers.image.authors": "linuxserver.io",
                          "org.opencontainers.image.created": "2025-06-11T18:42:57+00:00",
                          "org.opencontainers.image.description": "[Overseerr](https://overseerr.dev/) is a request management and media discovery tool built to work with your existing Plex ecosystem.  ",
                          "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-overseerr",
                          "org.opencontainers.image.licenses": "GPL-3.0-only",
                          "org.opencontainers.image.ref.name": "8594a9686a6cbe2a16a747c7f3694518603556af",
                          "org.opencontainers.image.revision": "8594a9686a6cbe2a16a747c7f3694518603556af",
                          "org.opencontainers.image.source": "https://github.com/linuxserver/docker-overseerr",
                          "org.opencontainers.image.title": "Overseerr",
                          "org.opencontainers.image.url": "https://github.com/linuxserver/docker-overseerr/packages",
                          "org.opencontainers.image.vendor": "linuxserver.io",
                          "org.opencontainers.image.version": "v1.34.0-ls142"
                        },
                        "mounts": null,
                        "name": "overseerr",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.10",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "5055",
                            "host_ip": "",
                            "host_port": "5055",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:01:15.513044417Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-06-10T18:10:03.88087747Z",
                        "environment": [
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=plex",
                          "UMASK=022",
                          "TZ=Australia/Brisbane",
                          "PLEX_CLAIM=claim-QhrM_aAYE2UfvMFjk4xK",
                          "PUID=99",
                          "PGID=100",
                          "VERSION=docker",
                          "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "HOME=/root",
                          "LANGUAGE=en_US.UTF-8",
                          "LANG=en_US.UTF-8",
                          "TERM=xterm",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_VERBOSITY=1",
                          "S6_STAGE2_HOOK=/docker-mods",
                          "VIRTUAL_ENV=/lsiopy",
                          "LSIO_FIRST_PARTY=true",
                          "NVIDIA_DRIVER_CAPABILITIES=compute,video,utility,graphics",
                          "DEBIAN_FRONTEND=noninteractive",
                          "PLEX_DOWNLOAD=https://downloads.plex.tv/plex-media-server-new",
                          "PLEX_ARCH=amd64",
                          "PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=/config/Library/Application Support",
                          "PLEX_MEDIA_SERVER_HOME=/usr/lib/plexmediaserver",
                          "PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=6",
                          "PLEX_MEDIA_SERVER_USER=abc",
                          "PLEX_MEDIA_SERVER_INFO_VENDOR=Docker",
                          "PLEX_MEDIA_SERVER_INFO_DEVICE=Docker Container (LinuxServer.io)",
                          "TMPDIR=/run/plex-temp"
                        ],
                        "id": "1440e9c825e6acf2d743db0e0e72f5425d74b2d6892a17964600b5f734f77036",
                        "image": "lscr.io/linuxserver/plex",
                        "labels": {
                          "build_version": "Linuxserver.io version:- 1.41.8.9834-071366d65-ls269 Build-date:- 2025-06-10T17:38:48+00:00",
                          "maintainer": "thelamer",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-logo.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:32400]/web/index.html",
                          "org.opencontainers.image.authors": "linuxserver.io",
                          "org.opencontainers.image.created": "2025-06-10T17:38:48+00:00",
                          "org.opencontainers.image.description": "[Plex](https://plex.tv) organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. Straightforward design and bulk actions mean getting things done faster.",
                          "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-plex",
                          "org.opencontainers.image.licenses": "GPL-3.0-only",
                          "org.opencontainers.image.ref.name": "c27d92587e0512513ad826a4ebde8a2cd1a5dd15",
                          "org.opencontainers.image.revision": "c27d92587e0512513ad826a4ebde8a2cd1a5dd15",
                          "org.opencontainers.image.source": "https://github.com/linuxserver/docker-plex",
                          "org.opencontainers.image.title": "Plex",
                          "org.opencontainers.image.url": "https://github.com/linuxserver/docker-plex/packages",
                          "org.opencontainers.image.vendor": "linuxserver.io",
                          "org.opencontainers.image.version": "1.41.8.9834-071366d65-ls269"
                        },
                        "mounts": null,
                        "name": "plex",
                        "networks": [
                          {
                            "gateway": "",
                            "ip_address": "",
                            "name": "host"
                          }
                        ],
                        "ports": [],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:04:57.943428743Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-03-22T02:05:14.856993071Z",
                        "environment": [
                          "PUID=99",
                          "HOST_CONTAINERNAME=privoxyvpn",
                          "VPN_OUTPUT_PORTS=",
                          "DEBUG=false",
                          "PGID=100",
                          "SOCKS_PASS=socks",
                          "VPN_INPUT_PORTS=",
                          "ENABLE_PRIVOXY=yes",
                          "ENABLE_STARTUP_SCRIPTS=no",
                          "USERSPACE_WIREGUARD=no",
                          "NAME_SERVERS=84.200.69.80,37.235.1.174,1.1.1.1,37.235.1.177,84.200.70.40,1.0.0.1",
                          "TZ=Australia/Brisbane",
                          "VPN_PASS=Fi3xU#37ELY!",
                          "LAN_NETWORK=192.168.20.0/24",
                          "UMASK=000",
                          "HOST_OS=Unraid",
                          "VPN_ENABLED=yes",
                          "VPN_USER=nhquherygugg",
                          "VPN_CLIENT=openvpn",
                          "ENABLE_SOCKS=yes",
                          "HOST_HOSTNAME=Cube",
                          "VPN_PROV=custom",
                          "STRICT_PORT_FORWARD=no",
                          "SOCKS_USER=admin",
                          "VPN_OPTIONS=",
                          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "HOME=/home/nobody",
                          "TERM=xterm",
                          "LANG=en_GB.UTF-8"
                        ],
                        "id": "c92f0e1dc766b5e6399627a8c45019f7ed8df904a9822ba82c5f3a2c523c0d5a",
                        "image": "binhex/arch-privoxyvpn",
                        "labels": {
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/privoxy-icon.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://config.privoxy.org/",
                          "org.opencontainers.image.authors": "binhex",
                          "org.opencontainers.image.source": "https://github.com/binhex/arch-privoxyvpn"
                        },
                        "mounts": null,
                        "name": "privoxyvpn",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.11",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "58946",
                            "host_ip": "",
                            "host_port": "58946",
                            "protocol": "tcp"
                          },
                          {
                            "container_port": "58946",
                            "host_ip": "",
                            "host_port": "58946",
                            "protocol": "udp"
                          },
                          {
                            "container_port": "8118",
                            "host_ip": "",
                            "host_port": "8118",
                            "protocol": "tcp"
                          },
                          {
                            "container_port": "9118",
                            "host_ip": "",
                            "host_port": "9118",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:05:02.542205257Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-02-16T02:02:34.021202468Z",
                        "environment": [
                          "CRON_SCHEDULE=@daily",
                          "RECYCLARR_CREATE_CONFIG=true",
                          "TZ=Australia/Brisbane",
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "HOST_CONTAINERNAME=recyclarr",
                          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/app/recyclarr",
                          "APP_UID=1654",
                          "ASPNETCORE_HTTP_PORTS=8080",
                          "DOTNET_RUNNING_IN_CONTAINER=true",
                          "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true",
                          "DOTNET_VERSION=9.0.2",
                          "RECYCLARR_APP_DATA=/config",
                          "COMPlus_EnableDiagnostics=0"
                        ],
                        "id": "9ec3d62bf3fd9c10324e1dcce58a1f423219059898884058d4d7a0c3598b4815",
                        "image": "ghcr.io/recyclarr/recyclarr:latest",
                        "labels": {
                          "name": "recyclarr",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/recyclarr/recyclarr/master/ci/notify/trash-icon.png",
                          "net.unraid.docker.managed": "dockerman",
                          "org.opencontainers.image.created": "2025-02-15T20:53:04.489Z",
                          "org.opencontainers.image.description": "Automatically sync TRaSH Guides to your Sonarr and Radarr instances",
                          "org.opencontainers.image.licenses": "MIT",
                          "org.opencontainers.image.revision": "5bcd1122e967c828fceceea9810ebd1a33ce344a",
                          "org.opencontainers.image.source": "https://github.com/recyclarr/recyclarr",
                          "org.opencontainers.image.title": "recyclarr",
                          "org.opencontainers.image.url": "https://github.com/recyclarr/recyclarr",
                          "org.opencontainers.image.version": "7.4.1"
                        },
                        "mounts": null,
                        "name": "recyclarr",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.5",
                            "name": "media"
                          }
                        ],
                        "ports": [],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:02:02.61241899Z",
                        "state": "running",
                        "status": "running"
                      },
                      {
                        "created": "2025-01-21T22:39:07.186615886Z",
                        "environment": [
                          "HOST_CONTAINERNAME=unmanic",
                          "PUID=99",
                          "PGID=100",
                          "NVIDIA_VISIBLE_DEVICES=false",
                          "NVIDIA_PATCH_VERSION=",
                          "TZ=Australia/Brisbane",
                          "HOST_OS=Unraid",
                          "HOST_HOSTNAME=Cube",
                          "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                          "HOME=/root",
                          "LANGUAGE=en_US.UTF-8",
                          "LANG=en_US.UTF-8",
                          "TERM=xterm",
                          "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0",
                          "S6_VERBOSITY=1",
                          "S6_STAGE2_HOOK=/docker-mods",
                          "VIRTUAL_ENV=/lsiopy",
                          "LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri",
                          "NVIDIA_DRIVER_CAPABILITIES=compute,video,utility"
                        ],
                        "id": "d8c4e4937b77c180ed44b9ca6b5cb831f53f3ce5c94a79740de939609f6be1b5",
                        "image": "josh5/unmanic:latest",
                        "labels": {
                          "build_version": "Linuxserver.io version:- bd519529-ls122 Build-date:- 2024-12-10T08:05:59+00:00",
                          "maintainer": "Josh.5 \u003cjsunnex@gmail.com\u003e",
                          "net.unraid.docker.icon": "https://raw.githubusercontent.com/Unmanic/unmanic/master/icon.png",
                          "net.unraid.docker.managed": "dockerman",
                          "net.unraid.docker.webui": "http://[IP]:[PORT:8888]/",
                          "org.opencontainers.image.authors": "linuxserver.io",
                          "org.opencontainers.image.created": "2024-12-10T08:05:59+00:00",
                          "org.opencontainers.image.description": "baseimage-ubuntu image by linuxserver.io",
                          "org.opencontainers.image.documentation": "https://docs.linuxserver.io/images/docker-baseimage-ubuntu",
                          "org.opencontainers.image.licenses": "GPL-3.0-only",
                          "org.opencontainers.image.ref.name": "f2d5c41d22b24511811c81e86d893cdbe405db0d",
                          "org.opencontainers.image.revision": "f2d5c41d22b24511811c81e86d893cdbe405db0d",
                          "org.opencontainers.image.source": "https://github.com/linuxserver/docker-baseimage-ubuntu",
                          "org.opencontainers.image.title": "Baseimage-ubuntu",
                          "org.opencontainers.image.url": "https://github.com/linuxserver/docker-baseimage-ubuntu/packages",
                          "org.opencontainers.image.vendor": "linuxserver.io",
                          "org.opencontainers.image.version": "bd519529-ls122"
                        },
                        "mounts": null,
                        "name": "unmanic",
                        "networks": [
                          {
                            "gateway": "172.18.0.1",
                            "ip_address": "172.18.0.7",
                            "name": "media"
                          }
                        ],
                        "ports": [
                          {
                            "container_port": "8888",
                            "host_ip": "",
                            "host_port": "8888",
                            "protocol": "tcp"
                          }
                        ],
                        "restart_policy": "no",
                        "started_at": "2025-06-21T18:02:29.816465162Z",
                        "state": "running",
                        "status": "running"
                      }
                    ],
                    "total": 13
                  },
                  "filesystem": {
                    "boot_usage": {
                      "free": 28892708864,
                      "total": 30749130752,
                      "used": 1856421888
                    },
                    "docker_vdisk": {
                      "free": 148729327616,
                      "total": 161061273600,
                      "used": 12331945984
                    },
                    "log_filesystem": {
                      "free": 121999360,
                      "total": 134217728,
                      "used": 12218368
                    }
                  },
                  "intel_gpu": {
                    "memory_total": 0,
                    "memory_used": 0,
                    "name": "Intel Corporation CoffeeLake-S GT2 [UHD Graphics 630] (prog-if 00 [VGA controller])",
                    "temperature": 0,
                    "usage": 0
                  },
                  "memory": {
                    "available": 26212139008,
                    "buffers": 7155712,
                    "cached": 25126584320,
                    "free": 1007718400,
                    "percentage": 21.352035793809527,
                    "total": 33328439296,
                    "used": 7116300288
                  },
                  "network": {
                    "interfaces": [
                      {
                        "name": "tunl0",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 0,
                        "tx_errors": 0,
                        "tx_packets": 0
                      },
                      {
                        "name": "wlan0",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 0,
                        "tx_errors": 0,
                        "tx_packets": 0
                      },
                      {
                        "name": "eth0",
                        "rx_bytes": 36759470870,
                        "rx_errors": 0,
                        "rx_packets": 34835719,
                        "tx_bytes": 2730745223,
                        "tx_errors": 0,
                        "tx_packets": 9026289
                      },
                      {
                        "name": "eth1",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 0,
                        "tx_errors": 0,
                        "tx_packets": 0
                      },
                      {
                        "name": "br0",
                        "rx_bytes": 33811924687,
                        "rx_errors": 0,
                        "rx_packets": 13248719,
                        "tx_bytes": 2153868371,
                        "tx_errors": 0,
                        "tx_packets": 4917868
                      },
                      {
                        "name": "vhost1",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 0,
                        "tx_errors": 0,
                        "tx_packets": 0
                      },
                      {
                        "name": "docker0",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 0,
                        "tx_errors": 0,
                        "tx_packets": 0
                      },
                      {
                        "name": "br-3cc0fa14431c",
                        "rx_bytes": 716019747,
                        "rx_errors": 0,
                        "rx_packets": 1836641,
                        "tx_bytes": 28062884164,
                        "tx_errors": 0,
                        "tx_packets": 4669410
                      },
                      {
                        "name": "br-f063b8e6a1ab",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 0,
                        "tx_errors": 0,
                        "tx_packets": 0
                      },
                      {
                        "name": "shim-br0",
                        "rx_bytes": 33720702236,
                        "rx_errors": 0,
                        "rx_packets": 11887458,
                        "tx_bytes": 1766333023,
                        "tx_errors": 0,
                        "tx_packets": 1782714
                      },
                      {
                        "name": "virbr0",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 2000,
                        "tx_errors": 0,
                        "tx_packets": 28
                      },
                      {
                        "name": "vnet0",
                        "rx_bytes": 536916307,
                        "rx_errors": 0,
                        "rx_packets": 3420449,
                        "tx_bytes": 2041041269,
                        "tx_errors": 0,
                        "tx_packets": 7241320
                      },
                      {
                        "name": "vnet1",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 196,
                        "tx_errors": 0,
                        "tx_packets": 2
                      },
                      {
                        "name": "veth7940057",
                        "rx_bytes": 5601131,
                        "rx_errors": 0,
                        "rx_packets": 10899,
                        "tx_bytes": 5134622,
                        "tx_errors": 0,
                        "tx_packets": 44295
                      },
                      {
                        "name": "veth4e783c4",
                        "rx_bytes": 2930291,
                        "rx_errors": 0,
                        "rx_packets": 25634,
                        "tx_bytes": 10268842,
                        "tx_errors": 0,
                        "tx_packets": 51092
                      },
                      {
                        "name": "veth49632a1",
                        "rx_bytes": 25603,
                        "rx_errors": 0,
                        "rx_packets": 95,
                        "tx_bytes": 3362233,
                        "tx_errors": 0,
                        "tx_packets": 29857
                      },
                      {
                        "name": "veth88208dc",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 3309261,
                        "tx_errors": 0,
                        "tx_packets": 29758
                      },
                      {
                        "name": "veth2cd6a79",
                        "rx_bytes": 0,
                        "rx_errors": 0,
                        "rx_packets": 0,
                        "tx_bytes": 3303511,
                        "tx_errors": 0,
                        "tx_packets": 29740
                      },
                      {
                        "name": "veth2c99be2",
                        "rx_bytes": 92192,
                        "rx_errors": 0,
                        "rx_packets": 339,
                        "tx_bytes": 3477982,
                        "tx_errors": 0,
                        "tx_packets": 30020
                      },
                      {
                        "name": "veth35fcd22",
                        "rx_bytes": 3752391,
                        "rx_errors": 0,
                        "rx_packets": 34371,
                        "tx_bytes": 61887698,
                        "tx_errors": 0,
                        "tx_packets": 62656
                      },
                      {
                        "name": "vethcccf285",
                        "rx_bytes": 3518490,
                        "rx_errors": 0,
                        "rx_packets": 19690,
                        "tx_bytes": 3787605,
                        "tx_errors": 0,
                        "tx_packets": 43288
                      },
                      {
                        "name": "veth9144fc0",
                        "rx_bytes": 4266843,
                        "rx_errors": 0,
                        "rx_packets": 31799,
                        "tx_bytes": 37997769,
                        "tx_errors": 0,
                        "tx_packets": 60955
                      },
                      {
                        "name": "veth9acab88",
                        "rx_bytes": 707326,
                        "rx_errors": 0,
                        "rx_packets": 7593,
                        "tx_bytes": 3810700,
                        "tx_errors": 0,
                        "tx_packets": 35488
                      },
                      {
                        "name": "vethf5db0b6",
                        "rx_bytes": 6631238,
                        "rx_errors": 0,
                        "rx_packets": 779,
                        "tx_bytes": 727192,
                        "tx_errors": 0,
                        "tx_packets": 4012
                      }
                    ]
                  },
                  "temperature": {
                    "fans": {
                      "fan1": {
                        "input": 785,
                        "label": "CPU Fan"
                      },
                      "fan2": {
                        "input": 924,
                        "label": "System Fan 1"
                      },
                      "fan5": {
                        "input": 1462,
                        "label": "System Fan 4"
                      }
                    },
                    "sensor_chips": {
                      "coretemp-isa-0000": {
                        "name": "coretemp-isa-0000",
                        "temperatures": {
                          "temp1": {
                            "label": "Package id 0",
                            "temp_input": 39000,
                            "temp_max": 82000
                          },
                          "temp2": {
                            "label": "Core 0",
                            "temp_input": 39000,
                            "temp_max": 82000
                          },
                          "temp3": {
                            "label": "Core 1",
                            "temp_input": 37000,
                            "temp_max": 82000
                          },
                          "temp4": {
                            "label": "Core 2",
                            "temp_input": 36000,
                            "temp_max": 82000
                          },
                          "temp5": {
                            "label": "Core 3",
                            "temp_input": 37000,
                            "temp_max": 82000
                          },
                          "temp6": {
                            "label": "Core Temperature 6",
                            "temp_input": 36000,
                            "temp_max": 82000
                          },
                          "temp7": {
                            "label": "Core Temperature 7",
                            "temp_input": 37000,
                            "temp_max": 82000
                          }
                        }
                      },
                      "iwlwifi_1-virtual-0": {
                        "name": "iwlwifi_1-virtual-0"
                      },
                      "nct6793-isa-0290": {
                        "fans": {
                          "fan1": {
                            "input": 785,
                            "label": "CPU Fan"
                          },
                          "fan2": {
                            "input": 924,
                            "label": "System Fan 1"
                          },
                          "fan5": {
                            "input": 1462,
                            "label": "System Fan 4"
                          }
                        },
                        "name": "nct6793-isa-0290",
                        "temperatures": {
                          "temp1": {
                            "label": "SYSTIN",
                            "temp_input": 116000,
                            "temp_max": 35000
                          },
                          "temp15": {
                            "label": "Temperature 15",
                            "temp_input": 3892313987
                          },
                          "temp16": {
                            "label": "Temperature 16",
                            "temp_input": 3892313987
                          },
                          "temp17": {
                            "label": "Temperature 17",
                            "temp_input": 3892313987
                          },
                          "temp18": {
                            "label": "Temperature 18",
                            "temp_input": 3892313987
                          },
                          "temp19": {
                            "label": "Temperature 19",
                            "temp_input": 3892313987
                          },
                          "temp2": {
                            "label": "AUXTIN0",
                            "temp_input": 35000,
                            "temp_max": 35000
                          },
                          "temp20": {
                            "label": "Temperature 20",
                            "temp_input": 3892313987
                          },
                          "temp3": {
                            "label": "AUXTIN1",
                            "temp_input": 34000,
                            "temp_max": 35000
                          },
                          "temp4": {
                            "label": "AUXTIN2",
                            "temp_input": 108000
                          },
                          "temp5": {
                            "label": "Temperature 5",
                            "temp_input": 109000
                          },
                          "temp6": {
                            "label": "Temperature 6",
                            "temp_input": 108000
                          },
                          "temp7": {
                            "label": "Temperature 7",
                            "temp_crit": 100000,
                            "temp_input": 38000,
                            "temp_max": 35000
                          }
                        }
                      },
                      "nvme-pci-0100": {
                        "name": "nvme-pci-0100",
                        "temperatures": {
                          "temp1": {
                            "label": "Temperature 1",
                            "temp_crit": 109850,
                            "temp_input": 28850,
                            "temp_max": 99850,
                            "temp_min": -150
                          }
                        }
                      },
                      "pch_cannonlake-virtual-0": {
                        "name": "pch_cannonlake-virtual-0",
                        "temperatures": {
                          "temp1": {
                            "label": "Temperature 1",
                            "temp_input": 42000
                          }
                        }
                      }
                    },
                    "sensors": [
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - Temperature 20",
                        "unit": "Â°C",
                        "value": 3892313.987
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - AUXTIN1",
                        "unit": "Â°C",
                        "value": 34
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - Temperature 6",
                        "unit": "Â°C",
                        "value": 108
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - Temperature 16",
                        "unit": "Â°C",
                        "value": 3892313.987
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - Temperature 17",
                        "unit": "Â°C",
                        "value": 3892313.987
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - Temperature 18",
                        "unit": "Â°C",
                        "value": 3892313.987
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - SYSTIN",
                        "unit": "Â°C",
                        "value": 116
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - AUXTIN0",
                        "unit": "Â°C",
                        "value": 35
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - AUXTIN2",
                        "unit": "Â°C",
                        "value": 108
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - Temperature 5",
                        "unit": "Â°C",
                        "value": 109
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - Temperature 7",
                        "unit": "Â°C",
                        "value": 38
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - Temperature 15",
                        "unit": "Â°C",
                        "value": 3892313.987
                      },
                      {
                        "chip": "nct6793-isa-0290",
                        "name": "nct6793-isa-0290 - Temperature 19",
                        "unit": "Â°C",
                        "value": 3892313.987
                      },
                      {
                        "chip": "coretemp-isa-0000",
                        "name": "coretemp-isa-0000 - Core 3",
                        "unit": "Â°C",
                        "value": 37
                      },
                      {
                        "chip": "coretemp-isa-0000",
                        "name": "coretemp-isa-0000 - Core Temperature 6",
                        "unit": "Â°C",
                        "value": 36
                      },
                      {
                        "chip": "coretemp-isa-0000",
                        "name": "coretemp-isa-0000 - Core Temperature 7",
                        "unit": "Â°C",
                        "value": 37
                      },
                      {
                        "chip": "coretemp-isa-0000",
                        "name": "coretemp-isa-0000 - Package id 0",
                        "unit": "Â°C",
                        "value": 39
                      },
                      {
                        "chip": "coretemp-isa-0000",
                        "name": "coretemp-isa-0000 - Core 0",
                        "unit": "Â°C",
                        "value": 39
                      },
                      {
                        "chip": "coretemp-isa-0000",
                        "name": "coretemp-isa-0000 - Core 1",
                        "unit": "Â°C",
                        "value": 37
                      },
                      {
                        "chip": "coretemp-isa-0000",
                        "name": "coretemp-isa-0000 - Core 2",
                        "unit": "Â°C",
                        "value": 36
                      },
                      {
                        "chip": "pch_cannonlake-virtual-0",
                        "name": "pch_cannonlake-virtual-0 - Temperature 1",
                        "unit": "Â°C",
                        "value": 42
                      },
                      {
                        "chip": "nvme-pci-0100",
                        "name": "nvme-pci-0100 - Temperature 1",
                        "unit": "Â°C",
                        "value": 28.85
                      },
                      {
                        "chip": "system",
                        "name": "CPU",
                        "unit": "Â°C",
                        "value": 41
                      }
                    ]
                  },
                  "ups": {
                    "battery_charge": 0,
                    "runtime": 0,
                    "status": "unknown"
                  },
                  "vms": {
                    "total": 2,
                    "vms": [
                      {
                        "architecture": "x86_64",
                        "autostart": true,
                        "cpus": 2,
                        "disks": [
                          {
                            "bus": "virtio",
                            "device": "disk",
                            "source": "/mnt/user/domains/Bastion/vdisk1.bastion20250129qcow2",
                            "target": "hdc",
                            "type": "file"
                          }
                        ],
                        "graphics": [
                          {
                            "listen": "0.0.0.0",
                            "port": 5900,
                            "type": "vnc"
                          }
                        ],
                        "id": 1,
                        "memory_kb": 4194304,
                        "name": "Bastion",
                        "networks": [
                          {
                            "bridge": "br0",
                            "mac_address": "52:54:00:9a:c4:c8",
                            "model": "virtio-net",
                            "source": "br0",
                            "type": "bridge"
                          }
                        ],
                        "os_type": "hvm",
                        "pci_devices": [],
                        "persistent": true,
                        "state": "running",
                        "usb_devices": [],
                        "uuid": "31b06276-3763-79b4-e0e2-0cc10937defd"
                      },
                      {
                        "architecture": "x86_64",
                        "autostart": false,
                        "cpus": 1,
                        "disks": [
                          {
                            "bus": "virtio",
                            "device": "disk",
                            "source": "/mnt/user/domains/Test/vdisk1.img",
                            "target": "hdc",
                            "type": "file"
                          },
                          {
                            "bus": "sata",
                            "device": "cdrom",
                            "source": "/mnt/user/isos/alpine-virt-3.21.2-x86_64.iso",
                            "target": "hda",
                            "type": "file"
                          }
                        ],
                        "graphics": [
                          {
                            "listen": "0.0.0.0",
                            "port": 5901,
                            "type": "vnc"
                          }
                        ],
                        "id": 2,
                        "memory_kb": 1048576,
                        "name": "Test",
                        "networks": [
                          {
                            "bridge": "virbr0",
                            "mac_address": "52:54:00:38:3d:a1",
                            "model": "virtio-net",
                            "source": "virbr0",
                            "type": "bridge"
                          }
                        ],
                        "os_type": "hvm",
                        "pci_devices": [],
                        "persistent": true,
                        "state": "running",
                        "usb_devices": [],
                        "uuid": "f98682bf-ab28-6140-67f8-c01301f814ef"
                      }
                    ]
                  }
                },
                "schema": {
                  "properties": {
                    "array_state": {
                      "properties": {
                        "num_devices": {
                          "type": "integer"
                        },
                        "num_disks": {
                          "type": "integer"
                        },
                        "num_parity": {
                          "type": "integer"
                        },
                        "state": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "num_devices",
                        "num_disks",
                        "num_parity",
                        "state"
                      ],
                      "type": "object"
                    },
                    "array_usage": {
                      "properties": {
                        "free": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "used": {
                          "type": "integer"
                        },
                        "used_percent": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "free",
                        "total",
                        "used",
                        "used_percent"
                      ],
                      "type": "object"
                    },
                    "cpu": {
                      "properties": {
                        "cores": {
                          "type": "integer"
                        },
                        "frequency": {
                          "type": "integer"
                        },
                        "model": {
                          "format": "email",
                          "type": "string"
                        },
                        "temperature": {
                          "type": "integer"
                        },
                        "threads": {
                          "type": "integer"
                        },
                        "usage": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "cores",
                        "frequency",
                        "model",
                        "temperature",
                        "threads",
                        "usage"
                      ],
                      "type": "object"
                    },
                    "disks": {
                      "items": {
                        "properties": {
                          "available": {
                            "type": "integer"
                          },
                          "device": {
                            "type": "string"
                          },
                          "disk_type": {
                            "type": "string"
                          },
                          "file_system": {
                            "type": "string"
                          },
                          "health": {
                            "type": "string"
                          },
                          "interface": {
                            "type": "string"
                          },
                          "model": {
                            "type": "string"
                          },
                          "mount_point": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "power_state": {
                            "type": "string"
                          },
                          "serial_number": {
                            "type": "string"
                          },
                          "size": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string"
                          },
                          "temperature": {
                            "type": "integer"
                          },
                          "used": {
                            "type": "integer"
                          },
                          "used_percent": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "available",
                          "device",
                          "disk_type",
                          "file_system",
                          "health",
                          "interface",
                          "model",
                          "mount_point",
                          "name",
                          "power_state",
                          "serial_number",
                          "size",
                          "status",
                          "temperature",
                          "used",
                          "used_percent"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "docker": {
                      "properties": {
                        "containers": {
                          "items": {
                            "properties": {
                              "created": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "environment": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "id": {
                                "type": "string"
                              },
                              "image": {
                                "type": "string"
                              },
                              "labels": {
                                "properties": {
                                  "build_version": {
                                    "type": "string"
                                  },
                                  "maintainer": {
                                    "type": "string"
                                  },
                                  "net.unraid.docker.icon": {
                                    "type": "string"
                                  },
                                  "net.unraid.docker.managed": {
                                    "type": "string"
                                  },
                                  "net.unraid.docker.webui": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.authors": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.created": {
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.description": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.documentation": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.licenses": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.ref.name": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.revision": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.source": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.title": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.url": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.vendor": {
                                    "type": "string"
                                  },
                                  "org.opencontainers.image.version": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "build_version",
                                  "maintainer",
                                  "net.unraid.docker.icon",
                                  "net.unraid.docker.managed",
                                  "net.unraid.docker.webui",
                                  "org.opencontainers.image.authors",
                                  "org.opencontainers.image.created",
                                  "org.opencontainers.image.description",
                                  "org.opencontainers.image.documentation",
                                  "org.opencontainers.image.licenses",
                                  "org.opencontainers.image.ref.name",
                                  "org.opencontainers.image.revision",
                                  "org.opencontainers.image.source",
                                  "org.opencontainers.image.title",
                                  "org.opencontainers.image.url",
                                  "org.opencontainers.image.vendor",
                                  "org.opencontainers.image.version"
                                ],
                                "type": "object"
                              },
                              "mounts": {
                                "nullable": true,
                                "type": "null"
                              },
                              "name": {
                                "type": "string"
                              },
                              "networks": {
                                "items": {
                                  "properties": {
                                    "gateway": {
                                      "type": "string"
                                    },
                                    "ip_address": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "gateway",
                                    "ip_address",
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "ports": {
                                "items": {
                                  "properties": {
                                    "container_port": {
                                      "type": "string"
                                    },
                                    "host_ip": {
                                      "type": "string"
                                    },
                                    "host_port": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "container_port",
                                    "host_ip",
                                    "host_port",
                                    "protocol"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "restart_policy": {
                                "type": "string"
                              },
                              "started_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "created",
                              "environment",
                              "id",
                              "image",
                              "labels",
                              "name",
                              "networks",
                              "ports",
                              "restart_policy",
                              "started_at",
                              "state",
                              "status"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "containers",
                        "total"
                      ],
                      "type": "object"
                    },
                    "filesystem": {
                      "properties": {
                        "boot_usage": {
                          "properties": {
                            "free": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            },
                            "used": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "free",
                            "total",
                            "used"
                          ],
                          "type": "object"
                        },
                        "docker_vdisk": {
                          "properties": {
                            "free": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            },
                            "used": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "free",
                            "total",
                            "used"
                          ],
                          "type": "object"
                        },
                        "log_filesystem": {
                          "properties": {
                            "free": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            },
                            "used": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "free",
                            "total",
                            "used"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "boot_usage",
                        "docker_vdisk",
                        "log_filesystem"
                      ],
                      "type": "object"
                    },
                    "intel_gpu": {
                      "properties": {
                        "memory_total": {
                          "type": "integer"
                        },
                        "memory_used": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "temperature": {
                          "type": "integer"
                        },
                        "usage": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "memory_total",
                        "memory_used",
                        "name",
                        "temperature",
                        "usage"
                      ],
                      "type": "object"
                    },
                    "memory": {
                      "properties": {
                        "available": {
                          "type": "integer"
                        },
                        "buffers": {
                          "type": "integer"
                        },
                        "cached": {
                          "type": "integer"
                        },
                        "free": {
                          "type": "integer"
                        },
                        "percentage": {
                          "type": "number"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "used": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "available",
                        "buffers",
                        "cached",
                        "free",
                        "percentage",
                        "total",
                        "used"
                      ],
                      "type": "object"
                    },
                    "network": {
                      "properties": {
                        "interfaces": {
                          "items": {
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "rx_bytes": {
                                "type": "integer"
                              },
                              "rx_errors": {
                                "type": "integer"
                              },
                              "rx_packets": {
                                "type": "integer"
                              },
                              "tx_bytes": {
                                "type": "integer"
                              },
                              "tx_errors": {
                                "type": "integer"
                              },
                              "tx_packets": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "name",
                              "rx_bytes",
                              "rx_errors",
                              "rx_packets",
                              "tx_bytes",
                              "tx_errors",
                              "tx_packets"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "interfaces"
                      ],
                      "type": "object"
                    },
                    "temperature": {
                      "properties": {
                        "fans": {
                          "properties": {
                            "fan1": {
                              "properties": {
                                "input": {
                                  "type": "integer"
                                },
                                "label": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "input",
                                "label"
                              ],
                              "type": "object"
                            },
                            "fan2": {
                              "properties": {
                                "input": {
                                  "type": "integer"
                                },
                                "label": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "input",
                                "label"
                              ],
                              "type": "object"
                            },
                            "fan5": {
                              "properties": {
                                "input": {
                                  "type": "integer"
                                },
                                "label": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "input",
                                "label"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "fan1",
                            "fan2",
                            "fan5"
                          ],
                          "type": "object"
                        },
                        "sensor_chips": {
                          "properties": {
                            "coretemp-isa-0000": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "temperatures": {
                                  "properties": {
                                    "temp1": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    },
                                    "temp2": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    },
                                    "temp3": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    },
                                    "temp4": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    },
                                    "temp5": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    },
                                    "temp6": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    },
                                    "temp7": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "temp1",
                                    "temp2",
                                    "temp3",
                                    "temp4",
                                    "temp5",
                                    "temp6",
                                    "temp7"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "name",
                                "temperatures"
                              ],
                              "type": "object"
                            },
                            "iwlwifi_1-virtual-0": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "nct6793-isa-0290": {
                              "properties": {
                                "fans": {
                                  "properties": {
                                    "fan1": {
                                      "properties": {
                                        "input": {
                                          "type": "integer"
                                        },
                                        "label": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "input",
                                        "label"
                                      ],
                                      "type": "object"
                                    },
                                    "fan2": {
                                      "properties": {
                                        "input": {
                                          "type": "integer"
                                        },
                                        "label": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "input",
                                        "label"
                                      ],
                                      "type": "object"
                                    },
                                    "fan5": {
                                      "properties": {
                                        "input": {
                                          "type": "integer"
                                        },
                                        "label": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "input",
                                        "label"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "fan1",
                                    "fan2",
                                    "fan5"
                                  ],
                                  "type": "object"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "temperatures": {
                                  "properties": {
                                    "temp1": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    },
                                    "temp15": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    },
                                    "temp16": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    },
                                    "temp17": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    },
                                    "temp18": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    },
                                    "temp19": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    },
                                    "temp2": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    },
                                    "temp20": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    },
                                    "temp3": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    },
                                    "temp4": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    },
                                    "temp5": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    },
                                    "temp6": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    },
                                    "temp7": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_crit": {
                                          "type": "integer"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_crit",
                                        "temp_input",
                                        "temp_max"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "temp1",
                                    "temp15",
                                    "temp16",
                                    "temp17",
                                    "temp18",
                                    "temp19",
                                    "temp2",
                                    "temp20",
                                    "temp3",
                                    "temp4",
                                    "temp5",
                                    "temp6",
                                    "temp7"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "fans",
                                "name",
                                "temperatures"
                              ],
                              "type": "object"
                            },
                            "nvme-pci-0100": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "temperatures": {
                                  "properties": {
                                    "temp1": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_crit": {
                                          "type": "integer"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        },
                                        "temp_max": {
                                          "type": "integer"
                                        },
                                        "temp_min": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_crit",
                                        "temp_input",
                                        "temp_max",
                                        "temp_min"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "temp1"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "name",
                                "temperatures"
                              ],
                              "type": "object"
                            },
                            "pch_cannonlake-virtual-0": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "temperatures": {
                                  "properties": {
                                    "temp1": {
                                      "properties": {
                                        "label": {
                                          "type": "string"
                                        },
                                        "temp_input": {
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "temp_input"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "temp1"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "name",
                                "temperatures"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "coretemp-isa-0000",
                            "iwlwifi_1-virtual-0",
                            "nct6793-isa-0290",
                            "nvme-pci-0100",
                            "pch_cannonlake-virtual-0"
                          ],
                          "type": "object"
                        },
                        "sensors": {
                          "items": {
                            "properties": {
                              "chip": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "chip",
                              "name",
                              "unit",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "fans",
                        "sensor_chips",
                        "sensors"
                      ],
                      "type": "object"
                    },
                    "ups": {
                      "properties": {
                        "battery_charge": {
                          "type": "integer"
                        },
                        "runtime": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "battery_charge",
                        "runtime",
                        "status"
                      ],
                      "type": "object"
                    },
                    "vms": {
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "vms": {
                          "items": {
                            "properties": {
                              "architecture": {
                                "type": "string"
                              },
                              "autostart": {
                                "type": "boolean"
                              },
                              "cpus": {
                                "type": "integer"
                              },
                              "disks": {
                                "items": {
                                  "properties": {
                                    "bus": {
                                      "type": "string"
                                    },
                                    "device": {
                                      "type": "string"
                                    },
                                    "source": {
                                      "type": "string"
                                    },
                                    "target": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "bus",
                                    "device",
                                    "source",
                                    "target",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "graphics": {
                                "items": {
                                  "properties": {
                                    "listen": {
                                      "type": "string"
                                    },
                                    "port": {
                                      "type": "integer"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "listen",
                                    "port",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": {
                                "type": "integer"
                              },
                              "memory_kb": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "networks": {
                                "items": {
                                  "properties": {
                                    "bridge": {
                                      "type": "string"
                                    },
                                    "mac_address": {
                                      "type": "string"
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "source": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "bridge",
                                    "mac_address",
                                    "model",
                                    "source",
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "os_type": {
                                "type": "string"
                              },
                              "pci_devices": {
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "persistent": {
                                "type": "boolean"
                              },
                              "state": {
                                "type": "string"
                              },
                              "usb_devices": {
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "uuid": {
                                "format": "uuid",
                                "type": "string"
                              }
                            },
                            "required": [
                              "architecture",
                              "autostart",
                              "cpus",
                              "disks",
                              "graphics",
                              "id",
                              "memory_kb",
                              "name",
                              "networks",
                              "os_type",
                              "pci_devices",
                              "persistent",
                              "state",
                              "usb_devices",
                              "uuid"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "total",
                        "vms"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "array_state",
                    "array_usage",
                    "cpu",
                    "disks",
                    "docker",
                    "filesystem",
                    "intel_gpu",
                    "memory",
                    "network",
                    "temperature",
                    "ups",
                    "vms"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/storage/zfs": {
      "get": {
        "description": "Auto-generated schema for /api/v1/storage/zfs",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/cpu": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/cpu",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cores": 6,
                  "frequency": 800,
                  "model": "Intel(R) Core(TM) i7-8700K CPU @ 3.70GHz",
                  "temperature": 42,
                  "threads": 12,
                  "usage": 8.656036446469248
                },
                "schema": {
                  "properties": {
                    "cores": {
                      "type": "integer"
                    },
                    "frequency": {
                      "type": "integer"
                    },
                    "model": {
                      "format": "email",
                      "type": "string"
                    },
                    "temperature": {
                      "type": "integer"
                    },
                    "threads": {
                      "type": "integer"
                    },
                    "usage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "cores",
                    "frequency",
                    "model",
                    "temperature",
                    "threads",
                    "usage"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/fans": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/fans",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/filesystems": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/filesystems",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "boot_usage": {
                    "free": 28892708864,
                    "total": 30749130752,
                    "used": 1856421888
                  },
                  "docker_vdisk": {
                    "free": 148729327616,
                    "total": 161061273600,
                    "used": 12331945984
                  },
                  "log_filesystem": {
                    "free": 121995264,
                    "total": 134217728,
                    "used": 12222464
                  }
                },
                "schema": {
                  "properties": {
                    "boot_usage": {
                      "properties": {
                        "free": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "used": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "free",
                        "total",
                        "used"
                      ],
                      "type": "object"
                    },
                    "docker_vdisk": {
                      "properties": {
                        "free": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "used": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "free",
                        "total",
                        "used"
                      ],
                      "type": "object"
                    },
                    "log_filesystem": {
                      "properties": {
                        "free": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "used": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "free",
                        "total",
                        "used"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "boot_usage",
                    "docker_vdisk",
                    "log_filesystem"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/gpu": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/gpu",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "memory_total": 0,
                  "memory_used": 0,
                  "name": "Intel Corporation CoffeeLake-S GT2 [UHD Graphics 630] (prog-if 00 [VGA controller])",
                  "temperature": 0,
                  "usage": 0
                },
                "schema": {
                  "properties": {
                    "memory_total": {
                      "type": "integer"
                    },
                    "memory_used": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "temperature": {
                      "type": "integer"
                    },
                    "usage": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "memory_total",
                    "memory_used",
                    "name",
                    "temperature",
                    "usage"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/info": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/info",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "features": {
                    "sleep": false
                  },
                  "prefs": {
                    "number": ".,",
                    "unit": "C"
                  },
                  "samples": [
                    {
                      "condition": "neutral",
                      "key": "FAN",
                      "unit": "rpm",
                      "value": "792"
                    },
                    {
                      "condition": "neutral",
                      "key": "FAN",
                      "unit": "rpm",
                      "value": "939"
                    },
                    {
                      "condition": "neutral",
                      "key": "FAN",
                      "unit": "rpm",
                      "value": "56784"
                    },
                    {
                      "condition": "neutral",
                      "key": "BOARD",
                      "unit": "C",
                      "value": "36"
                    },
                    {
                      "condition": "neutral",
                      "key": "CPU",
                      "unit": "C",
                      "value": "42"
                    }
                  ],
                  "version": 2,
                  "wake": {
                    "broadcast": "255.255.255.255",
                    "mac": "70:85:c2:f7:49:21"
                  }
                },
                "schema": {
                  "properties": {
                    "features": {
                      "properties": {
                        "sleep": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "sleep"
                      ],
                      "type": "object"
                    },
                    "prefs": {
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "unit": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "number",
                        "unit"
                      ],
                      "type": "object"
                    },
                    "samples": {
                      "items": {
                        "properties": {
                          "condition": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "condition",
                          "key",
                          "unit",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "version": {
                      "type": "integer"
                    },
                    "wake": {
                      "properties": {
                        "broadcast": {
                          "type": "string"
                        },
                        "mac": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "broadcast",
                        "mac"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "features",
                    "prefs",
                    "samples",
                    "version",
                    "wake"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/logs": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/logs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  "Jun 22 18:32:03 Cube sshd-session[4186594]: Disconnected from user root 192.168.20.34 port 58364",
                  "Jun 22 18:32:03 Cube sshd-session[4186586]: pam_unix(sshd:session): session closed for user root",
                  "Jun 22 18:32:03 Cube elogind-daemon[1772]: Removed session 501.",
                  "Jun 22 18:32:21 Cube sshd-session[4188945]: Connection from 192.168.20.34 port 58381 on 192.168.20.21 port 22 rdomain \"\"",
                  "Jun 22 18:32:21 Cube sshd-session[4188945]: Postponed keyboard-interactive for root from 192.168.20.34 port 58381 ssh2 [preauth]",
                  "Jun 22 18:32:21 Cube sshd-session[4188945]: Postponed keyboard-interactive/pam for root from 192.168.20.34 port 58381 ssh2 [preauth]",
                  "Jun 22 18:32:21 Cube sshd-session[4188945]: Accepted keyboard-interactive/pam for root from 192.168.20.34 port 58381 ssh2",
                  "Jun 22 18:32:21 Cube sshd-session[4188945]: pam_unix(sshd:session): session opened for user root(uid=0) by (uid=0)",
                  "Jun 22 18:32:21 Cube elogind-daemon[1772]: New session 502 of user root.",
                  "Jun 22 18:32:21 Cube sshd-session[4188945]: User child is on pid 4188959",
                  "Jun 22 18:32:21 Cube sshd-session[4188959]: Starting session: command for root from 192.168.20.34 port 58381 id 0",
                  "Jun 22 18:32:50 Cube sshd-session[4188959]: Close session: user root from 192.168.20.34 port 58381 id 0",
                  "Jun 22 18:32:50 Cube sshd-session[4188959]: Received disconnect from 192.168.20.34 port 58381:11: disconnected by user",
                  "Jun 22 18:32:50 Cube sshd-session[4188959]: Disconnected from user root 192.168.20.34 port 58381",
                  "Jun 22 18:32:50 Cube sshd-session[4188945]: pam_unix(sshd:session): session closed for user root",
                  "Jun 22 18:32:50 Cube elogind-daemon[1772]: Removed session 502.",
                  "Jun 22 18:33:25 Cube sshd-session[4193629]: Connection from 192.168.20.34 port 58406 on 192.168.20.21 port 22 rdomain \"\"",
                  "Jun 22 18:33:25 Cube sshd-session[4193629]: Postponed keyboard-interactive for root from 192.168.20.34 port 58406 ssh2 [preauth]",
                  "Jun 22 18:33:25 Cube sshd-session[4193629]: Postponed keyboard-interactive/pam for root from 192.168.20.34 port 58406 ssh2 [preauth]",
                  "Jun 22 18:33:25 Cube sshd-session[4193629]: Accepted keyboard-interactive/pam for root from 192.168.20.34 port 58406 ssh2",
                  "Jun 22 18:33:25 Cube sshd-session[4193629]: pam_unix(sshd:session): session opened for user root(uid=0) by (uid=0)",
                  "Jun 22 18:33:25 Cube elogind-daemon[1772]: New session 503 of user root.",
                  "Jun 22 18:33:25 Cube sshd-session[4193629]: User child is on pid 4193645",
                  "Jun 22 18:33:25 Cube sshd-session[4193645]: Starting session: command for root from 192.168.20.34 port 58406 id 0",
                  "Jun 22 18:33:27 Cube sshd-session[4193645]: Received disconnect from 192.168.20.34 port 58406:11: disconnected by user",
                  "Jun 22 18:33:27 Cube sshd-session[4193645]: Disconnected from user root 192.168.20.34 port 58406",
                  "Jun 22 18:33:27 Cube sshd-session[4193629]: pam_unix(sshd:session): session closed for user root",
                  "Jun 22 18:33:27 Cube elogind-daemon[1772]: Removed session 503.",
                  "Jun 22 18:33:42 Cube sshd-session[1273]: Connection from 192.168.20.34 port 58414 on 192.168.20.21 port 22 rdomain \"\"",
                  "Jun 22 18:33:42 Cube sshd-session[1273]: Postponed keyboard-interactive for root from 192.168.20.34 port 58414 ssh2 [preauth]",
                  "Jun 22 18:33:42 Cube sshd-session[1273]: Postponed keyboard-interactive/pam for root from 192.168.20.34 port 58414 ssh2 [preauth]",
                  "Jun 22 18:33:42 Cube sshd-session[1273]: Accepted keyboard-interactive/pam for root from 192.168.20.34 port 58414 ssh2",
                  "Jun 22 18:33:42 Cube sshd-session[1273]: pam_unix(sshd:session): session opened for user root(uid=0) by (uid=0)",
                  "Jun 22 18:33:42 Cube elogind-daemon[1772]: New session 504 of user root.",
                  "Jun 22 18:33:42 Cube sshd-session[1273]: User child is on pid 1294",
                  "Jun 22 18:33:42 Cube sshd-session[1294]: Starting session: command for root from 192.168.20.34 port 58414 id 0",
                  "Jun 22 18:33:43 Cube sshd-session[1294]: Received disconnect from 192.168.20.34 port 58414:11: disconnected by user",
                  "Jun 22 18:33:43 Cube sshd-session[1294]: Disconnected from user root 192.168.20.34 port 58414",
                  "Jun 22 18:33:43 Cube sshd-session[1273]: pam_unix(sshd:session): session closed for user root",
                  "Jun 22 18:33:43 Cube elogind-daemon[1772]: Removed session 504."
                ],
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/logs/all": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/logs/all",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/memory": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/memory",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "available": 26203770880,
                  "buffers": 7155712,
                  "cached": 25126395904,
                  "free": 999546880,
                  "percentage": 21.37714386420454,
                  "total": 33328439296,
                  "used": 7124668416
                },
                "schema": {
                  "properties": {
                    "available": {
                      "type": "integer"
                    },
                    "buffers": {
                      "type": "integer"
                    },
                    "cached": {
                      "type": "integer"
                    },
                    "free": {
                      "type": "integer"
                    },
                    "percentage": {
                      "type": "number"
                    },
                    "total": {
                      "type": "integer"
                    },
                    "used": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "available",
                    "buffers",
                    "cached",
                    "free",
                    "percentage",
                    "total",
                    "used"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/network": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/network",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "interfaces": [
                    {
                      "name": "tunl0",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 0,
                      "tx_errors": 0,
                      "tx_packets": 0
                    },
                    {
                      "name": "wlan0",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 0,
                      "tx_errors": 0,
                      "tx_packets": 0
                    },
                    {
                      "name": "eth0",
                      "rx_bytes": 36759478500,
                      "rx_errors": 0,
                      "rx_packets": 34835771,
                      "tx_bytes": 2730804281,
                      "tx_errors": 0,
                      "tx_packets": 9026349
                    },
                    {
                      "name": "eth1",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 0,
                      "tx_errors": 0,
                      "tx_packets": 0
                    },
                    {
                      "name": "br0",
                      "rx_bytes": 33811931346,
                      "rx_errors": 0,
                      "rx_packets": 13248768,
                      "tx_bytes": 2153925317,
                      "tx_errors": 0,
                      "tx_packets": 4917896
                    },
                    {
                      "name": "vhost1",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 0,
                      "tx_errors": 0,
                      "tx_packets": 0
                    },
                    {
                      "name": "docker0",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 0,
                      "tx_errors": 0,
                      "tx_packets": 0
                    },
                    {
                      "name": "br-3cc0fa14431c",
                      "rx_bytes": 716019747,
                      "rx_errors": 0,
                      "rx_packets": 1836641,
                      "tx_bytes": 28062884164,
                      "tx_errors": 0,
                      "tx_packets": 4669410
                    },
                    {
                      "name": "br-f063b8e6a1ab",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 0,
                      "tx_errors": 0,
                      "tx_packets": 0
                    },
                    {
                      "name": "shim-br0",
                      "rx_bytes": 33720709488,
                      "rx_errors": 0,
                      "rx_packets": 11887506,
                      "tx_bytes": 1766389969,
                      "tx_errors": 0,
                      "tx_packets": 1782742
                    },
                    {
                      "name": "virbr0",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 2000,
                      "tx_errors": 0,
                      "tx_packets": 28
                    },
                    {
                      "name": "vnet0",
                      "rx_bytes": 536916307,
                      "rx_errors": 0,
                      "rx_packets": 3420449,
                      "tx_bytes": 2041042688,
                      "tx_errors": 0,
                      "tx_packets": 7241327
                    },
                    {
                      "name": "vnet1",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 196,
                      "tx_errors": 0,
                      "tx_packets": 2
                    },
                    {
                      "name": "veth7940057",
                      "rx_bytes": 5601131,
                      "rx_errors": 0,
                      "rx_packets": 10899,
                      "tx_bytes": 5134622,
                      "tx_errors": 0,
                      "tx_packets": 44295
                    },
                    {
                      "name": "veth4e783c4",
                      "rx_bytes": 2930555,
                      "rx_errors": 0,
                      "rx_packets": 25638,
                      "tx_bytes": 10269106,
                      "tx_errors": 0,
                      "tx_packets": 51096
                    },
                    {
                      "name": "veth49632a1",
                      "rx_bytes": 25603,
                      "rx_errors": 0,
                      "rx_packets": 95,
                      "tx_bytes": 3362233,
                      "tx_errors": 0,
                      "tx_packets": 29857
                    },
                    {
                      "name": "veth88208dc",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 3309261,
                      "tx_errors": 0,
                      "tx_packets": 29758
                    },
                    {
                      "name": "veth2cd6a79",
                      "rx_bytes": 0,
                      "rx_errors": 0,
                      "rx_packets": 0,
                      "tx_bytes": 3303511,
                      "tx_errors": 0,
                      "tx_packets": 29740
                    },
                    {
                      "name": "veth2c99be2",
                      "rx_bytes": 92192,
                      "rx_errors": 0,
                      "rx_packets": 339,
                      "tx_bytes": 3477982,
                      "tx_errors": 0,
                      "tx_packets": 30020
                    },
                    {
                      "name": "veth35fcd22",
                      "rx_bytes": 3752523,
                      "rx_errors": 0,
                      "rx_packets": 34373,
                      "tx_bytes": 61887830,
                      "tx_errors": 0,
                      "tx_packets": 62658
                    },
                    {
                      "name": "vethcccf285",
                      "rx_bytes": 3518490,
                      "rx_errors": 0,
                      "rx_packets": 19690,
                      "tx_bytes": 3787605,
                      "tx_errors": 0,
                      "tx_packets": 43288
                    },
                    {
                      "name": "veth9144fc0",
                      "rx_bytes": 4266975,
                      "rx_errors": 0,
                      "rx_packets": 31801,
                      "tx_bytes": 37997901,
                      "tx_errors": 0,
                      "tx_packets": 60957
                    },
                    {
                      "name": "veth9acab88",
                      "rx_bytes": 707326,
                      "rx_errors": 0,
                      "rx_packets": 7593,
                      "tx_bytes": 3810700,
                      "tx_errors": 0,
                      "tx_packets": 35488
                    },
                    {
                      "name": "vethf5db0b6",
                      "rx_bytes": 6631238,
                      "rx_errors": 0,
                      "rx_packets": 779,
                      "tx_bytes": 727192,
                      "tx_errors": 0,
                      "tx_packets": 4012
                    }
                  ]
                },
                "schema": {
                  "properties": {
                    "interfaces": {
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "rx_bytes": {
                            "type": "integer"
                          },
                          "rx_errors": {
                            "type": "integer"
                          },
                          "rx_packets": {
                            "type": "integer"
                          },
                          "tx_bytes": {
                            "type": "integer"
                          },
                          "tx_errors": {
                            "type": "integer"
                          },
                          "tx_packets": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name",
                          "rx_bytes",
                          "rx_errors",
                          "rx_packets",
                          "tx_bytes",
                          "tx_errors",
                          "tx_packets"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "interfaces"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/parity/check": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/parity/check",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/parity/disk": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/parity/disk",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/resources": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/resources",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "cpu": {
                    "cores": 6,
                    "frequency_mhz": 799,
                    "model": "Intel(R) Core(TM) i7-8700K CPU @ 3.70GHz",
                    "temperature": 41,
                    "threads": 12,
                    "usage_percent": 6.679511881824022
                  },
                  "load": {
                    "load_15min": 0.72,
                    "load_1min": 0.95,
                    "load_5min": 0.82
                  },
                  "memory": {
                    "available_bytes": 26203717632,
                    "available_formatted": "24.4 MB",
                    "breakdown": {
                      "docker_bytes": 693805056,
                      "docker_formatted": "661.7 KB",
                      "docker_percent": 2.081720808580643,
                      "other_bytes": 0,
                      "other_formatted": "0 B",
                      "other_percent": 0,
                      "system_bytes": 3890263160,
                      "system_formatted": "3.6 MB",
                      "system_percent": 11.672503250000368,
                      "vm_bytes": 2536689664,
                      "vm_formatted": "2.4 MB",
                      "vm_percent": 7.611186474922777,
                      "zfs_cache_bytes": 3963784,
                      "zfs_cache_formatted": "3.8 KB",
                      "zfs_cache_percent": 0.011893098157991826
                    },
                    "buffers_bytes": 7155712,
                    "buffers_formatted": "6.8 KB",
                    "cached_bytes": 25126404096,
                    "cached_formatted": "23.4 MB",
                    "free_bytes": 999493632,
                    "free_formatted": "953.2 KB",
                    "total_bytes": 33328439296,
                    "total_formatted": "31.0 MB",
                    "used_bytes": 7124721664,
                    "used_formatted": "6.6 MB",
                    "used_percent": 21.377303631661782
                  },
                  "network": [
                    {
                      "bytes_received": 0,
                      "bytes_sent": 0,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "tunl0",
                      "packets_received": 0,
                      "packets_sent": 0
                    },
                    {
                      "bytes_received": 0,
                      "bytes_sent": 0,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "wlan0",
                      "packets_received": 0,
                      "packets_sent": 0
                    },
                    {
                      "bytes_received": 36759480211,
                      "bytes_sent": 2730808818,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "eth0",
                      "packets_received": 34835785,
                      "packets_sent": 9026355
                    },
                    {
                      "bytes_received": 0,
                      "bytes_sent": 0,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "eth1",
                      "packets_received": 0,
                      "packets_sent": 0
                    },
                    {
                      "bytes_received": 33811932762,
                      "bytes_sent": 2153929722,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "br0",
                      "packets_received": 13248781,
                      "packets_sent": 4917900
                    },
                    {
                      "bytes_received": 0,
                      "bytes_sent": 0,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "vhost1",
                      "packets_received": 0,
                      "packets_sent": 0
                    },
                    {
                      "bytes_received": 0,
                      "bytes_sent": 0,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "docker0",
                      "packets_received": 0,
                      "packets_sent": 0
                    },
                    {
                      "bytes_received": 716019747,
                      "bytes_sent": 28062884164,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "br-3cc0fa14431c",
                      "packets_received": 1836641,
                      "packets_sent": 4669410
                    },
                    {
                      "bytes_received": 0,
                      "bytes_sent": 0,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "br-f063b8e6a1ab",
                      "packets_received": 0,
                      "packets_sent": 0
                    },
                    {
                      "bytes_received": 33720710691,
                      "bytes_sent": 1766394374,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "shim-br0",
                      "packets_received": 11887516,
                      "packets_sent": 1782746
                    },
                    {
                      "bytes_received": 0,
                      "bytes_sent": 2000,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "virbr0",
                      "packets_received": 0,
                      "packets_sent": 28
                    },
                    {
                      "bytes_received": 536916307,
                      "bytes_sent": 2041043450,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "vnet0",
                      "packets_received": 3420449,
                      "packets_sent": 7241333
                    },
                    {
                      "bytes_received": 0,
                      "bytes_sent": 196,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "vnet1",
                      "packets_received": 0,
                      "packets_sent": 2
                    },
                    {
                      "bytes_received": 5601131,
                      "bytes_sent": 5134622,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "veth7940057",
                      "packets_received": 10899,
                      "packets_sent": 44295
                    },
                    {
                      "bytes_received": 2930555,
                      "bytes_sent": 10269106,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "veth4e783c4",
                      "packets_received": 25638,
                      "packets_sent": 51096
                    },
                    {
                      "bytes_received": 25603,
                      "bytes_sent": 3362233,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "veth49632a1",
                      "packets_received": 95,
                      "packets_sent": 29857
                    },
                    {
                      "bytes_received": 0,
                      "bytes_sent": 3309261,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "veth88208dc",
                      "packets_received": 0,
                      "packets_sent": 29758
                    },
                    {
                      "bytes_received": 0,
                      "bytes_sent": 3303511,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "veth2cd6a79",
                      "packets_received": 0,
                      "packets_sent": 29740
                    },
                    {
                      "bytes_received": 92192,
                      "bytes_sent": 3477982,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "veth2c99be2",
                      "packets_received": 339,
                      "packets_sent": 30020
                    },
                    {
                      "bytes_received": 3752523,
                      "bytes_sent": 61887830,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "veth35fcd22",
                      "packets_received": 34373,
                      "packets_sent": 62658
                    },
                    {
                      "bytes_received": 3518490,
                      "bytes_sent": 3787605,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "vethcccf285",
                      "packets_received": 19690,
                      "packets_sent": 43288
                    },
                    {
                      "bytes_received": 4266975,
                      "bytes_sent": 37997901,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "veth9144fc0",
                      "packets_received": 31801,
                      "packets_sent": 60957
                    },
                    {
                      "bytes_received": 707326,
                      "bytes_sent": 3810700,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "veth9acab88",
                      "packets_received": 7593,
                      "packets_sent": 35488
                    },
                    {
                      "bytes_received": 6631238,
                      "bytes_sent": 727192,
                      "errors_received": 0,
                      "errors_sent": 0,
                      "interface": "vethf5db0b6",
                      "packets_received": 779,
                      "packets_sent": 4012
                    }
                  ],
                  "uptime": {
                    "idle_seconds": 5862448.38,
                    "uptime_seconds": 532301.48
                  }
                },
                "schema": {
                  "properties": {
                    "cpu": {
                      "properties": {
                        "cores": {
                          "type": "integer"
                        },
                        "frequency_mhz": {
                          "type": "integer"
                        },
                        "model": {
                          "format": "email",
                          "type": "string"
                        },
                        "temperature": {
                          "type": "integer"
                        },
                        "threads": {
                          "type": "integer"
                        },
                        "usage_percent": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "cores",
                        "frequency_mhz",
                        "model",
                        "temperature",
                        "threads",
                        "usage_percent"
                      ],
                      "type": "object"
                    },
                    "load": {
                      "properties": {
                        "load_15min": {
                          "type": "number"
                        },
                        "load_1min": {
                          "type": "number"
                        },
                        "load_5min": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "load_15min",
                        "load_1min",
                        "load_5min"
                      ],
                      "type": "object"
                    },
                    "memory": {
                      "properties": {
                        "available_bytes": {
                          "type": "integer"
                        },
                        "available_formatted": {
                          "type": "string"
                        },
                        "breakdown": {
                          "properties": {
                            "docker_bytes": {
                              "type": "integer"
                            },
                            "docker_formatted": {
                              "type": "string"
                            },
                            "docker_percent": {
                              "type": "number"
                            },
                            "other_bytes": {
                              "type": "integer"
                            },
                            "other_formatted": {
                              "type": "string"
                            },
                            "other_percent": {
                              "type": "integer"
                            },
                            "system_bytes": {
                              "type": "integer"
                            },
                            "system_formatted": {
                              "type": "string"
                            },
                            "system_percent": {
                              "type": "number"
                            },
                            "vm_bytes": {
                              "type": "integer"
                            },
                            "vm_formatted": {
                              "type": "string"
                            },
                            "vm_percent": {
                              "type": "number"
                            },
                            "zfs_cache_bytes": {
                              "type": "integer"
                            },
                            "zfs_cache_formatted": {
                              "type": "string"
                            },
                            "zfs_cache_percent": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "docker_bytes",
                            "docker_formatted",
                            "docker_percent",
                            "other_bytes",
                            "other_formatted",
                            "other_percent",
                            "system_bytes",
                            "system_formatted",
                            "system_percent",
                            "vm_bytes",
                            "vm_formatted",
                            "vm_percent",
                            "zfs_cache_bytes",
                            "zfs_cache_formatted",
                            "zfs_cache_percent"
                          ],
                          "type": "object"
                        },
                        "buffers_bytes": {
                          "type": "integer"
                        },
                        "buffers_formatted": {
                          "type": "string"
                        },
                        "cached_bytes": {
                          "type": "integer"
                        },
                        "cached_formatted": {
                          "type": "string"
                        },
                        "free_bytes": {
                          "type": "integer"
                        },
                        "free_formatted": {
                          "type": "string"
                        },
                        "total_bytes": {
                          "type": "integer"
                        },
                        "total_formatted": {
                          "type": "string"
                        },
                        "used_bytes": {
                          "type": "integer"
                        },
                        "used_formatted": {
                          "type": "string"
                        },
                        "used_percent": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "available_bytes",
                        "available_formatted",
                        "breakdown",
                        "buffers_bytes",
                        "buffers_formatted",
                        "cached_bytes",
                        "cached_formatted",
                        "free_bytes",
                        "free_formatted",
                        "total_bytes",
                        "total_formatted",
                        "used_bytes",
                        "used_formatted",
                        "used_percent"
                      ],
                      "type": "object"
                    },
                    "network": {
                      "items": {
                        "properties": {
                          "bytes_received": {
                            "type": "integer"
                          },
                          "bytes_sent": {
                            "type": "integer"
                          },
                          "errors_received": {
                            "type": "integer"
                          },
                          "errors_sent": {
                            "type": "integer"
                          },
                          "interface": {
                            "type": "string"
                          },
                          "packets_received": {
                            "type": "integer"
                          },
                          "packets_sent": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "bytes_received",
                          "bytes_sent",
                          "errors_received",
                          "errors_sent",
                          "interface",
                          "packets_received",
                          "packets_sent"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "uptime": {
                      "properties": {
                        "idle_seconds": {
                          "type": "number"
                        },
                        "uptime_seconds": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "idle_seconds",
                        "uptime_seconds"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "cpu",
                    "load",
                    "memory",
                    "network",
                    "uptime"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/scripts": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/scripts",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/temperature": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/temperature",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "fans": {
                    "fan1": {
                      "input": 792,
                      "label": "CPU Fan"
                    },
                    "fan2": {
                      "input": 939,
                      "label": "System Fan 1"
                    },
                    "fan5": {
                      "input": 56784,
                      "label": "System Fan 4"
                    }
                  },
                  "sensor_chips": {
                    "coretemp-isa-0000": {
                      "name": "coretemp-isa-0000",
                      "temperatures": {
                        "temp1": {
                          "label": "Package id 0",
                          "temp_input": 43000,
                          "temp_max": 82000
                        },
                        "temp2": {
                          "label": "Core 0",
                          "temp_input": 33000,
                          "temp_max": 82000
                        },
                        "temp3": {
                          "label": "Core 1",
                          "temp_input": 35000,
                          "temp_max": 82000
                        },
                        "temp4": {
                          "label": "Core 2",
                          "temp_input": 34000,
                          "temp_max": 82000
                        },
                        "temp5": {
                          "label": "Core 3",
                          "temp_input": 35000,
                          "temp_max": 82000
                        },
                        "temp6": {
                          "label": "Core Temperature 6",
                          "temp_input": 43000,
                          "temp_max": 82000
                        },
                        "temp7": {
                          "label": "Core Temperature 7",
                          "temp_input": 34000,
                          "temp_max": 82000
                        }
                      }
                    },
                    "iwlwifi_1-virtual-0": {
                      "name": "iwlwifi_1-virtual-0"
                    },
                    "nct6793-isa-0290": {
                      "fans": {
                        "fan1": {
                          "input": 792,
                          "label": "CPU Fan"
                        },
                        "fan2": {
                          "input": 939,
                          "label": "System Fan 1"
                        },
                        "fan5": {
                          "input": 56784,
                          "label": "System Fan 4"
                        }
                      },
                      "name": "nct6793-isa-0290",
                      "temperatures": {
                        "temp1": {
                          "label": "SYSTIN",
                          "temp_input": 116000,
                          "temp_max": 35000
                        },
                        "temp15": {
                          "label": "Temperature 15",
                          "temp_input": 3892313987
                        },
                        "temp16": {
                          "label": "Temperature 16",
                          "temp_input": 3892313987
                        },
                        "temp17": {
                          "label": "Temperature 17",
                          "temp_input": 3892313987
                        },
                        "temp18": {
                          "label": "Temperature 18",
                          "temp_input": 3892313987
                        },
                        "temp19": {
                          "label": "Temperature 19",
                          "temp_input": 3892313987
                        },
                        "temp2": {
                          "label": "AUXTIN0",
                          "temp_input": 35000,
                          "temp_max": 35000
                        },
                        "temp20": {
                          "label": "Temperature 20",
                          "temp_input": 3892313987
                        },
                        "temp3": {
                          "label": "AUXTIN1",
                          "temp_input": 34000,
                          "temp_max": 35000
                        },
                        "temp4": {
                          "label": "AUXTIN2",
                          "temp_input": 108000
                        },
                        "temp5": {
                          "label": "Temperature 5",
                          "temp_input": 109000
                        },
                        "temp6": {
                          "label": "Temperature 6",
                          "temp_input": 108000
                        },
                        "temp7": {
                          "label": "Temperature 7",
                          "temp_crit": 100000,
                          "temp_input": 36000,
                          "temp_max": 35000
                        }
                      }
                    },
                    "nvme-pci-0100": {
                      "name": "nvme-pci-0100",
                      "temperatures": {
                        "temp1": {
                          "label": "Temperature 1",
                          "temp_crit": 109850,
                          "temp_input": 28850,
                          "temp_max": 99850,
                          "temp_min": -150
                        }
                      }
                    },
                    "pch_cannonlake-virtual-0": {
                      "name": "pch_cannonlake-virtual-0",
                      "temperatures": {
                        "temp1": {
                          "label": "Temperature 1",
                          "temp_input": 42000
                        }
                      }
                    }
                  },
                  "sensors": [
                    {
                      "chip": "nvme-pci-0100",
                      "name": "nvme-pci-0100 - Temperature 1",
                      "unit": "Â°C",
                      "value": 28.85
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - Temperature 5",
                      "unit": "Â°C",
                      "value": 109
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - Temperature 7",
                      "unit": "Â°C",
                      "value": 36
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - Temperature 15",
                      "unit": "Â°C",
                      "value": 3892313.987
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - Temperature 17",
                      "unit": "Â°C",
                      "value": 3892313.987
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - Temperature 18",
                      "unit": "Â°C",
                      "value": 3892313.987
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - SYSTIN",
                      "unit": "Â°C",
                      "value": 116
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - AUXTIN0",
                      "unit": "Â°C",
                      "value": 35
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - AUXTIN2",
                      "unit": "Â°C",
                      "value": 108
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - Temperature 6",
                      "unit": "Â°C",
                      "value": 108
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - Temperature 16",
                      "unit": "Â°C",
                      "value": 3892313.987
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - Temperature 19",
                      "unit": "Â°C",
                      "value": 3892313.987
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - Temperature 20",
                      "unit": "Â°C",
                      "value": 3892313.987
                    },
                    {
                      "chip": "nct6793-isa-0290",
                      "name": "nct6793-isa-0290 - AUXTIN1",
                      "unit": "Â°C",
                      "value": 34
                    },
                    {
                      "chip": "coretemp-isa-0000",
                      "name": "coretemp-isa-0000 - Core Temperature 7",
                      "unit": "Â°C",
                      "value": 34
                    },
                    {
                      "chip": "coretemp-isa-0000",
                      "name": "coretemp-isa-0000 - Package id 0",
                      "unit": "Â°C",
                      "value": 43
                    },
                    {
                      "chip": "coretemp-isa-0000",
                      "name": "coretemp-isa-0000 - Core 0",
                      "unit": "Â°C",
                      "value": 33
                    },
                    {
                      "chip": "coretemp-isa-0000",
                      "name": "coretemp-isa-0000 - Core 1",
                      "unit": "Â°C",
                      "value": 35
                    },
                    {
                      "chip": "coretemp-isa-0000",
                      "name": "coretemp-isa-0000 - Core 2",
                      "unit": "Â°C",
                      "value": 34
                    },
                    {
                      "chip": "coretemp-isa-0000",
                      "name": "coretemp-isa-0000 - Core 3",
                      "unit": "Â°C",
                      "value": 35
                    },
                    {
                      "chip": "coretemp-isa-0000",
                      "name": "coretemp-isa-0000 - Core Temperature 6",
                      "unit": "Â°C",
                      "value": 43
                    },
                    {
                      "chip": "pch_cannonlake-virtual-0",
                      "name": "pch_cannonlake-virtual-0 - Temperature 1",
                      "unit": "Â°C",
                      "value": 42
                    },
                    {
                      "chip": "system",
                      "name": "CPU",
                      "unit": "Â°C",
                      "value": 40
                    }
                  ]
                },
                "schema": {
                  "properties": {
                    "fans": {
                      "properties": {
                        "fan1": {
                          "properties": {
                            "input": {
                              "type": "integer"
                            },
                            "label": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "input",
                            "label"
                          ],
                          "type": "object"
                        },
                        "fan2": {
                          "properties": {
                            "input": {
                              "type": "integer"
                            },
                            "label": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "input",
                            "label"
                          ],
                          "type": "object"
                        },
                        "fan5": {
                          "properties": {
                            "input": {
                              "type": "integer"
                            },
                            "label": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "input",
                            "label"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "fan1",
                        "fan2",
                        "fan5"
                      ],
                      "type": "object"
                    },
                    "sensor_chips": {
                      "properties": {
                        "coretemp-isa-0000": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "temperatures": {
                              "properties": {
                                "temp1": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                },
                                "temp2": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                },
                                "temp3": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                },
                                "temp4": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                },
                                "temp5": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                },
                                "temp6": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                },
                                "temp7": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "temp1",
                                "temp2",
                                "temp3",
                                "temp4",
                                "temp5",
                                "temp6",
                                "temp7"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "name",
                            "temperatures"
                          ],
                          "type": "object"
                        },
                        "iwlwifi_1-virtual-0": {
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "nct6793-isa-0290": {
                          "properties": {
                            "fans": {
                              "properties": {
                                "fan1": {
                                  "properties": {
                                    "input": {
                                      "type": "integer"
                                    },
                                    "label": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "input",
                                    "label"
                                  ],
                                  "type": "object"
                                },
                                "fan2": {
                                  "properties": {
                                    "input": {
                                      "type": "integer"
                                    },
                                    "label": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "input",
                                    "label"
                                  ],
                                  "type": "object"
                                },
                                "fan5": {
                                  "properties": {
                                    "input": {
                                      "type": "integer"
                                    },
                                    "label": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "input",
                                    "label"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "fan1",
                                "fan2",
                                "fan5"
                              ],
                              "type": "object"
                            },
                            "name": {
                              "type": "string"
                            },
                            "temperatures": {
                              "properties": {
                                "temp1": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                },
                                "temp15": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                },
                                "temp16": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                },
                                "temp17": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                },
                                "temp18": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                },
                                "temp19": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                },
                                "temp2": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                },
                                "temp20": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                },
                                "temp3": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                },
                                "temp4": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                },
                                "temp5": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                },
                                "temp6": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                },
                                "temp7": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_crit": {
                                      "type": "integer"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_crit",
                                    "temp_input",
                                    "temp_max"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "temp1",
                                "temp15",
                                "temp16",
                                "temp17",
                                "temp18",
                                "temp19",
                                "temp2",
                                "temp20",
                                "temp3",
                                "temp4",
                                "temp5",
                                "temp6",
                                "temp7"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "fans",
                            "name",
                            "temperatures"
                          ],
                          "type": "object"
                        },
                        "nvme-pci-0100": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "temperatures": {
                              "properties": {
                                "temp1": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_crit": {
                                      "type": "integer"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    },
                                    "temp_max": {
                                      "type": "integer"
                                    },
                                    "temp_min": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_crit",
                                    "temp_input",
                                    "temp_max",
                                    "temp_min"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "temp1"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "name",
                            "temperatures"
                          ],
                          "type": "object"
                        },
                        "pch_cannonlake-virtual-0": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "temperatures": {
                              "properties": {
                                "temp1": {
                                  "properties": {
                                    "label": {
                                      "type": "string"
                                    },
                                    "temp_input": {
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "temp_input"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "temp1"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "name",
                            "temperatures"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "coretemp-isa-0000",
                        "iwlwifi_1-virtual-0",
                        "nct6793-isa-0290",
                        "nvme-pci-0100",
                        "pch_cannonlake-virtual-0"
                      ],
                      "type": "object"
                    },
                    "sensors": {
                      "items": {
                        "properties": {
                          "chip": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "chip",
                          "name",
                          "unit",
                          "value"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "fans",
                    "sensor_chips",
                    "sensors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/temperature/alerts": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/temperature/alerts",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/temperature/thresholds": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/temperature/thresholds",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/system/ups": {
      "get": {
        "description": "Auto-generated schema for /api/v1/system/ups",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "battery_charge": 0,
                  "runtime": 0,
                  "status": "unknown"
                },
                "schema": {
                  "properties": {
                    "battery_charge": {
                      "type": "integer"
                    },
                    "runtime": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "battery_charge",
                    "runtime",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/vms": {
      "get": {
        "description": "Auto-generated schema for /api/v1/vms",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/vms/": {
      "get": {
        "description": "Auto-generated schema for /api/v1/vms/",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    },
    "/api/v1/ws": {
      "get": {
        "description": "Auto-generated schema for /api/v1/ws",
        "responses": {
          "404": {
            "content": {
              "text/plain; charset=utf-8": {
                "example": "404 page not found\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Generated from live API response"
      }
    }
  },
  "components": {
    "schemas": {}
  },
  "x-generated": {
    "base_url": "http://192.168.20.21:34600",
    "endpoints_analyzed": 60,
    "generator": "UMA Schema Generator",
    "timestamp": "2025-06-22T08:34:06Z"
  }
}